<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>柠檬</title>
  
  <subtitle>Just do it!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lemon2013.github.io/"/>
  <updated>2019-01-06T06:28:44.670Z</updated>
  <id>https://lemon2013.github.io/</id>
  
  <author>
    <name>lemon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于博客那点事</title>
    <link href="https://lemon2013.github.io/2019/12/20/Introduction/"/>
    <id>https://lemon2013.github.io/2019/12/20/Introduction/</id>
    <published>2019-12-20T13:13:48.000Z</published>
    <updated>2019-01-06T06:28:44.670Z</updated>
    
    <content type="html"><![CDATA[<p>我从来没有感觉到与一个人如此心灵相通<br>同时又如此无助<br>直到那天<br>我Baidu无果，想尽办法Google到一个问题<a id="more"></a><br>那个人遇到过一个跟我一样的问题<br>没有回帖<br>发帖时间：1970年1月1日</p><p>请问此刻的你有什么获奖感言？是否很想问这位大侠后来呢？也许你会留下你的评论，“大侠我也遇到过同样的问题，请问后面是怎么解决的？大侠…大侠..你还在吗？”<br><img src="/img/wisdom_of_the_ancients.png" alt="首页"><br>当然这只是一个<a href="https://explainextended.com/2014/07/09/top-5-xkcd-comics-which-can-illustrate-programming-questions/" target="_blank" rel="noopener">笑话</a>，关于博客，其实我一直有这样一个想法，想把自己的所遇所知分享给大家，也许在未来的某一天能有幸与你相遇。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我从来没有感觉到与一个人如此心灵相通&lt;br&gt;同时又如此无助&lt;br&gt;直到那天&lt;br&gt;我Baidu无果，想尽办法Google到一个问题
    
    </summary>
    
      <category term="日记" scheme="https://lemon2013.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="随记" scheme="https://lemon2013.github.io/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>kafka入门（一）主题与日志</title>
    <link href="https://lemon2013.github.io/2019/10/20/kafka%E5%85%A5%E9%97%A8%E4%B9%8B%E4%B8%BB%E9%A2%98%E4%B8%8E%E6%97%A5%E5%BF%97/"/>
    <id>https://lemon2013.github.io/2019/10/20/kafka入门之主题与日志/</id>
    <published>2019-10-20T07:17:48.000Z</published>
    <updated>2019-10-20T04:24:19.678Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h1><p>主题是存储消息的一个逻辑概念，可以简单理解为一类消息的集合，有使用方去创建。Kafka中的主题一般会有多个订阅者去消费对应主题的消息，也可以存在多个生产者往主题中写入消息。<br><img src="https://img-blog.csdnimg.cn/20191020113648498.png" alt="在这里插入图片描述"></p><p>每个主题又可以划分成多个分区，每个分区存储不同的消息。当消息添加至分区时，会为其分配一个位移offset（从0开始递增），并保证分区上唯一，消息在分区上的顺序由offset保证，即同一个分区内的消息是有序的，如下图所示<a id="more"></a></p><p><img src="https://img-blog.csdnimg.cn/20191020113834268.png" alt="在这里插入图片描述"></p><p>同一个主题的不同分区会分配在不同的节点上(broker)，分区时保证Kafka集群具有水平扩展的基础。</p><p><img src="https://img-blog.csdnimg.cn/20191020113902110.png" alt="在这里插入图片描述"></p><p>以主题<code>nginx_access_log</code>为例，分区数为3，如上图所示。分区在逻辑上对应一个日志（Log），物理上对应的是一个文件夹。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x  2 root root 4096 10月 11 20:07 nginx_access_log-0/</span><br><span class="line">drwxr-xr-x  2 root root 4096 10月 11 20:07 nginx_access_log-1/</span><br><span class="line">drwxr-xr-x  2 root root 4096 10月 11 20:07 nginx_access_log-2/</span><br></pre></td></tr></table></figure><p>消息写入分区时，实际上是将消息写入分区所在的文件夹中。日志又分成多个分片（Segment），每个分片由日志文件与索引文件组成，每个分区大小是有限的（在kafka集群的配置文件<code>log.segment.bytes</code>配置，默认为1073741824byte，即1GB），当分片大小超过限制则会重新创建一个新的分片，外界消息的写入只会写入最新的一个分片（顺序IO）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--  1 root root    1835920 10月 11 19:18 00000000000000000000.index</span><br><span class="line">-rw-r--r--  1 root root 1073741684 10月 11 19:18 00000000000000000000.log</span><br><span class="line">-rw-r--r--  1 root root    2737884 10月 11 19:18 00000000000000000000.timeindex</span><br><span class="line">-rw-r--r--  1 root root    1828296 10月 11 19:30 00000000000003257573.index</span><br><span class="line">-rw-r--r--  1 root root 1073741513 10月 11 19:30 00000000000003257573.log</span><br><span class="line">-rw-r--r--  1 root root    2725512 10月 11 19:30 00000000000003257573.timeindex</span><br><span class="line">-rw-r--r--  1 root root    1834744 10月 11 19:42 00000000000006506251.index</span><br><span class="line">-rw-r--r--  1 root root 1073741771 10月 11 19:42 00000000000006506251.log</span><br><span class="line">-rw-r--r--  1 root root    2736072 10月 11 19:42 00000000000006506251.timeindex</span><br><span class="line">-rw-r--r--  1 root root    1832152 10月 11 19:54 00000000000009751854.index</span><br><span class="line">-rw-r--r--  1 root root 1073740984 10月 11 19:54 00000000000009751854.log</span><br><span class="line">-rw-r--r--  1 root root    2731572 10月 11 19:54 00000000000009751854.timeindex</span><br><span class="line">-rw-r--r--  1 root root    1808792 10月 11 20:06 00000000000012999310.index</span><br><span class="line">-rw-r--r--  1 root root 1073741584 10月 11 20:06 00000000000012999310.log</span><br><span class="line">-rw-r--r--  1 root root         10 10月 11 19:54 00000000000012999310.snapshot</span><br><span class="line">-rw-r--r--  1 root root    2694564 10月 11 20:06 00000000000012999310.timeindex</span><br><span class="line">-rw-r--r--  1 root root   10485760 10月 11 20:09 00000000000016260431.index</span><br><span class="line">-rw-r--r--  1 root root  278255892 10月 11 20:09 00000000000016260431.log</span><br><span class="line">-rw-r--r--  1 root root         10 10月 11 20:06 00000000000016260431.snapshot</span><br><span class="line">-rw-r--r--  1 root root   10485756 10月 11 20:09 00000000000016260431.timeindex</span><br><span class="line">-rw-r--r--  1 root root          8 10月 11 19:03 leader-epoch-checkpoint</span><br></pre></td></tr></table></figure><p>一个分片包含多个不同后缀的日志文件，分片中的第一个消息的offset将作为该分片的基准偏移量，偏移量固定长度为20，不够前面补齐0，然后将其作为索引文件以及日志文件的文件名，如<code>00000000000003257573.index</code>、<code>00000000000003257573.log</code>、<code>00000000000003257573.timeindex</code>、相同文件名的文件组成一个分片(忽略后缀名)，除了<code>.index</code>、<code>.timeindex</code>、 <code>.log</code>后缀的日志文件外其他日志文件，对应含义如下：</p><table><thead><tr><th>文件类型</th><th>作用</th></tr></thead><tbody><tr><td>.index</td><td>偏移量索引文件，记录&lt;相对位移，起始地址&gt;映射关系，其中相对位移表示该分片的第一个消息，从1开始计算，起始地址表示对应相对位移消息在分片.log文件的起始地址</td></tr><tr><td>.timeindex</td><td>时间戳索引文件，记录&lt;时间戳，相对位移&gt;映射关系</td></tr><tr><td>.log</td><td>日志文件，存储消息的详细信息</td></tr><tr><td>.snaphot</td><td>快照文件</td></tr><tr><td>.deleted</td><td>分片文件删除时会先将该分片的所有文件加上.delete后缀，然后有<code>delete-file</code>任务延迟删除这些文件（file.delete.delay.ms可以设置延时删除的的时间）</td></tr><tr><td>.cleaned</td><td>日志清理时临时文件</td></tr><tr><td>.swap</td><td>Log Compaction 之后的临时文件</td></tr><tr><td>.leader-epoch-checkpoint</td></tr></tbody></table><h1 id="日志索引"><a href="#日志索引" class="headerlink" title="日志索引"></a>日志索引</h1><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传<br><img src="https://img-blog.csdnimg.cn/20191020113936840.png" alt="在这里插入图片描述"><br>首先介绍下<code>.index</code>文件，这里以文件<code>00000000000003257573.index</code>为例，首先我们可以通过以下命令查看该索引文件的内容，我们可以看到输出结构为&lt;offset,position&gt;，实际上索引文件中保存的并不是offset而是相对位移，比如第一条消息的相对位移则为0，格式化输出时加上了基准偏移量，如上图所示，&lt;114,17413&gt;表示该分片相对位移为114的消息，其位移为3257573+114，即3257687，position表示对应offset在<code>.log</code>文件的物理地址，通过<code>.index</code>索引文件则可以获取对应offset所在的物理地址。索引采用稀疏索引的方式构建，并不保证分片中的每个消息都在索引文件有映射关系（<code>.timeindex</code>索引也是类似），主要是为了节省磁盘空间、内存空间，因为索引文件最终会映射到内存中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看该分片索引文件的前10条记录</span></span><br><span class="line">bin/kafka-dump-log.sh --files /tmp/kafka-logs/nginx_access_log-1/00000000000003257573.index |head -n 10</span><br><span class="line">Dumping /tmp/kafka-logs/nginx_access_log-1/00000000000003257573.index</span><br><span class="line">offset: 3257687 position: 17413</span><br><span class="line">offset: 3257743 position: 33770</span><br><span class="line">offset: 3257799 position: 50127</span><br><span class="line">offset: 3257818 position: 66484</span><br><span class="line">offset: 3257819 position: 72074</span><br><span class="line">offset: 3257871 position: 87281</span><br><span class="line">offset: 3257884 position: 91444</span><br><span class="line">offset: 3257896 position: 95884</span><br><span class="line">offset: 3257917 position: 100845</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看该分片索引文件的后10条记录</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> bin/kafka-dump-log.sh --files /tmp/kafka-logs/nginx_access_log-1/00000000000003257573.index |tail -n 10</span></span><br><span class="line">offset: 6506124 position: 1073698512</span><br><span class="line">offset: 6506137 position: 1073702918</span><br><span class="line">offset: 6506150 position: 1073707263</span><br><span class="line">offset: 6506162 position: 1073711499</span><br><span class="line">offset: 6506176 position: 1073716197</span><br><span class="line">offset: 6506188 position: 1073720433</span><br><span class="line">offset: 6506205 position: 1073725654</span><br><span class="line">offset: 6506217 position: 1073730060</span><br><span class="line">offset: 6506229 position: 1073734174</span><br><span class="line">offset: 6506243 position: 1073738288</span><br></pre></td></tr></table></figure><blockquote><p>比如查看offset为<code>6506155</code>的消息：首先根据offset找到对应的分片，65061所对应的分片为<code>00000000000003257573</code>，然后通过二分法在<code>00000000000003257573.index</code>文件中找到不大于6506155的最大索引值，得到&lt;offset: 6506150, position: 1073707263&gt;，然后从<code>00000000000003257573.log</code>的1073707263位置开始顺序扫描找到offset为650155的消息</p></blockquote><p>kafka从0.10.0.0版本起，为分片日志文件中新增了一个<code>.timeindex</code>的索引文件，可以根据时间戳定位消息。同样我们可以通过脚本<code>kafka-dump-log.sh</code>查看时间索引的文件内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看该分片时间索引文件的前10条记录</span></span><br><span class="line">bin/kafka-dump-log.sh --files /tmp/kafka-logs/nginx_access_log-1/00000000000003257573.timeindex |head -n 10</span><br><span class="line">Dumping /tmp/kafka-logs/nginx_access_log-1/00000000000003257573.timeindex</span><br><span class="line">timestamp: 1570792689308 offset: 3257685</span><br><span class="line">timestamp: 1570792689324 offset: 3257742</span><br><span class="line">timestamp: 1570792689345 offset: 3257795</span><br><span class="line">timestamp: 1570792689348 offset: 3257813</span><br><span class="line">timestamp: 1570792689357 offset: 3257867</span><br><span class="line">timestamp: 1570792689361 offset: 3257881</span><br><span class="line">timestamp: 1570792689364 offset: 3257896</span><br><span class="line">timestamp: 1570792689368 offset: 3257915</span><br><span class="line">timestamp: 1570792689369 offset: 3257927</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看该分片时间索引文件的前10条记录</span></span><br><span class="line">bin/kafka-dump-log.sh --files /tmp/kafka-logs/nginx_access_log-1/00000000000003257573.timeindex |tail -n 10</span><br><span class="line">Dumping /tmp/kafka-logs/nginx_access_log-1/00000000000003257573.timeindex</span><br><span class="line">timestamp: 1570793423474 offset: 6506136</span><br><span class="line">timestamp: 1570793423477 offset: 6506150</span><br><span class="line">timestamp: 1570793423481 offset: 6506159</span><br><span class="line">timestamp: 1570793423485 offset: 6506176</span><br><span class="line">timestamp: 1570793423489 offset: 6506188</span><br><span class="line">timestamp: 1570793423493 offset: 6506204</span><br><span class="line">timestamp: 1570793423496 offset: 6506214</span><br><span class="line">timestamp: 1570793423500 offset: 6506228</span><br><span class="line">timestamp: 1570793423503 offset: 6506240</span><br><span class="line">timestamp: 1570793423505 offset: 6506248</span><br></pre></td></tr></table></figure><blockquote><p>比如我想查看时间戳<code>1570793423501</code>开始的消息：1.首先定位分片，将<code>1570793423501</code>与每个分片的最大时间戳进行对比（最大时间戳取时间索引文件的最后一条记录时间，如果时间为0则取该日志分段的最近修改时间），直到找到大于或等于<code>1570793423501</code>的日志分段，因此会定位到时间索引文件<code>00000000000003257573.timeindex</code>，其最大时间戳为<code>1570793423505</code>；2.通过二分法找到大于或等于<code>1570793423501</code>的最大索引项，即&lt;timestamp: 1570793423503 offset: 6506240&gt;（6506240为offset，相对位移为3247667）；3.根据相对位移3247667去索引文件中找到不大于该相对位移的最大索引值&lt;3248656,1073734174&gt;;4.从日志文件<code>00000000000003257573.log</code>的1073734174位置处开始扫描，查找不小于<code>1570793423501</code>的数据。</p></blockquote><h1 id="日志删除"><a href="#日志删除" class="headerlink" title="日志删除"></a>日志删除</h1><p>与其他消息中间件不同的是，Kafka集群中的消息不会因为消费与否而删除，跟日志一样消息最终会落盘，并提供对应的策略周期性（通过参数log.retention.check.interval.ms来设置，默认为5分钟）执行删除或者压缩操作（broker配置文件<code>log.cleanup.policy</code>参数如果为“delete”则执行删除操作，如果为“compact”则执行压缩操作，默认为“delete”）。</p><h2 id="基于时间的日志删除"><a href="#基于时间的日志删除" class="headerlink" title="基于时间的日志删除"></a>基于时间的日志删除</h2><table><thead><tr><th>参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>log.retention.hours</td><td>168</td><td>日志保留时间（小时）</td></tr><tr><td>log.retention.minutes</td><td>无</td><td>日志保留时间（分钟），优先级大于小时</td></tr><tr><td>log.retention.ms</td><td>无</td><td>日志保留时间（毫秒），优先级大于分钟</td></tr></tbody></table><p>当消息在集群保留时间超过设定阈值（log.retention.hours，默认为168小时，即七天），则需要进行删除。这里会根据分片日志的最大时间戳来判断该分片的时间是否满足删除条件，最大时间戳首先会选取时间戳索引文件中的最后一条索引记录，如果对应的时间戳值大于0则取该值，否则为最近一次修改时间。<br>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传<br><img src="https://img-blog.csdnimg.cn/2019102011401992.png" alt="在这里插入图片描述"></p><blockquote><p>这里不直接选取最后修改时间的原因是避免分片日志的文件被无意篡改而导致其时间不准。</p></blockquote><p>如果恰好该分区下的所有日志分片均已过期，那么会先生成一个新的日志分片作为新消息的写入文件，然后再执行删除参数。</p><h2 id="基于空间的日志删除"><a href="#基于空间的日志删除" class="headerlink" title="基于空间的日志删除"></a>基于空间的日志删除</h2><table><thead><tr><th>参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>log.retention.bytes</td><td>1073741824（即1G），默认未开启，即无穷大</td><td>日志文件总大小，并不是指单个分片的大小</td></tr><tr><td>log.segment.bytes</td><td>1073741824（即1G）</td><td>单个日志分片大小</td></tr></tbody></table><p>首先会计算待删除的日志大小<code>diff</code>（totalSize-log.rentention.bytes）,然后从最旧的一个分片开始查看可以执行删除操作的文件集合（如果<code>diff-segment.size&gt;=0</code>，则满足删除条件），最后执行删除操作。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传<br><img src="https://img-blog.csdnimg.cn/20191020114048260.png" alt="在这里插入图片描述"></p><h2 id="基于日志起始偏移量的日志删除"><a href="#基于日志起始偏移量的日志删除" class="headerlink" title="基于日志起始偏移量的日志删除"></a>基于日志起始偏移量的日志删除</h2><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传<br><img src="https://img-blog.csdnimg.cn/20191020114121191.png" alt="在这里插入图片描述"><br>一般情况下，日志文件的起始偏移量（logStartOffset）会等于第一个日志分段的baseOffset，但是其值会因为删除消息请求而增长，logStartOffset的值实际上是日志集合中的最小消息，而小于这个值的消息都会被清理掉。如上图所示，我们假设logStartOffset=7421048，日志删除流程如下：</p><ul><li>从最旧的日志分片开始遍历，判断其下一个分片的baseOffset是否小于或等于logStartOffset值，如果满足，则需要删除，因此第一个分片会被删除。</li><li>分片二的下一个分片baseOffset=6506251&lt;7421048，所以分片二也需要删除。</li><li>分片三的下一个分片baseOffset=9751854&gt;7421048，所以分片三不会被删除。</li></ul><h1 id="日志压缩"><a href="#日志压缩" class="headerlink" title="日志压缩"></a>日志压缩</h1><p>前面提到当broker配置文件<code>log.cleanup.policy</code>参数值设置为“compact”时，则会执行压缩操作，这里的压缩跟普通意义的压缩不一样，这里的压缩是指将相同key的消息只保留最后一个版本的value值，如下图所示，压缩之前offset是连续递增，压缩之后offset递增可能不连续，只保留5条消息记录。</p><p><img src="https://img-blog.csdnimg.cn/20191020114144235.png" alt="在这里插入图片描述"></p><p>Kafka日志目录下<code>cleaner-offset-checkpoint</code>文件，用来记录每个主题的每个分区中已经清理的偏移量，通过这个偏移量可以将分区中的日志文件分成两个部分：<code>clean</code>表示已经压缩过；<code>dirty</code>表示还未进行压缩，如下图所示（active segment不会参与日志的压缩操作，因为会有新的数据写入该文件）。</p><p><img src="https://img-blog.csdnimg.cn/20191020114209449.png" alt="在这里插入图片描述"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--  1 root root    4 10月 11 19:02 cleaner-offset-checkpoint</span><br><span class="line">drwxr-xr-x  2 root root 4096 10月 11 20:07 nginx_access_log-0/</span><br><span class="line">drwxr-xr-x  2 root root 4096 10月 11 20:07 nginx_access_log-1/</span><br><span class="line">drwxr-xr-x  2 root root 4096 10月 11 20:07 nginx_access_log-2/</span><br><span class="line">-rw-r--r--  1 root root    0 9月  18 09:50 .lock</span><br><span class="line">-rw-r--r--  1 root root    4 10月 16 11:19 log-start-offset-checkpoint</span><br><span class="line">-rw-r--r--  1 root root   54 9月  18 09:50 meta.properties</span><br><span class="line">-rw-r--r--  1 root root 1518 10月 16 11:19 recovery-point-offset-checkpoint</span><br><span class="line">-rw-r--r--  1 root root 1518 10月 16 11:19 replication-offset-checkpoint</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">cat cleaner-offset-checkpoint</span></span><br><span class="line">nginx_access_log 0 5033168</span><br><span class="line">nginx_access_log 1 5033166</span><br><span class="line">nginx_access_log 2 5033168</span><br></pre></td></tr></table></figure><p>日志压缩时会根据dirty部分数据占日志文件的比例（cleanableRatio）来判断优先压缩的日志，然后为dirty部分的数据建立key与offset映射关系（保存对应key的最大offset）存入SkimpyoffsetMap中，然后复制segment分段中的数据，只保留SkimpyoffsetMap中记录的消息，压缩之后的相关日志文件大小会减少，为了避免出现过小的日志文件与索引文件，压缩时会对所有的segment进行分组（一个组的分片大小不会超过设置的<code>log.segment.bytes</code>值大小），同一个分组的多个分片日志压缩之后变成一个分片。</p><p><img src="https://img-blog.csdnimg.cn/20191020114227979.png" alt="在这里插入图片描述"></p><blockquote><p>如上图所示，所有消息都还没压缩前<code>clean checkpoint</code>值为0，表示该分区的数据还没进行压缩，第一次压缩后，之前每个分片的日志文件大小都有所减少，同时会移动<code>clean checkpoint</code>的位置到这一次压缩结束的offset值。第二次压缩时，会将前两个分片{0.5GB,0.4GB}组成一个分组，{0.7GB,0.2GB}组成一个分组进行压缩，以此类推。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20191020114247301.png" alt="在这里插入图片描述"></p><p>如上图所示，日志压缩的主要流程如下：</p><ol><li>计算<code>deleteHorizonMs</code>值：当某个消息的value值为空时，该消息会被保留一段时间，超时之后会在下一次的得日志压缩中被删除，所以这里会计算<code>deleteHorizonMs</code>，根据该值确定可以删除value值为空的日志分片。（<code>deleteHorizonMs = clean部分的最后一个分片的lastModifiedTime - deleteRetionMs</code>，deleteRetionMs通过配置文件log.cleaner.delete.retention.ms配置，默认为24小时）。</li><li>确定压缩dirty部分的offset范围[firstDirtyOffset,endOffset)：其中<code>firstDirtyOffset</code>表示dirty的起始位移，一般会等于<code>clear checkpoint</code>值，<code>firstUncleanableOffset</code>表示不能清理的最小位移，一般会等于活跃分片的baseOffset，然后从firstDirtyOffset位置开始遍历日志分片，并填充key与offset的映射关系至SkimpyoffsetMap中，当该map被填充满或到达上限<code>firstUncleanableOffset</code>时，就可以确定日志压缩上限<code>endOffset</code>。</li><li>将[logStartOffset,endOffset)中的日志分片进行分组，然后按照分组的方式进行压缩。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h1&gt;&lt;p&gt;主题是存储消息的一个逻辑概念，可以简单理解为一类消息的集合，有使用方去创建。Kafka中的主题一般会有多个订阅者去消费对应主题的消息，也可以存在多个生产者往主题中写入消息。&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20191020113648498.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;每个主题又可以划分成多个分区，每个分区存储不同的消息。当消息添加至分区时，会为其分配一个位移offset（从0开始递增），并保证分区上唯一，消息在分区上的顺序由offset保证，即同一个分区内的消息是有序的，如下图所示
    
    </summary>
    
      <category term="kafka" scheme="https://lemon2013.github.io/categories/kafka/"/>
    
    
      <category term="kafka" scheme="https://lemon2013.github.io/tags/kafka/"/>
    
      <category term="kafka入门" scheme="https://lemon2013.github.io/tags/kafka%E5%85%A5%E9%97%A8/"/>
    
      <category term="kafka主题" scheme="https://lemon2013.github.io/tags/kafka%E4%B8%BB%E9%A2%98/"/>
    
      <category term="日志删除" scheme="https://lemon2013.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%A0%E9%99%A4/"/>
    
      <category term="日志压缩" scheme="https://lemon2013.github.io/tags/%E6%97%A5%E5%BF%97%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>kafka常用控制台命令集合</title>
    <link href="https://lemon2013.github.io/2019/10/20/kafka%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://lemon2013.github.io/2019/10/20/kafka常用命令/</id>
    <published>2019-10-20T03:17:48.000Z</published>
    <updated>2019-10-20T04:23:56.562Z</updated>
    
    <content type="html"><![CDATA[<h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">常规模式启动，可以查看控制台输出</span></span><br><span class="line">bin/kafka-server-start.sh config/server.properties</span><br><span class="line"><span class="meta">#</span><span class="bash">后台启动</span></span><br><span class="line">bin/kafka-server-start.sh -daemon config/server.properties</span><br></pre></td></tr></table></figure><h1 id="创建主题"><a href="#创建主题" class="headerlink" title="创建主题"></a>创建主题</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bin/kafka-topics.sh --create --zookeeper localhost:2181/kafka --replication-factor 1 --partitions 3 --topic nginx_access_log</span></span><br><span class="line">WARNING: Due to limitations in metric names, topics with a period ('.') or underscore ('_') could collide. To avoid issues it is best to use either, but not both.</span><br><span class="line">Created topic nginx_access_log.</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="查看主题列表"><a href="#查看主题列表" class="headerlink" title="查看主题列表"></a>查看主题列表</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bin/kafka-topics.sh --zookeeper localhost:2181/kafka --list</span></span><br><span class="line">nginx_access_log</span><br></pre></td></tr></table></figure><h1 id="查看主题信息"><a href="#查看主题信息" class="headerlink" title="查看主题信息"></a>查看主题信息</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bin/kafka-topics.sh --zookeeper localhost:2181/kafka --describe --topic nginx_access_log</span></span><br><span class="line"></span><br><span class="line">Topic:nginx_access_logPartitionCount:3ReplicationFactor:1Configs:</span><br><span class="line">    Topic: nginx_access_logPartition: 0Leader: 0Replicas: 0Isr: 0</span><br><span class="line">    Topic: nginx_access_logPartition: 1Leader: 0Replicas: 0Isr: 0</span><br><span class="line">    Topic: nginx_access_logPartition: 2Leader: 0Replicas: 0Isr: 0</span><br></pre></td></tr></table></figure><h1 id="查看所有消费组"><a href="#查看所有消费组" class="headerlink" title="查看所有消费组"></a>查看所有消费组</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bin/kafka-run-class.sh kafka.admin.ConsumerGroupCommand  --bootstrap-server localhost:9092 --list</span></span><br></pre></td></tr></table></figure><h1 id="控制台查看主题消息"><a href="#控制台查看主题消息" class="headerlink" title="控制台查看主题消息"></a>控制台查看主题消息</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh  --bootstrap-server localhost:9092  --topic nginx_access_log --from-beginning</span><br></pre></td></tr></table></figure><h1 id="删除主题"><a href="#删除主题" class="headerlink" title="删除主题"></a>删除主题</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bin/kafka-topics.sh --zookeeper localhost:2181/kafka  --delete --topic nginx_access_log</span></span><br><span class="line">Topic nginx_access_log is marked for deletion.</span><br><span class="line">Note: This will have no impact if delete.topic.enable is not set to true.</span><br></pre></td></tr></table></figure><h1 id="主题的offset统计"><a href="#主题的offset统计" class="headerlink" title="主题的offset统计"></a>主题的offset统计</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list localhost:9092  --topic nginx_access_log --time -1</span></span><br><span class="line">nginx_access_log:0:3</span><br><span class="line">nginx_access_log:1:3</span><br><span class="line">nginx_access_log:2:3</span><br></pre></td></tr></table></figure><h1 id="消息发送"><a href="#消息发送" class="headerlink" title="消息发送"></a>消息发送</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bin/kafka-console-consumer.sh  --bootstrap-server localhost:9092  --topic nginx_access_log --from-beginning</span></span><br></pre></td></tr></table></figure><h1 id="查看主题中满足条件的消息示例"><a href="#查看主题中满足条件的消息示例" class="headerlink" title="查看主题中满足条件的消息示例"></a>查看主题中满足条件的消息示例</h1><h2 id="通过消费消息的形式查看消息"><a href="#通过消费消息的形式查看消息" class="headerlink" title="通过消费消息的形式查看消息"></a>通过消费消息的形式查看消息</h2><p>可以灵活的拼接各种shell命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bin/kafka-console-consumer.sh  --bootstrap-server localhost:9092  --topic nginx_access_log --from-beginning |grep <span class="string">"2019:19:18:05"</span></span></span><br></pre></td></tr></table></figure><h2 id="通过解析kafka的日志文件查看消息"><a href="#通过解析kafka的日志文件查看消息" class="headerlink" title="通过解析kafka的日志文件查看消息"></a>通过解析kafka的日志文件查看消息</h2><blockquote><p>这种方法就能直接grep某个普通日志文件一样，不同的是需要用kafka特定的脚本去解析，因为格式不一样，另外还可以看到更全的消息信息，比如offset、CreateTime、Key等信息</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bin/kafka-run-class.sh kafka.tools.DumpLogSegments --files /tmp/kafka-logs/nginx_access_log-0/00000000000000000000.log --<span class="built_in">print</span>-data-log |grep <span class="string">"2019:19:18:05"</span> -m 3</span></span><br><span class="line"></span><br><span class="line">| offset: 0 CreateTime: 1568893822143 keysize: -1 valuesize: 220 sequence: -1 headerKeys: [] payload: 172.17.200.235 - - [11/Jul/2019:19:18:05 +0800] "GET /rs/? HTTP/1.1" 200 7213 "http://127.0.0.1/rs/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36"</span><br><span class="line">| offset: 9 CreateTime: 1568894071024 keysize: -1 valuesize: 220 sequence: -1 headerKeys: [] payload: 172.17.200.235 - - [11/Jul/2019:19:18:05 +0800] "GET /rs/? HTTP/1.1" 200 7213 "http://127.0.0.1/rs/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36"</span><br><span class="line">| offset: 10 CreateTime: 1568894101894 keysize: -1 valuesize: 220 sequence: -1 headerKeys: [] payload: 172.17.200.235 - - [11/Jul/2019:19:18:05 +0800] "GET /rs/? HTTP/1.1" 200 7213 "http://127.0.0.1/rs/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36"</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;常规模式启动，可以查看控制台输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-server-start.sh config/server.properties&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;后台启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/kafka-server-start.sh -daemon config/server.properties&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;创建主题&quot;&gt;&lt;a href=&quot;#创建主题&quot; class=&quot;headerlink&quot; title=&quot;创建主题&quot;&gt;&lt;/a&gt;创建主题&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; bin/kafka-topics.sh --create --zookeeper localhost:2181/kafka --replication-factor 1 --partitions 3 --topic nginx_access_log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WARNING: Due to limitations in metric names, topics with a period (&#39;.&#39;) or underscore (&#39;_&#39;) could collide. To avoid issues it is best to use either, but not both.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Created topic nginx_access_log.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="kafka" scheme="https://lemon2013.github.io/categories/kafka/"/>
    
    
      <category term="kafka" scheme="https://lemon2013.github.io/tags/kafka/"/>
    
      <category term="主题创建" scheme="https://lemon2013.github.io/tags/%E4%B8%BB%E9%A2%98%E5%88%9B%E5%BB%BA/"/>
    
      <category term="生产与消费" scheme="https://lemon2013.github.io/tags/%E7%94%9F%E4%BA%A7%E4%B8%8E%E6%B6%88%E8%B4%B9/"/>
    
      <category term="日志查询" scheme="https://lemon2013.github.io/tags/%E6%97%A5%E5%BF%97%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="分区消费统计" scheme="https://lemon2013.github.io/tags/%E5%88%86%E5%8C%BA%E6%B6%88%E8%B4%B9%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>快速部署kafka单机环境</title>
    <link href="https://lemon2013.github.io/2019/10/20/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2kafka%E5%8D%95%E6%9C%BA%E7%8E%AF%E5%A2%83/"/>
    <id>https://lemon2013.github.io/2019/10/20/快速部署kafka单机环境/</id>
    <published>2019-10-20T02:17:48.000Z</published>
    <updated>2019-10-20T04:24:09.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="依赖准备"><a href="#依赖准备" class="headerlink" title="依赖准备"></a>依赖准备</h1><h2 id="jdk安装"><a href="#jdk安装" class="headerlink" title="jdk安装"></a>jdk安装</h2><p>安装jdk，版本推荐8以上</p><h2 id="zk安装"><a href="#zk安装" class="headerlink" title="zk安装"></a>zk安装</h2><ol><li>下载zk对应版本<br>比如下载<a href="http://apache.communilink.net/zookeeper/stable/apache-zookeeper-3.5.5-bin.tar.gz" target="_blank" rel="noopener">http://apache.communilink.net/zookeeper/stable/apache-zookeeper-3.5.5-bin.tar.gz</a><a id="more"></a></li><li><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf apache-zookeeper-3.5.5-bin.tar.gz</span><br><span class="line">mv apache-zookeeper-3.5.5-bin /usr/local/apache-zookeeper-3.5.5</span><br></pre></td></tr></table></figure></li><li><p>创建数据目录及日志目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#123;data,logs&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> The number of milliseconds of each tick</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="meta">#</span><span class="bash"> The number of ticks that the initial</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> synchronization phase can take</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="meta">#</span><span class="bash"> The number of ticks that can pass between</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sending a request and getting an acknowledgement</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="meta">#</span><span class="bash"> the directory <span class="built_in">where</span> the snapshot is stored.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">do</span> not use /tmp <span class="keyword">for</span> storage, /tmp here is just</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> example sakes.</span></span><br><span class="line">dataDir=/usr/local/apache-zookeeper-3.5.5/data</span><br><span class="line">dataLogDir=/usr/local/apache-zookeeper-3.5.5/logs</span><br><span class="line"><span class="meta">#</span><span class="bash"> the port at <span class="built_in">which</span> the clients will connect</span></span><br><span class="line">clientPort=2181</span><br><span class="line">admin.serverPort=8181</span><br><span class="line"><span class="meta">#</span><span class="bash"> the maximum number of client connections.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> increase this <span class="keyword">if</span> you need to handle more clients</span></span><br><span class="line"><span class="meta">#</span><span class="bash">maxClientCnxns=60</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Be sure to <span class="built_in">read</span> the maintenance section of the </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> administrator guide before turning on autopurge.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> http://zookeeper.apache.org/doc/current/zookeeperAdmin.html<span class="comment">#sc_maintenance</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The number of snapshots to retain <span class="keyword">in</span> dataDir</span></span><br><span class="line"><span class="meta">#</span><span class="bash">autopurge.snapRetainCount=3</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Purge task interval <span class="keyword">in</span> hours</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set to <span class="string">"0"</span> to <span class="built_in">disable</span> auto purge feature</span></span><br><span class="line"><span class="meta">#</span><span class="bash">autopurge.purgeInterval=1</span></span><br></pre></td></tr></table></figure></li><li><p>设置环境变量</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line">export ZOOKEEPER_HOME=/usr/local/apache-zookeeper-3.5.5</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin</span><br></pre></td></tr></table></figure><p>设置立即生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>启动&amp;关闭zk服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动ZooKeeper的Server</span></span><br><span class="line">zkServer.sh start</span><br><span class="line"><span class="meta">#</span><span class="bash">关闭ZooKeeper的Server</span></span><br><span class="line">zkServer.sh stop</span><br></pre></td></tr></table></figure></li></ol><h1 id="kafka部署"><a href="#kafka部署" class="headerlink" title="kafka部署"></a>kafka部署</h1><ol><li><p>下载对应集群版本<a href="https://archive.apache.org/dist/kafka/" target="_blank" rel="noopener">https://archive.apache.org/dist/kafka/</a>，以2.3.0为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget &lt;https://archive.apache.org/dist/kafka/2.3.0/kafka_2.12-2.3.0.tgz&gt;</span><br></pre></td></tr></table></figure></li><li><p>解压安装包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf kafka_2.12-2.3.0.tgz</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p><ul><li>添加 delete.topic.enable=true,主要方便删除topic</li><li>去掉注释listeners=PLAINTEXT://:9092</li><li>设置zookeeper连接地址，一般zk后面接上自定义kafka绑定节点，zookeeper.connect=localhost:2181/kafka</li><li>配置日志目录，log.dirs=/tmp/kafka-logs</li><li>设置 broke.id，需要保证同一个集群中的各个节点值唯一</li><li>设置主题分区数，分区数一般为节点的整数倍，num.partitions=3</li></ul></li><li>启动服务 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">常规模式启动，可以查看控制台输出</span></span><br><span class="line">bin/kafka-server-start.sh config/server.properties</span><br><span class="line"><span class="meta">#</span><span class="bash">后台启动</span></span><br><span class="line">bin/kafka-server-start.sh -daemon config/server.properties</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;依赖准备&quot;&gt;&lt;a href=&quot;#依赖准备&quot; class=&quot;headerlink&quot; title=&quot;依赖准备&quot;&gt;&lt;/a&gt;依赖准备&lt;/h1&gt;&lt;h2 id=&quot;jdk安装&quot;&gt;&lt;a href=&quot;#jdk安装&quot; class=&quot;headerlink&quot; title=&quot;jdk安装&quot;&gt;&lt;/a&gt;jdk安装&lt;/h2&gt;&lt;p&gt;安装jdk，版本推荐8以上&lt;/p&gt;
&lt;h2 id=&quot;zk安装&quot;&gt;&lt;a href=&quot;#zk安装&quot; class=&quot;headerlink&quot; title=&quot;zk安装&quot;&gt;&lt;/a&gt;zk安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;下载zk对应版本&lt;br&gt;比如下载&lt;a href=&quot;http://apache.communilink.net/zookeeper/stable/apache-zookeeper-3.5.5-bin.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://apache.communilink.net/zookeeper/stable/apache-zookeeper-3.5.5-bin.tar.gz&lt;/a&gt;
    
    </summary>
    
      <category term="kafka" scheme="https://lemon2013.github.io/categories/kafka/"/>
    
    
      <category term="kafka" scheme="https://lemon2013.github.io/tags/kafka/"/>
    
      <category term="kafka环境部署" scheme="https://lemon2013.github.io/tags/kafka%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
      <category term="zk环境部署" scheme="https://lemon2013.github.io/tags/zk%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>如何在七牛云测试域名失效情况下下载文件[windows]</title>
    <link href="https://lemon2013.github.io/2019/01/06/qiniu2local/"/>
    <id>https://lemon2013.github.io/2019/01/06/qiniu2local/</id>
    <published>2019-01-06T04:55:30.000Z</published>
    <updated>2019-01-06T06:30:15.918Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p><img src="/img/qiniuyun.png" alt="七牛回收"><br>这事就说来话长了，得从一个多月前的邮件说起，之前也没太注意，心想收回就收回，不然每个月还得交几块钱的访问流量费，实在是太贵了。<a id="more"></a>今天有时间看看博客发现图片打不开就算了，竟然七牛云还不给我图片下载的权限了，说要绑定备案域名，这不是为难我这种穷苦百姓吗，说到底还是因为我穷，所以找了个免费的下载文件方法以供像我一样穷的百姓参考。</p><h1 id="命令行辅助工具-qrsctl"><a href="#命令行辅助工具-qrsctl" class="headerlink" title="命令行辅助工具(qrsctl)"></a>命令行辅助工具(qrsctl)</h1><p>qrsctl 是根据七牛云存储API实现的一个简易命令行辅助工具。覆盖七牛云存储开发者网站包含的大部分甚至更高级的功能。开发者在对七牛云存储 API 有基本了解的情况下，此工具将会非常适用。<br>qrsctl 命令行辅助工具下载地址：</p><ul><li><a href="http://devtools.qiniu.com/darwin/amd64/qrsctl" target="_blank" rel="noopener">Mac OS</a></li><li><a href="http://devtools.qiniu.com/linux/amd64/qrsctl" target="_blank" rel="noopener">Linux 64bits</a></li><li><a href="http://devtools.qiniu.com/linux/386/qrsctl" target="_blank" rel="noopener">Linux 32bits</a></li><li><a href="http://devtools.qiniu.com/linux/arm/qrsctl" target="_blank" rel="noopener">Linux ARMv6</a></li><li><a href="http://devtools.qiniu.com/windows/386/qrsctl.exe?ref=developer.qiniu.com" target="_blank" rel="noopener">Windows 32bits</a></li></ul><h1 id="命令行操作"><a href="#命令行操作" class="headerlink" title="命令行操作"></a>命令行操作</h1><p>本想着直接丢个<a href="https://developer.qiniu.com/kodo/tools/1300/qrsctl" target="_blank" rel="noopener">官网的链接</a>进来，可是让你们再跳转过去多麻烦啊，万一你们跟我一样懒咋办，所以我还是使用我的独门特技(大家都懂的)给大家讲解下。</p><ol><li>根据系统下载对应版本，这里以windows做参考，解压下载文件之后需要修改文件后缀名为.exe。</li><li>利用cmd命令行工具进入qrsctl存放目录并运行。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">E:\blog&gt;qrsctl-v3.2.exe</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v login &lt;User&gt; &lt;Passwd&gt;</span><br><span class="line">        - Login</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v info</span><br><span class="line">        - Show user information</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v appinfo [&lt;AppName&gt;]</span><br><span class="line">        - Get application info</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v put -c &lt;Bucket&gt; &lt;Key&gt; &lt;SrcFile&gt;</span><br><span class="line">        - Put file</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v get &lt;Bucket&gt; &lt;Key&gt; &lt;DestFile&gt;</span><br><span class="line">        - Get file</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v <span class="built_in">stat</span> &lt;Bucket&gt; &lt;Key&gt;</span><br><span class="line">        - Stat file</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v cat &lt;Bucket&gt; &lt;Key&gt;</span><br><span class="line">        - Cat file</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v del &lt;Bucket&gt; &lt;Key&gt;</span><br><span class="line">        - Delete a file</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v mv &lt;Bucket1:Key1&gt; &lt;Bucket2:Key2&gt;</span><br><span class="line">        - Move file from Bucket1:Key1 to Bucket2:Key2</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v cp &lt;Bucket1:Key1&gt; &lt;Bucket2:Key2&gt;</span><br><span class="line">        - Copy file</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v chgm &lt;Bucket&gt; &lt;key&gt; &lt;mimeType&gt;</span><br><span class="line">        - Change MimeType</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v listprefix &lt;bucket&gt; &lt;prefix&gt; [&lt;<span class="built_in">limit</span>&gt;] [&lt;marker&gt;]</span><br><span class="line">        - List files</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v mkbucket &lt;BucketName&gt; &lt;Zone&gt;</span><br><span class="line">        - Create a bucket, &lt;Zone&gt;:z0, z1, z2, na0</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v buckets &lt;Shared&gt;</span><br><span class="line">        - List all buckets</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v share &lt;Bucket&gt; &lt;Uid&gt; &lt;Permission&gt;</span><br><span class="line">                                        PermissionOptions: 1(RD) 2(RW) -1(Cancel Share)</span><br><span class="line">        - Share bucket</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v listprefix &lt;bucket&gt; &lt;prefix&gt; [&lt;<span class="built_in">limit</span>&gt;] [&lt;marker&gt;]</span><br><span class="line">        - List files buckets</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v bucketinfo &lt;Bucket&gt;</span><br><span class="line">        - Get bucket info</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v img &lt;Bucket&gt; &lt;SrcUrl&gt; [&lt;SrcHost&gt;] [&lt;Expires&gt;]</span><br><span class="line">        - Image bucket with <span class="built_in">source</span></span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v unimg &lt;Bucket&gt;</span><br><span class="line">        - Unimage bucket</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v protected &lt;Bucket&gt; &lt;Protected&gt;</span><br><span class="line">        - Set bucket protected or not</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v separator &lt;Bucket&gt; &lt;Sep&gt;</span><br><span class="line">        - Set style separator</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v style &lt;Bucket&gt; &lt;Name&gt; &lt;Style&gt;</span><br><span class="line">        - Set style</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v unstyle &lt;Bucket&gt; &lt;Name&gt;</span><br><span class="line">        - Unset style</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v styleCopy &lt;bucket_Src&gt; &lt;bucket_Dest&gt;</span><br><span class="line">        - Copy styles</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v private &lt;Bucket&gt; &lt;Private&gt;</span><br><span class="line">        - Set bucket private or not</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v imgsft  &lt;Bucket&gt; &lt;imgsft&gt;</span><br><span class="line">        - Set bucket image storage with fault tolerant</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v noIndexPage &lt;Bucket&gt; &lt;0/1&gt;</span><br><span class="line">        - Turn On/Off bucket index page</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v redirect &lt;Bucekt&gt; &lt;Key&gt; &lt;RedirectUrl&gt; [&lt;RedirectCode&gt;]</span><br><span class="line">        - Redirect a key to an url</span><br><span class="line"></span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v pfop &lt;bucket&gt; &lt;key&gt; &lt;fops&gt; [&lt;notifyURL&gt;] [&lt;force&gt;] [&lt;pipelin</span><br><span class="line">e&gt;]     - Do pfop</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v listjobs &lt;pipelineId&gt; [&lt;marker&gt;] [&lt;<span class="built_in">limit</span>&gt;]</span><br><span class="line">        - List <span class="built_in">jobs</span> of pfop</span><br><span class="line"></span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v cdn/refresh &lt;Url1&gt; &lt;Url2&gt;...&lt;UrlN&gt;</span><br><span class="line">        - Refresh cdn cache <span class="keyword">for</span> urls</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v cdn/bandwidth &lt;domains&gt; &lt;start_date&gt; &lt;end_date&gt; [&lt;granularit</span><br><span class="line">y&gt;]     - Get bandwidth of domains</span><br><span class="line">  qrsctl [-l|d|lan|it|-f &lt;hostFile&gt;] -v cdn/flux &lt;domains&gt; &lt;start_date&gt; &lt;end_date&gt; [&lt;granularity&gt;]</span><br><span class="line">        - Get traffic of domains</span><br><span class="line"></span><br><span class="line">Authorization:</span><br><span class="line">  1) qrsctl login &lt;User&gt; &lt;Passwd&gt;: and <span class="keyword">then</span> remember the login token</span><br><span class="line">  2) qrsctl login &lt;AccessKey&gt; &lt;SecretKey&gt;</span><br><span class="line">  3) qrsctl -a &lt;AccountConf&gt;: provide an account config file that provide access_key &amp; secret_key (i</span><br><span class="line">n json format)</span><br><span class="line">BuildVersion:</span><br><span class="line">  qrsctl v3.2.20170501</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li>登陆七牛云，登录成功后，会话的有效期是 3600 秒（一个小时），一个小时后需要重新登录<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qrsctl-v3.2 login &lt;User&gt; &lt;Passwd&gt;</span><br></pre></td></tr></table></figure></li></ol><ul><li>User，用户名，一般为注册邮箱</li><li>Passwd，登录密码</li></ul><ol start="4"><li>下载文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">qrsctl-v3.2 get &lt;Bucket&gt; &lt;Key&gt; </span><br><span class="line"></span><br><span class="line"><span class="comment">#例如</span></span><br><span class="line">E:\blog&gt;qrsctl-v3.2 get lemon 1.pdf </span><br><span class="line">INFO: Fetching http://iovip-z2.qbox.me/file/52vJUfCjk6avRokAwhdD5E2rAiwUNAC2Aw8AACe2rlxsrw9dbN-uXGwsnit58zB3FSvpDj7frlxs365cbN-uXGywIEnJC7K2tgUU14ESvXSia2YXCrS2trbGF7e2tra2tvB0h1m3tra2vFr6S-4RVEpRlwQiLCxA7VsHVEPXxsba39XXwt_Z2JnG0tBtGOraaRjq2mkY6tppGOra ...</span><br></pre></td></tr></table></figure></li></ol><ul><li>Bucket，桶名</li><li>Key，文件名</li></ul><h1 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h1><p>目前没有找到支持批量下载的方法，虽然<a href="https://blog.csdn.net/lkj345/article/details/83382636" target="_blank" rel="noopener">七牛云测试域名失效导致图片外链失效的解决办法</a>这篇博客提到使用listprefix命令，但是我执行没有获取到对应桶的文件列表。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>折腾一番总算是把我博客中的全部图片下载下来并替换新链接了，所谓上有政策下有对策，遇事无须紧张，毕竟大佬很多可以帮助我们去解决问题。</p><h1 id="参考文件"><a href="#参考文件" class="headerlink" title="参考文件"></a>参考文件</h1><ul><li><a href="https://developer.qiniu.com/kodo/tools/1300/qrsctl" target="_blank" rel="noopener">命令行辅助工具(qrsctl)</a></li><li><a href="https://blog.csdn.net/lkj345/article/details/83382636" target="_blank" rel="noopener">七牛云测试域名失效导致图片外链失效的解决办法</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/img/qiniuyun.png&quot; alt=&quot;七牛回收&quot;&gt;&lt;br&gt;这事就说来话长了，得从一个多月前的邮件说起，之前也没太注意，心想收回就收回，不然每个月还得交几块钱的访问流量费，实在是太贵了。
    
    </summary>
    
      <category term="日记" scheme="https://lemon2013.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="七牛云数据转移" scheme="https://lemon2013.github.io/tags/%E4%B8%83%E7%89%9B%E4%BA%91%E6%95%B0%E6%8D%AE%E8%BD%AC%E7%A7%BB/"/>
    
      <category term="测试域名失效" scheme="https://lemon2013.github.io/tags/%E6%B5%8B%E8%AF%95%E5%9F%9F%E5%90%8D%E5%A4%B1%E6%95%88/"/>
    
      <category term="域名回收" scheme="https://lemon2013.github.io/tags/%E5%9F%9F%E5%90%8D%E5%9B%9E%E6%94%B6/"/>
    
  </entry>
  
  <entry>
    <title>ceph-rest-api的IPv6环境配置</title>
    <link href="https://lemon2013.github.io/2017/12/26/ceph-rest-api/"/>
    <id>https://lemon2013.github.io/2017/12/26/ceph-rest-api/</id>
    <published>2017-12-26T07:17:48.000Z</published>
    <updated>2019-01-06T05:09:58.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>ceph-rest-api 是一个 WSGI （网页服务器网关接口）应用程序，可作为网页服务独立运行，也可在支持 WSGI 的网页服务器下运行。它通过 HTTP 访问接口提供了 ceph 命令行工具的大多数功能，<a href="http://docs.ceph.org.cn/man/8/ceph-rest-api/" target="_blank" rel="noopener">官网详细介绍</a>。本篇将介绍如何配置IPv6环境的ceph-rest-api。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="IPv4环境"><a href="#IPv4环境" class="headerlink" title="IPv4环境"></a>IPv4环境</h2><p>ceph-rest-api默认已经安装在ceph集群中，使用如下命令即可启功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ~]<span class="comment"># ceph-rest-api -n client.admin</span></span><br><span class="line"> * Running on http://0.0.0.0:5000/</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>如果要更改IP或者端口号，只需在ceph.conf配置文件[global]下添加public_addr字段，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">public_addr = 49.123.93.84:5001</span><br></pre></td></tr></table></figure></p><p>启动ceph-rest-api<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment">#  ceph-rest-api -n client.admin</span></span><br><span class="line"> * Running on http://49.123.93.84:5001/</span><br></pre></td></tr></table></figure></p><p>访问 <a href="http://49.123.93.84:5001/" target="_blank" rel="noopener">http://49.123.93.84:5001/</a> 即可查看对应的原生API<br><img src="/img/ceph-rest-api.png" alt="部分API"></p><h2 id="IPv6环境"><a href="#IPv6环境" class="headerlink" title="IPv6环境"></a>IPv6环境</h2><p>之前尝试直接在ceph.conf配置文件中配置对应的IPv6地址与端口号，但是在启动时报错<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-rest-api -n client.admin</span></span><br><span class="line"> * Running on http://[[2001:250:4402:2001:20c:29ff:fe25:8888]]:5001/</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/usr/bin/ceph-rest-api"</span>, line 72, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    app.run(host=app.ceph_addr, port=app.ceph_port)</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/site-packages/flask/app.py"</span>, line 772, <span class="keyword">in</span> run</span><br><span class="line">    run_simple(host, port, self, **options)</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/site-packages/werkzeug/serving.py"</span>, line 710, <span class="keyword">in</span> run_simple</span><br><span class="line">    inner()</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/site-packages/werkzeug/serving.py"</span>, line 692, <span class="keyword">in</span> inner</span><br><span class="line">    passthrough_errors, ssl_context).serve_forever()</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/site-packages/werkzeug/serving.py"</span>, line 486, <span class="keyword">in</span> make_server</span><br><span class="line">    passthrough_errors, ssl_context)</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/site-packages/werkzeug/serving.py"</span>, line 410, <span class="keyword">in</span> __init__</span><br><span class="line">    HTTPServer.__init__(self, (host, int(port)), handler)</span><br><span class="line">  File <span class="string">"/usr/lib64/python2.7/SocketServer.py"</span>, line 419, <span class="keyword">in</span> __init__</span><br><span class="line">    self.server_bind()</span><br><span class="line">  File <span class="string">"/usr/lib64/python2.7/BaseHTTPServer.py"</span>, line 108, <span class="keyword">in</span> server_bind</span><br><span class="line">    SocketServer.TCPServer.server_bind(self)</span><br><span class="line">  File <span class="string">"/usr/lib64/python2.7/SocketServer.py"</span>, line 430, <span class="keyword">in</span> server_bind</span><br><span class="line">    self.socket.bind(self.server_address)</span><br><span class="line">  File <span class="string">"/usr/lib64/python2.7/socket.py"</span>, line 224, <span class="keyword">in</span> meth</span><br><span class="line">    <span class="built_in">return</span> getattr(self._sock,name)(*args)</span><br><span class="line">socket.gaierror: [Errno -2] Name or service not known</span><br></pre></td></tr></table></figure></p><p>从报错信息可知IPv6地址不合法http://[[2001:250:4402:2001:20c:29ff:fe25:8888]]:5001/ ，正确地址应该是http://[2001:250:4402:2001:20c:29ff:fe25:8888]:5001/ ，找到对应的/usr/bin/ceph-rest-api文件，打印对应的host为[2001:250:4402:2001:20c:29ff:fe25:8888]，目前找到的解决办法是直接将IPv6地址与端口号写入此文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">if</span> <span class="string">'pdb.py'</span> <span class="keyword">in</span> files:</span><br><span class="line">    app.run(host=app.ceph_addr, port=app.ceph_port,</span><br><span class="line">            debug=True, use_reloader=False, use_debugger=False)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    app.ceph_addr=<span class="string">'2001:250:4402:2001:20c:29ff:fe25:8888'</span>;</span><br><span class="line">    app.ceph_port=5001;</span><br><span class="line">    app.run(host=app.ceph_addr, port=app.ceph_port)</span><br></pre></td></tr></table></figure></p><p>并运行ceph-rest-api<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment">#  ceph-rest-api -n client.admin</span></span><br><span class="line"> * Running on http://[2001:250:4402:2001:20c:29ff:fe25:8888]:5001/</span><br></pre></td></tr></table></figure></p><p>访问地址 http://[2001:250:4402:2001:20c:29ff:fe25:8888]:5001/ 即可。</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>本篇中提到的配置IPv6的方法仅仅是权宜之计，按理来说不应该修改ceph-rest-api文件，而是去查看对应的url地址如何拼接，哪位大神如果知道在哪修改欢迎留言。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;ceph-rest-api 是一个 WSGI （网页服务器网关接口）应用程序，可作为网页服务独立运行，也可在支持 WSGI 的网页服务器下运行。它通过 HTTP 访问接口提供了 ceph 命令行工具的大多数功能，&lt;a href=&quot;http://docs.ceph.org.cn/man/8/ceph-rest-api/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网详细介绍&lt;/a&gt;。本篇将介绍如何配置IPv6环境的ceph-rest-api。&lt;/p&gt;
&lt;h1 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h1&gt;&lt;h2 id=&quot;IPv4环境&quot;&gt;&lt;a href=&quot;#IPv4环境&quot; class=&quot;headerlink&quot; title=&quot;IPv4环境&quot;&gt;&lt;/a&gt;IPv4环境&lt;/h2&gt;&lt;p&gt;ceph-rest-api默认已经安装在ceph集群中，使用如下命令即可启功：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@ceph001 ~]&lt;span class=&quot;comment&quot;&gt;# ceph-rest-api -n client.admin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Running on http://0.0.0.0:5000/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Ceph" scheme="https://lemon2013.github.io/categories/Ceph/"/>
    
    
      <category term="IPv6" scheme="https://lemon2013.github.io/tags/IPv6/"/>
    
      <category term="Ceph" scheme="https://lemon2013.github.io/tags/Ceph/"/>
    
      <category term="rgw" scheme="https://lemon2013.github.io/tags/rgw/"/>
    
      <category term="WSGI" scheme="https://lemon2013.github.io/tags/WSGI/"/>
    
      <category term="ceph-rest-api" scheme="https://lemon2013.github.io/tags/ceph-rest-api/"/>
    
  </entry>
  
  <entry>
    <title>centos7最小化安装问题小结</title>
    <link href="https://lemon2013.github.io/2017/07/19/centos7-minimal-summary/"/>
    <id>https://lemon2013.github.io/2017/07/19/centos7-minimal-summary/</id>
    <published>2017-07-19T05:09:55.000Z</published>
    <updated>2017-07-19T08:38:03.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>在最小化安装centos 7后，本着一贯低调做事的原则，输入<strong>ifconfig</strong>炫耀几番，扎心了，老铁！竟然提示我没有这个命令？<a id="more"></a></p><h1 id="问题1-ifconfig-command-not-found"><a href="#问题1-ifconfig-command-not-found" class="headerlink" title="问题1  ifconfig: command not found"></a>问题1  ifconfig: command not found</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ifconfig</span></span><br><span class="line">-bash: ifconfig: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>难道看个ip地址都不允许？一定是我打开的方式不对<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ip addr show</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eno16777736: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:14:62:84 brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure></p><p>发现竟然都没给我分配IP地址，上网就更别想了，于是乎 编辑了其网络配置文件,手动添加ip地址，DNS以及网关等信息，然后重启网络<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-eno16777736</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">PEERDNS=yes</span><br><span class="line">PEERROUTES=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_PEERDNS=yes</span><br><span class="line">IPV6_PEERROUTES=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">NAME=eno16777736</span><br><span class="line">UUID=0b9430ac-5ccc-4f13-9280-4306975007cb</span><br><span class="line">DEVICE=eno16777736</span><br><span class="line">ONBOOT=yes</span><br><span class="line">DNS1=10.0.0.2</span><br><span class="line">IPADDR=10.0.0.100</span><br><span class="line">GATEWAY=10.0.0.2</span><br><span class="line">NETMASK=255.255.255.0</span><br></pre></td></tr></table></figure></p><p>再次查看IP信息，并ping了一下 <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ip addr show</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eno16777736: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:14:62:84 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.0.0.100/24 brd 10.0.0.2]55 scope global eno16777736</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:fe14:6284/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># ping www.baidu.com</span></span><br><span class="line">PING www.a.shifen.com (119.75.216.20) 56(84) bytes of data.</span><br><span class="line">64 bytes from 119.75.216.20: icmp_seq=1 ttl=128 time=27.3 ms</span><br><span class="line">64 bytes from 119.75.216.20: icmp_seq=2 ttl=128 time=30.6 ms</span><br></pre></td></tr></table></figure></p><p>上网的问题是解决了，但是总觉得这个查看IP的命令没ifconfig漂亮，因此利用yum命令安装了ifconfig(在net-tools包中)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install net-tools</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.njupt.edu.cn</span><br><span class="line"> * extras: mirror.bit.edu.cn</span><br><span class="line"> * updates: mirror.bit.edu.cn</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package net-tools.x86_64 0:2.0-0.17.20131004git.el7 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">===============================================================================================================================================================================================</span><br><span class="line"> Package                                     Arch                                     Version                                                     Repository                              Size</span><br><span class="line">===============================================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> net-tools                                   x86_64                                   2.0-0.17.20131004git.el7                                    base                                   304 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">===============================================================================================================================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line">......</span><br></pre></td></tr></table></figure></p><p>大功告成，是不是觉得贼帅<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ifconfig</span></span><br><span class="line">eno16777736: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.0.0.100  netmask 255.255.255.0  broadcast 10.0.0.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe14:6284  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:14:62:84  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 206  bytes 20795 (20.3 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 176  bytes 23632 (23.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 0  (Local Loopback)</span><br><span class="line">        RX packets 4  bytes 332 (332.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 4  bytes 332 (332.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;在最小化安装centos 7后，本着一贯低调做事的原则，输入&lt;strong&gt;ifconfig&lt;/strong&gt;炫耀几番，扎心了，老铁！竟然提示我没有这个命令？
    
    </summary>
    
      <category term="Linux 基础" scheme="https://lemon2013.github.io/categories/Linux-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux" scheme="https://lemon2013.github.io/tags/linux/"/>
    
      <category term="CentOS7" scheme="https://lemon2013.github.io/tags/CentOS7/"/>
    
      <category term="最小化安装" scheme="https://lemon2013.github.io/tags/%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>新闻数据爬虫分析</title>
    <link href="https://lemon2013.github.io/2017/07/13/news-spider/"/>
    <id>https://lemon2013.github.io/2017/07/13/news-spider/</id>
    <published>2017-07-13T13:09:06.000Z</published>
    <updated>2019-01-06T03:44:16.400Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>最近接触到一个新闻类网站的数据爬取项目，包括各大新闻网站，如网易、腾讯、新浪等新闻标题、时间、评论数、点赞量、转发量以及阅读量等数据获取。其中较麻烦模块主要是动态数据的获取，以及新浪微博数据的获取，在此分享一些经验给大家参考，如有不对望指正交流、共同进步。<br><a id="more"></a></p><h1 id="爬虫工具"><a href="#爬虫工具" class="headerlink" title="爬虫工具"></a>爬虫工具</h1><p><img src="/img/logo.jpeg" alt="webmagic"><br><a href="http://webmagic.io/docs/zh/" target="_blank" rel="noopener">WebMagic爬虫工具</a>，提供详细使用配置说明。</p><h1 id="新闻网站格式分析及数据获取"><a href="#新闻网站格式分析及数据获取" class="headerlink" title="新闻网站格式分析及数据获取"></a>新闻网站格式分析及数据获取</h1><h2 id="网易新闻"><a href="#网易新闻" class="headerlink" title="网易新闻"></a>网易新闻</h2><p>新闻网址首页：<a href="http://news.163.com/" target="_blank" rel="noopener">http://news.163.com/</a><br>新闻详情页地址格式：http://[\S]<em>.163.com/[\S]</em>.html，比如 <a href="http://news.163.com/17/0713/20/CP8JPMSD000189FH.html" target="_blank" rel="noopener">http://news.163.com/17/0713/20/CP8JPMSD000189FH.html</a><br><img src="/img/wangyi.png" alt="webmagic"><br>新闻时间格式：yyyy-MM-dd hh:mm:ss，如 2017-07-13 20:40:07，通过正则表达式匹配出新闻时间<br>跟帖数：跟帖数为动态获取数据，不能直接从页面源文件中获取</p><ul><li>评论地址：<a href="http://comment.news.163.com/api/v1/products/+productKey+/threads/+docId" target="_blank" rel="noopener">http://comment.news.163.com/api/v1/products/+productKey+/threads/+docId</a> ,如 <a href="http://comment.news.163.com/api/v1/products/a2869674571f77b5a0867c3d71db5856/threads/CP8JPMSD000189FH" target="_blank" rel="noopener">http://comment.news.163.com/api/v1/products/a2869674571f77b5a0867c3d71db5856/threads/CP8JPMSD000189FH</a> ,返回Json数据格式如下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"against"</span>: 0,</span><br><span class="line"><span class="string">"boardId"</span>: <span class="string">"news2_bbs"</span>,</span><br><span class="line"><span class="string">"channelId"</span>: <span class="string">"0001"</span>,</span><br><span class="line"><span class="string">"cmtAgainst"</span>: 0,</span><br><span class="line"><span class="string">"cmtVote"</span>: 0,</span><br><span class="line"><span class="string">"createTime"</span>: <span class="string">"2017-07-13 20:40:07"</span>,</span><br><span class="line"><span class="string">"docId"</span>: <span class="string">"CP8JPMSD000189FH"</span>,</span><br><span class="line"><span class="string">"isAudit"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"modifyTime"</span>: <span class="string">"2017-07-13 20:58:24"</span>,</span><br><span class="line"><span class="string">"pdocId"</span>: <span class="string">"CP8JPMSD000189FH"</span>,</span><br><span class="line"><span class="string">"rcount"</span>: 63,</span><br><span class="line"><span class="string">"status"</span>: &#123;</span><br><span class="line"><span class="string">"app"</span>: <span class="string">"on"</span>,</span><br><span class="line"><span class="string">"web"</span>: <span class="string">"on"</span>,</span><br><span class="line"><span class="string">"audio"</span>: <span class="string">"off"</span>,</span><br><span class="line"><span class="string">"against"</span>: <span class="string">"on"</span>,</span><br><span class="line"><span class="string">"joincount"</span>: <span class="string">"on"</span>,</span><br><span class="line"><span class="string">"label"</span>: <span class="string">"on"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"tcount"</span>: 0,</span><br><span class="line"><span class="string">"title"</span>: <span class="string">"习近平会见加拿大总督"</span>,</span><br><span class="line"><span class="string">"url"</span>: <span class="string">"http://news.163.com/17/0713/20/CP8JPMSD000189FH.html"</span>,</span><br><span class="line"><span class="string">"vote"</span>: 83</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>通过分析发现网易的跟帖数为cmtAgainst+cmtVote+rcount，因此只需解析此Json数据并将3值加起来</p><ul><li>评论地址中有两个参数是从新闻详情页中获取，通过查看其网页源代码可以发现其具体值，类似以下结构<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var config = &#123;</span><br><span class="line">    <span class="string">"productKey"</span> : <span class="string">"a2869674571f77b5a0867c3d71db5856"</span>,</span><br><span class="line">    <span class="string">"docId"</span> : <span class="string">"CP8JPMSD000189FH"</span>,</span><br><span class="line">    <span class="string">"target"</span> : document.getElementById(<span class="string">"post_comment"</span>),   //Dom 容器</span><br><span class="line">    //展示的功能按钮：顶、踩、回复、收藏、举报、分享</span><br><span class="line">    <span class="string">"operators"</span>: [<span class="string">"up"</span>, <span class="string">"down"</span>, <span class="string">"reply"</span>, <span class="string">"share"</span>],</span><br><span class="line">    <span class="string">"isShowComments"</span>: isShowComments,   //是否显示帖子列表</span><br><span class="line">    <span class="string">"hotSize"</span>: 3,   //热门跟贴列表 展示 3 条</span><br><span class="line">    <span class="string">"newSize"</span>: 2,   //最新跟贴列表 展示 2 条</span><br><span class="line">    <span class="string">"submitType"</span>: <span class="string">"commentPage"</span>   //新发帖子的展现形式：停留在当前页面(currentPage) | 跳转到跟贴详情页(commentPage)</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="腾讯新闻"><a href="#腾讯新闻" class="headerlink" title="腾讯新闻"></a>腾讯新闻</h2><p>新闻网址首页：<a href="http://news.qq.com/" target="_blank" rel="noopener">http://news.qq.com/</a><br>新闻详情页地址格式：http://[\S]<em>.qq.com/a/[0-9]{8}/[0-9]</em>.htm，比如 <a href="http://news.qq.com/a/20170712/037822.htm" target="_blank" rel="noopener">http://news.qq.com/a/20170712/037822.htm</a><br><img src="/img/tencent.png" alt="webmagic"><br>新闻时间格式：yyyy-MM-dd hh:mm<br>评论数：动态获取</p><ul><li>评论地址 <a href="http://coral.qq.com/article/+cmt_id+/comment?commentid=0&amp;reqnum=1&amp;tag=&amp;callback=mainComment&amp;_=1389623278900" target="_blank" rel="noopener">http://coral.qq.com/article/+cmt_id+/comment?commentid=0&amp;reqnum=1&amp;tag=&amp;callback=mainComment&amp;_=1389623278900</a> ,比如 <a href="http://coral.qq.com/article/2026122514/comment?commentid=0&amp;reqnum=1&amp;tag=&amp;callback=mainComment&amp;_=1389623278900" target="_blank" rel="noopener">http://coral.qq.com/article/2026122514/comment?commentid=0&amp;reqnum=1&amp;tag=&amp;callback=mainComment&amp;_=1389623278900</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">mainComment(</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"errCode"</span>: 0,</span><br><span class="line"><span class="string">"data"</span>: &#123;</span><br><span class="line"><span class="string">"targetid"</span>: 2026122514,</span><br><span class="line"><span class="string">"display"</span>: 1,</span><br><span class="line"><span class="string">"total"</span>: 152,</span><br><span class="line"><span class="string">"reqnum"</span>: 1,</span><br><span class="line"><span class="string">"retnum"</span>: 1,</span><br><span class="line"><span class="string">"maxid"</span>: <span class="string">"6291427308406998878"</span>,</span><br><span class="line"><span class="string">"first"</span>: <span class="string">"6291427308406998878"</span>,</span><br><span class="line"><span class="string">"last"</span>: <span class="string">"6291427308406998878"</span>,</span><br><span class="line"><span class="string">"hasnext"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"commentid"</span>: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"id"</span>: <span class="string">"6291427308406998878"</span>,</span><br><span class="line"><span class="string">"rootid"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="string">"targetid"</span>: 2026122514,</span><br><span class="line"><span class="string">"parent"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="string">"timeDifference"</span>: <span class="string">"5分钟前"</span>,</span><br><span class="line"><span class="string">"time"</span>: 1499993159,</span><br><span class="line"><span class="string">"content"</span>: <span class="string">"坚信全中国各族人民在习总书记的带领下，终将实现我们中华民族伟大复兴的中国梦。"</span>,</span><br><span class="line"><span class="string">"title"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"up"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="string">"rep"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="string">"type"</span>: <span class="string">"1"</span>,</span><br><span class="line"><span class="string">"hotscale"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="string">"checktype"</span>: <span class="string">"2"</span>,</span><br><span class="line"><span class="string">"checkstatus"</span>: <span class="string">"1"</span>,</span><br><span class="line"><span class="string">"isdeleted"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="string">"tagself"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"taghost"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"source"</span>: <span class="string">"1"</span>,</span><br><span class="line"><span class="string">"location"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"address"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"rank"</span>: <span class="string">"-1"</span>,</span><br><span class="line"><span class="string">"custom"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"extend"</span>: &#123;</span><br><span class="line"><span class="string">"at"</span>: 0,</span><br><span class="line"><span class="string">"ut"</span>: 0,</span><br><span class="line"><span class="string">"ct"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"wt"</span>: 0</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"orireplynum"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="string">"richtype"</span>: 0,</span><br><span class="line"><span class="string">"userid"</span>: <span class="string">"279853601"</span>,</span><br><span class="line"><span class="string">"poke"</span>: 0,</span><br><span class="line"><span class="string">"abstract"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"thirdid"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"ispick"</span>: 0,</span><br><span class="line"><span class="string">"ishide"</span>: 0,</span><br><span class="line"><span class="string">"isauthor"</span>: 0,</span><br><span class="line"><span class="string">"replyuser"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"replyuserid"</span>: 0,</span><br><span class="line"><span class="string">"replyhwvip"</span>: 0,</span><br><span class="line"><span class="string">"replyhwlevel"</span>: 0,</span><br><span class="line"><span class="string">"replyhwannual"</span>: 0,</span><br><span class="line"><span class="string">"userinfo"</span>: &#123;</span><br><span class="line"><span class="string">"userid"</span>: <span class="string">"279853601"</span>,</span><br><span class="line"><span class="string">"uidex"</span>: <span class="string">"ec365d5f07251791cb0ba9b8437c382bbd"</span>,</span><br><span class="line"><span class="string">"nick"</span>: <span class="string">"捍卫"</span>,</span><br><span class="line"><span class="string">"head"</span>: <span class="string">"http://q3.qlogo.cn/g?b=qq&amp;k=hMeU8ic3IdgXGwaQpQ6iaJjw&amp;s=40&amp;t=1499961600"</span>,</span><br><span class="line"><span class="string">"gender"</span>: 1,</span><br><span class="line"><span class="string">"viptype"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="string">"mediaid"</span>: 0,</span><br><span class="line"><span class="string">"region"</span>: <span class="string">"新加坡::"</span>,</span><br><span class="line"><span class="string">"thirdlogin"</span>: 0,</span><br><span class="line"><span class="string">"hwvip"</span>: 0,</span><br><span class="line"><span class="string">"hwlevel"</span>: 0,</span><br><span class="line"><span class="string">"hwannual"</span>: 0,</span><br><span class="line"><span class="string">"identity"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"wbuserinfo"</span>: [],</span><br><span class="line"><span class="string">"certinfo"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"remark"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"fnd"</span>: 0</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"><span class="string">"targetinfo"</span>: &#123;</span><br><span class="line"><span class="string">"orgcommentnum"</span>: <span class="string">"414"</span>,</span><br><span class="line"><span class="string">"commentnum"</span>: <span class="string">"152"</span>,</span><br><span class="line"><span class="string">"checkstatus"</span>: <span class="string">"0"</span>,</span><br><span class="line"><span class="string">"checktype"</span>: <span class="string">"2"</span>,</span><br><span class="line"><span class="string">"city"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"voteid"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"topicids"</span>: <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"info"</span>: &#123;</span><br><span class="line"><span class="string">"time"</span>: 1499993452</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ul><p>其中 total 即为评论总数</p><ul><li>评论地址中有几个变量</li></ul><ol><li><p>cmt_id: 可以从新闻详情页中获取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">document.domain = <span class="string">'qq.com'</span>;</span><br><span class="line">    cmt_site = <span class="string">'news'</span>;</span><br><span class="line">    cmt_id = 2026122514;</span><br><span class="line">    cmt_is_group = 0;</span><br><span class="line">    cmt_count_id = <span class="string">'comment_count|comment_count2'</span>;</span><br></pre></td></tr></table></figure></li><li><p>commentid: 表示评论内容Id</p></li><li>reqnum：请求返回评论内容条数<br>结合参数 commentid与reqnum，我们可以获取全部评论内容的Json格式数据，由于我们进仅需要获取评论总是，因此将commentid设置为0，reqnum设置为1<h2 id="新浪新闻"><a href="#新浪新闻" class="headerlink" title="新浪新闻"></a>新浪新闻</h2>新闻网址首页：<a href="http://news.sina.com.cn/" target="_blank" rel="noopener">http://news.sina.com.cn/</a><br>新闻详情页地址格式：http://[\S]<em>.sina.com.cn/[\S]</em>/[0-9]{4}-[0-9]{2}-[0-9]{2}/doc-[\S]*.shtml ，比如 <a href="http://finance.sina.com.cn/chanjing/gsnews/2017-07-14/doc-ifyiakwa4053811.shtml" target="_blank" rel="noopener">http://finance.sina.com.cn/chanjing/gsnews/2017-07-14/doc-ifyiakwa4053811.shtml</a><br><img src="/img/sina.png" alt="webmagic"><br>新闻时间格式：yyyy年MM月dd日hh:mm<br>评论数：动态获取</li></ol><ul><li>评论地址：<a href="http://comment5.news.sina.com.cn/page/info?version=1&amp;format=js&amp;channel=+comment_channel+&amp;newsid=+comment_id" target="_blank" rel="noopener">http://comment5.news.sina.com.cn/page/info?version=1&amp;format=js&amp;channel=+comment_channel+&amp;newsid=+comment_id</a> ，比如 <a href="http://comment5.news.sina.com.cn/page/info?version=1&amp;format=js&amp;channel=cj&amp;newsid=comos-fyiakwa4053811" target="_blank" rel="noopener">http://comment5.news.sina.com.cn/page/info?version=1&amp;format=js&amp;channel=cj&amp;newsid=comos-fyiakwa4053811</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var data=&#123;<span class="string">"result"</span>: </span><br><span class="line">&#123;<span class="string">"status"</span>: &#123;<span class="string">"msg"</span>: <span class="string">""</span>, <span class="string">"code"</span>: 0&#125;, </span><br><span class="line"><span class="string">"count"</span>: &#123;<span class="string">"qreply"</span>: 165, <span class="string">"total"</span>: 351, <span class="string">"show"</span>: 144&#125;,</span><br><span class="line">....&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>其中 total 即为评论总数</p><ul><li>评论地址变量：可以从新闻详情页获取<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"sudameta"</span> <span class="attr">content</span>=<span class="string">"comment_channel:cj;comment_id:comos-fyiakwa4053811"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol><li>comment_channel</li><li>comment_id<h2 id="搜狐新闻"><a href="#搜狐新闻" class="headerlink" title="搜狐新闻"></a>搜狐新闻</h2>新闻网址首页：<a href="http://news.sohu.com/" target="_blank" rel="noopener">http://news.sohu.com/</a><br>新闻详情页地址格式：http://[\S]<em>.sohu.com/[0-9]{8}/[\S]</em>.shtml ，比如：<a href="http://news.sohu.com/20170629/n499130144.shtml" target="_blank" rel="noopener">http://news.sohu.com/20170629/n499130144.shtml</a><br><img src="/img/souhu2.png" alt="webmagic"><br>新闻时间格式：yyyy-MM-dd hh:mm:ss<br>评论数：动态获取</li></ol><ul><li><p>评论地址：<a href="http://changyan.sohu.com/api/3/topic/liteload?callback=jQuery1709683075909326675_1500009616671&amp;client_id=cyqemw6s1&amp;topic_url=+url" target="_blank" rel="noopener">http://changyan.sohu.com/api/3/topic/liteload?callback=jQuery1709683075909326675_1500009616671&amp;client_id=cyqemw6s1&amp;topic_url=+url</a> ，<br>比如 <a href="http://changyan.sohu.com/api/3/topic/liteload?callback=jQuery1709683075909326675_1500009616671&amp;client_id=cyqemw6s1&amp;topic_url=http://news.sohu.com/20170629/n499130144.shtml" target="_blank" rel="noopener">http://changyan.sohu.com/api/3/topic/liteload?callback=jQuery1709683075909326675_1500009616671&amp;client_id=cyqemw6s1&amp;topic_url=http://news.sohu.com/20170629/n499130144.shtml</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jQuery1709683075909326675_1500009616671(&#123;<span class="string">"cmt_sum"</span>:43,<span class="string">"comments"</span>:[],<span class="string">"hideList"</span>:<span class="literal">true</span>,</span><br><span class="line"><span class="string">"hots"</span>:[],<span class="string">"mode"</span>:2,<span class="string">"participation_sum"</span>:32655,<span class="string">"source_id"</span>:<span class="string">"499130144"</span>,</span><br><span class="line"><span class="string">"topic_category_id"</span>:<span class="string">"143746642|143746653|451178592|499130144"</span>,<span class="string">"topic_id"</span>:3400490087&#125;);</span><br></pre></td></tr></table></figure></li><li><p>评论地址变量：可以从新闻详情页获取<br>topicurl的值即为新闻详情地址</p></li></ul><ol><li>participation_sum：参与人数</li><li>cmt_sum：评论数<h2 id="凤凰网"><a href="#凤凰网" class="headerlink" title="凤凰网"></a>凤凰网</h2>新闻网址首页：<a href="http://www.ifeng.com/" target="_blank" rel="noopener">http://www.ifeng.com/</a><br>新闻详情页地址格式：http://[\S]<em>.ifeng.com/a/[0-9]{8}/[0-9]</em>_0.shtml ，比如 <a href="http://news.ifeng.com/a/20170714/51431015_0.shtml" target="_blank" rel="noopener">http://news.ifeng.com/a/20170714/51431015_0.shtml</a><br><img src="/img/ifeng.png" alt="webmagic"><br>新闻时间格式：yyyy年MM月dd日 hh:mm:ss<br>评论数：动态获取</li></ol><ul><li><p>评论地址：<a href="http://comment.ifeng.com/get.php?doc_url=+commentUrl+&amp;format=js&amp;job=1&amp;callback=callbackGetFastCommentCount&amp;callback=callbackGetFastCommentCount" target="_blank" rel="noopener">http://comment.ifeng.com/get.php?doc_url=+commentUrl+&amp;format=js&amp;job=1&amp;callback=callbackGetFastCommentCount&amp;callback=callbackGetFastCommentCount</a> ,比如 <a href="http://comment.ifeng.com/get.php?doc_url=http://news.ifeng.com/a/20170714/51431015_0.shtml&amp;format=js&amp;job=1&amp;callback=callbackGetFastCommentCount&amp;callback=callbackGetFastCommentCount" target="_blank" rel="noopener">http://comment.ifeng.com/get.php?doc_url=http://news.ifeng.com/a/20170714/51431015_0.shtml&amp;format=js&amp;job=1&amp;callback=callbackGetFastCommentCount&amp;callback=callbackGetFastCommentCount</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="title">function</span></span>()&#123;var commentJsonVarStr___=&#123;<span class="string">"count"</span>:151,<span class="string">"join_count"</span>:1329,</span><br><span class="line"><span class="string">"comments"</span>:[.....]&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>评论地址变量：可以从新闻详情页获取，commentUrl即为需要替换的变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// @TODO: 全局参数</span><br><span class="line">      define(<span class="string">"detail"</span>, [], <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">          <span class="built_in">return</span> &#123;</span><br><span class="line">              <span class="string">"docName"</span>: <span class="string">"国防部回应“中国军机飞越宫古海峡”：习惯就好"</span>,</span><br><span class="line">              <span class="string">"docUrl"</span>: <span class="string">"http://news.ifeng.com/a/20170714/51431015_0.shtml"</span>,</span><br><span class="line">             <span class="string">"summary"</span>: <span class="string">'原标题：国防部新闻发言人任国强答记者问记者问：据媒体报道，日本防卫省统和幕僚监部13日发布消息称，中国空军6架轰炸机当日飞越宫古海峡，日方还公布了中国军机的照片。请问对此作何评论？国防部新闻局：这是一'</span>,</span><br><span class="line">             <span class="string">"skey"</span>:<span class="string">"74cfb2"</span>,</span><br><span class="line">             <span class="string">"commentUrl"</span>:<span class="string">"http://news.ifeng.com/a/20170714/51431015_0.shtml"</span>,</span><br><span class="line">              <span class="string">"image"</span>: <span class="string">"http://p0.ifengimg.com/pmop/2017/0713/DF9496ED515EDD4A444FCAAFE95556374A73CF54_size164_w720_h572.png"</span>,</span><br><span class="line">              <span class="string">"channelTitle"</span>: <span class="string">"资讯"</span>            &#125;;</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure></li></ul><ol><li>count:评论数</li><li>join_count：参与人数</li><li>返回数据中包含评论内容，此处省略<h2 id="21CN"><a href="#21CN" class="headerlink" title="21CN"></a>21CN</h2>新闻网址首页：<a href="http://www.21cn.com/" target="_blank" rel="noopener">http://www.21cn.com/</a><br>新闻详情页地址格式：http://[\S]<em>.21cn.com/[\S]</em>/[0-9]{4}/[0-9]{4}/[0-9]{2}/[0-9]*.shtml ，比如<a href="http://news.21cn.com/caiji/roll1/a/2017/0117/15/31896281.shtml" target="_blank" rel="noopener">http://news.21cn.com/caiji/roll1/a/2017/0117/15/31896281.shtml</a><br><img src="/img/21CN1.png" alt="webmagic"><br><img src="/img/21CN2.png" alt="webmagic"><br>新闻时间格式：yyyy-MM-dd hh:mm:ss<br>评论数：动态获取</li></ol><ul><li><p>评论地址：<a href="http://review.21cn.com/review/list.do?jsoncallback=jQuery17206256071045321705_1499329382240&amp;operationId=0&amp;contentId=+contentId+&amp;pageNo=1&amp;pageSize=10&amp;sys=cms&amp;order=new&amp;_=1499329382281" target="_blank" rel="noopener">http://review.21cn.com/review/list.do?jsoncallback=jQuery17206256071045321705_1499329382240&amp;operationId=0&amp;contentId=+contentId+&amp;pageNo=1&amp;pageSize=10&amp;sys=cms&amp;order=new&amp;_=1499329382281</a> ，<br>比如 <a href="http://review.21cn.com/review/list.do?jsoncallback=jQuery17206256071045321705_1499329382240&amp;operationId=0&amp;contentId=31896281&amp;pageNo=1&amp;pageSize=10&amp;sys=cms&amp;order=new&amp;_=1499329382281" target="_blank" rel="noopener">http://review.21cn.com/review/list.do?jsoncallback=jQuery17206256071045321705_1499329382240&amp;operationId=0&amp;contentId=31896281&amp;pageNo=1&amp;pageSize=10&amp;sys=cms&amp;order=new&amp;_=1499329382281</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">jQuery17206256071045321705_1499329382240( </span><br><span class="line">&#123;<span class="string">"summary"</span>:&#123;<span class="string">"browseNum"</span>:0,<span class="string">"contentAbstract"</span>:<span class="string">"(闫旭)今年是香港回归20周年，福建省政协主席张昌平17日在福州表示，要积极参与闽籍社团纪念香港回归20周年等重大活动，加强与新生代乡亲的交流交往，进一步密切与港澳闽籍乡亲的联络联谊。福建省政协十一届五次会议当天在福州开幕，张昌平向大会作政协第十一届福建省委员会常务委员会工作报告。"</span>,<span class="string">"contentId"</span>:31896281,</span><br><span class="line"><span class="string">"contentNickName"</span>:<span class="string">"先锋者"</span>,<span class="string">"contentTime"</span>:<span class="string">"2017-01-17 15:49:46"</span>,<span class="string">"contentTitle"</span>:<span class="string">"纪念香港回归20周年 闽政协主席促密切与港澳互融互通"</span>,<span class="string">"contentUrl"</span>:<span class="string">"http://news.21cn.com/caiji/roll1/a/2017/0117/15/31896281.shtml"</span>,</span><br><span class="line"><span class="string">"contentUserId"</span>:110425294,<span class="string">"displayReview"</span>:<span class="literal">true</span>,<span class="string">"displaySasFlag"</span>:0,<span class="string">"eggNum"</span>:0,<span class="string">"favoriteNum"</span>:0,<span class="string">"firstReviewTime"</span>:<span class="string">"2017-01-17 16:20:40"</span>,<span class="string">"flowerNum"</span>:0,<span class="string">"forumFlag"</span>:1,<span class="string">"gradeAverageValue"</span>:0,<span class="string">"gradeFlag"</span>:1,</span><br><span class="line"><span class="string">"gradeItemMap"</span>:&#123;&#125;,<span class="string">"gradeNum"</span>:1,<span class="string">"gradeTotal"</span>:0,<span class="string">"gradeUserNum"</span>:0,<span class="string">"gradeValue"</span>:0,<span class="string">"hotDegree"</span>:6,<span class="string">"hotDegree4View"</span>:5,<span class="string">"lastGradeTime"</span>:<span class="string">"2017-02-12 16:03:46"</span>,<span class="string">"lastReviewTime"</span>:<span class="string">"2017-03-24 14:15:12"</span>,<span class="string">"lastReviewUserId"</span>:127017553,</span><br><span class="line"><span class="string">"operationId"</span>:9406,<span class="string">"operationName"</span>:<span class="string">"新闻频道"</span>,<span class="string">"reviewAgainstNum"</span>:0,<span class="string">"reviewFlag"</span>:1,<span class="string">"reviewGroupSumId"</span>:0,<span class="string">"reviewNum"</span>:5,<span class="string">"reviewShareNum"</span>:0,<span class="string">"reviewSumNum"</span>:5,<span class="string">"reviewSupportNum"</span>:0,<span class="string">"reviewTaxisFlag"</span>:1,<span class="string">"reviewTopFlag"</span>:0,</span><br><span class="line"><span class="string">"reviewUserNum"</span>:5,<span class="string">"shareNum"</span>:0,<span class="string">"subscriptionNum"</span>:0,<span class="string">"sumId"</span>:23873292&#125;,<span class="string">"medalMap"</span>:&#123;&#125;,<span class="string">"userMedalMap"</span>:&#123;<span class="string">"127017441"</span>:[],<span class="string">"127017260"</span>:[],<span class="string">"127017097"</span>:[],<span class="string">"127017553"</span>:[],<span class="string">"127017164"</span>:[]&#125;,<span class="string">"pageTurn"</span>:&#123;<span class="string">"currentPage"</span>:1,<span class="string">"end"</span>:5,<span class="string">"firstPage"</span>:1,<span class="string">"nextPage"</span>:1,<span class="string">"page"</span>:1,<span class="string">"pageCount"</span>:1,</span><br><span class="line"><span class="string">"pageSize"</span>:10,<span class="string">"prevPage"</span>:1,<span class="string">"rowCount"</span>:5,<span class="string">"start"</span>:0&#125;,<span class="string">"list"</span>:[&#123;<span class="string">"againstNum"</span>:0,<span class="string">"audioId"</span>:0,<span class="string">"childList"</span>:</span><br></pre></td></tr></table></figure></li><li><p>评论地址变量：可以从新闻详情页获取，替换contentId变量值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ARTICLE_INFO = window.ARTICLE_INFO || &#123;</span><br><span class="line">                   site: strSite,</span><br><span class="line">                   sect_id: 101029,</span><br><span class="line">                   sect_name: <span class="string">'滚动热点'</span>,</span><br><span class="line">                   title: <span class="string">'纪念香港回归20周年 闽政协主席促密切与港澳互融互通'</span>,</span><br><span class="line">                   operaId: 9406,</span><br><span class="line">                   contentId: 31896281,</span><br><span class="line">                   typeId: 101029,</span><br><span class="line">                   article_url: <span class="string">'http://news.21cn.com/caiji/roll1/a/2017/0117/15/31896281.shtml'</span>,</span><br><span class="line">                   pubtime: <span class="string">'2017-01-17 15:49:46'</span></span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure></li></ul><ol><li>reviewSumNum: 评论数<h2 id="奥一网"><a href="#奥一网" class="headerlink" title="奥一网"></a>奥一网</h2>新闻网址首页：<a href="http://www.oeeee.com/" target="_blank" rel="noopener">http://www.oeeee.com/</a><br>新闻详情页地址格式：<a href="http://www.oeeee.com/html/[0-9]{6}/[0-9]{2}/[0-9]*.html" target="_blank" rel="noopener">http://www.oeeee.com/html/[0-9]{6}/[0-9]{2}/[0-9]*.html</a> ，比如 <a href="http://www.oeeee.com/html/201707/13/493459.html" target="_blank" rel="noopener">http://www.oeeee.com/html/201707/13/493459.html</a><br><img src="/img/aoyi.png" alt="webmagic"><br>新闻时间格式：yyyy-MM-dd hh:mm<br>阅读量：动态获取</li></ol><ul><li><p>阅读量获取地址：<a href="http://www.oeeee.com/api/readnum.php?s=/readnum/readnum/id/+id+/type/article/show/1&amp;_=1497687490644" target="_blank" rel="noopener">http://www.oeeee.com/api/readnum.php?s=/readnum/readnum/id/+id+/type/article/show/1&amp;_=1497687490644</a> ,比如 <a href="http://www.oeeee.com/api/readnum.php?s=/readnum/readnum/id/493459/type/article/show/1&amp;_=1497687490644" target="_blank" rel="noopener">http://www.oeeee.com/api/readnum.php?s=/readnum/readnum/id/493459/type/article/show/1&amp;_=1497687490644</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">206</span><br></pre></td></tr></table></figure></li><li><p>阅读量地址变量：id，可以从详情页url获取，比如上面所提新闻id为493459</p></li></ul><h1 id="新浪微博"><a href="#新浪微博" class="headerlink" title="新浪微博"></a>新浪微博</h1><p>由于新浪微博的数据获取需要登录，具体可参考<a href="http://www.cnblogs.com/wzben/p/5024830.html" target="_blank" rel="noopener">使用Selenium登录新浪微博</a></p><h2 id="获取博主sinaName关于keywords主题的报道数"><a href="#获取博主sinaName关于keywords主题的报道数" class="headerlink" title="获取博主sinaName关于keywords主题的报道数"></a>获取博主sinaName关于keywords主题的报道数</h2><ul><li>url地址：<a href="https://weibo.cn/search/mblog/?keyword=keywords&amp;filter=hasv&amp;nick=sinaName&amp;starttime=starttime&amp;endtime=endtime" target="_blank" rel="noopener">https://weibo.cn/search/mblog/?keyword=keywords&amp;filter=hasv&amp;nick=sinaName&amp;starttime=starttime&amp;endtime=endtime</a> ,比如 <a href="https://weibo.cn/search/mblog/?keyword=香港回归&amp;filter=hasv&amp;nick=人民网&amp;starttime=20170701&amp;endtime=20170712" target="_blank" rel="noopener">https://weibo.cn/search/mblog/?keyword=香港回归&amp;filter=hasv&amp;nick=人民网&amp;starttime=20170701&amp;endtime=20170712</a><br><img src="/img/weibo.png" alt="webmagic"></li><li>地址中变量</li></ul><ol><li>keywords：关键词，即需要获取与关键词相关的信息</li><li>sinaName：新浪微博名，即需要获取哪个微博的相关信息</li><li>starttime：开始时间，格式为yyyyMMdd</li><li>endtime：结束时间，格式为yyyyMMdd<h2 id="获取新浪微博详细信息"><a href="#获取新浪微博详细信息" class="headerlink" title="获取新浪微博详细信息"></a>获取新浪微博详细信息</h2></li></ol><ul><li>详情页可以获取报道更多详细信息，如转发数、点赞数、评论数，以及转发列表、评论列表以及点赞列表，比如 <a href="https://weibo.cn/repost/Fbk5Y54in?uid=2286908003&amp;rl=1" target="_blank" rel="noopener">https://weibo.cn/repost/Fbk5Y54in?uid=2286908003&amp;rl=1</a></li></ul><ol><li>评论<br><img src="/img/weibo2.png" alt="webmagic"></li><li>转发<br><img src="/img/weibo3.png" alt="webmagic"></li><li>点赞<br><img src="/img/weibo4.png" alt="webmagic"></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;最近接触到一个新闻类网站的数据爬取项目，包括各大新闻网站，如网易、腾讯、新浪等新闻标题、时间、评论数、点赞量、转发量以及阅读量等数据获取。其中较麻烦模块主要是动态数据的获取，以及新浪微博数据的获取，在此分享一些经验给大家参考，如有不对望指正交流、共同进步。&lt;br&gt;
    
    </summary>
    
      <category term="项目" scheme="https://lemon2013.github.io/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="网页爬虫" scheme="https://lemon2013.github.io/tags/%E7%BD%91%E9%A1%B5%E7%88%AC%E8%99%AB/"/>
    
      <category term="新闻" scheme="https://lemon2013.github.io/tags/%E6%96%B0%E9%97%BB/"/>
    
      <category term="网易新闻" scheme="https://lemon2013.github.io/tags/%E7%BD%91%E6%98%93%E6%96%B0%E9%97%BB/"/>
    
      <category term="腾讯新闻" scheme="https://lemon2013.github.io/tags/%E8%85%BE%E8%AE%AF%E6%96%B0%E9%97%BB/"/>
    
      <category term="凤凰网" scheme="https://lemon2013.github.io/tags/%E5%87%A4%E5%87%B0%E7%BD%91/"/>
    
      <category term="新浪新闻" scheme="https://lemon2013.github.io/tags/%E6%96%B0%E6%B5%AA%E6%96%B0%E9%97%BB/"/>
    
      <category term="搜狐新闻" scheme="https://lemon2013.github.io/tags/%E6%90%9C%E7%8B%90%E6%96%B0%E9%97%BB/"/>
    
      <category term="新浪微博" scheme="https://lemon2013.github.io/tags/%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A/"/>
    
  </entry>
  
  <entry>
    <title>动态规划之矩阵链乘法</title>
    <link href="https://lemon2013.github.io/2017/07/13/dynamic-matrix-chain/"/>
    <id>https://lemon2013.github.io/2017/07/13/dynamic-matrix-chain/</id>
    <published>2017-07-13T11:36:49.000Z</published>
    <updated>2017-07-19T02:37:17.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="矩阵链乘法"><a href="#矩阵链乘法" class="headerlink" title="矩阵链乘法"></a>矩阵链乘法</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>给定一个 $n$ 个矩阵的序列(矩阵链) &lt;$A_1,A_2,…,A_n$&gt;,我们希望计算它们的乘积<br>$$<br>A_1A_2…A_n<br>$$<br>为了计算表达式，我们可以先用括号明确计算次序，然后利用标准的矩阵相乘算法进行计算。<a id="more"></a>由于矩阵乘法满足结合律，因此任何加括号的方法都会得到相同的计算结果。我们称有如下性质的矩阵乘积链为<strong>完全括号话</strong>：它是单一矩阵，或者是两个完全括号化的矩阵乘积链的积，且已外加括号。例如，如果矩阵链为&lt;$A_1,A_2,A_3,A_4$&gt;,则共有 5 种完全括号化的矩阵乘积链：<br>$$<br>(A_1(A_2(A_3A_4))),<br>(A_1(A_2A_3(A_4))),<br>((A_1A_2)(A_3A_4)),<br>((A_1A_2A_3)(A_4)),<br>(((A_1A_2)A_3)A_4)<br>$$<br>两个矩阵 $A$ 和 $B$ 只有相容，即$A$的列数等于 $B$ 的行数时，才能相乘。如果 $A$ 是 $p \times q$ 的矩阵，$B$ 是 $q \times r$ 的矩阵那么乘积 $C$ 是 $p \times r$ 的矩阵。计算 $C$ 的代价为 $pqr$，我们使用标量乘法的次数来表示计算代价。<br><strong>矩阵链乘法问题</strong>：给定 $n$ 个矩阵的链&lt;$A_1,A_2,…,A_n$&gt;，矩阵 $A_i$ 的规模为 $p_{i-1} \times p_i (1\leq i \leq n )$，求完全括号化方案，使得计算乘积 $A_1A_2…A_n$所需的标量乘法次数最少。</p><h2 id="动态规划求解"><a href="#动态规划求解" class="headerlink" title="动态规划求解"></a>动态规划求解</h2><h3 id="最优解结构"><a href="#最优解结构" class="headerlink" title="最优解结构"></a>最优解结构</h3><p>为了方便起见，我们用符号 $A_{i.j}(i \leq j)$ 表示$A_iA_{i+1}…A_j$ 乘积的结果矩阵。<br>假设$A_iA_{i+1}…A_j$ 的最优括号化方案的分割点在 $A_k$ 和 $A_{k+1}$ 之间。那么，继续对”前缀”子链 $A_iA_{i+1}…A_k$，”后缀” $A_{k+1}A_{k+2}…A_j$ 进行括号化 (<strong>独立求解</strong>)。</p><h3 id="递归定义"><a href="#递归定义" class="headerlink" title="递归定义"></a>递归定义</h3><p>令 $m[i,j]$ 表示计算矩阵 $A_{i.j}$ 所需标量乘法次数的最小值，原问题的最优解—–计算$A_{1..n}$ 所需的最低代价就是 $m[1,n]$。<br>我们假设 $A_iA_{i+1}…A_j$ 的最优括号化方案的分割点在矩阵 $A_k$ 和 $A_{k+1}$ 之间，其中 $i \leq k &lt;j$。 那么，$m[i,j]$ 就等于计算 $A_{i.k}$ 和 $A_{k+1.j}$ 的代价加上两者相乘的代价的最小值：<br>$$<br>m[i,j]=m[i,k]+m[k+1,j]+p_{i-1}p_kp_j<br>$$<br>因此递归求解公式为<br>if i==j<br>$$<br>m[i,j]=0<br>$$<br>else if i&lt;j<br>$$<br>m[i,j]=min\{m[i,k]+m[k+1,j]+p_{i-1}p_kp_j\},i \leq k&lt;j<br>$$</p><h3 id="计算最优值"><a href="#计算最优值" class="headerlink" title="计算最优值"></a>计算最优值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMatrixChanOrder</span><span class="params">(<span class="keyword">int</span>[] p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = p.length;</span><br><span class="line"><span class="keyword">long</span>[][] dp = <span class="keyword">new</span> <span class="keyword">long</span>[n][n];</span><br><span class="line"><span class="keyword">int</span>[][] s = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">dp[i][i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">2</span>; l &lt; n; l++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - l; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> j = i + l - <span class="number">1</span>;</span><br><span class="line">dp[i][j] = Long.MAX_VALUE;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &lt; j; k++) &#123;</span><br><span class="line"><span class="keyword">long</span> temp = dp[i][j];</span><br><span class="line">dp[i][j] = Math.min(dp[i][j], dp[i][k] + dp[k + <span class="number">1</span>][j] + p[i - <span class="number">1</span>] * p[k] * p[j]);</span><br><span class="line"><span class="keyword">if</span>(temp!=dp[i][j])&#123;</span><br><span class="line">s[i][j]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(dp[<span class="number">1</span>][n-<span class="number">1</span>]+<span class="string">" "</span>+s[<span class="number">1</span>][n-<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假定矩阵 $A_i$ 的规模为 $p_{i-1} \times p_i,(i=1,2,…,n)$，输入的序列 $p=$&lt;$p_0,p_1,…,p_n$&gt;<br>比如：</p><table><thead><tr><th style="text-align:left">矩阵</th><th style="text-align:center">$A_1$</th><th style="text-align:center">$A_2$</th><th style="text-align:center">$A_3$</th><th style="text-align:center">$A_4$</th><th style="text-align:center">$A_5$</th><th style="text-align:center">$A_6$</th></tr></thead><tbody><tr><td style="text-align:left">规模</td><td style="text-align:center">$30 \times 35$</td><td style="text-align:center">$35 \times 15$</td><td style="text-align:center">$15 \times 5$</td><td style="text-align:center">$5 \times 10$</td><td style="text-align:center">$10 \times 20$</td><td style="text-align:center">$20 \times 25$</td></tr></tbody></table><p>则<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] p = &#123; <span class="number">30</span>, <span class="number">35</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">25</span> &#125;;</span><br></pre></td></tr></table></figure></p><h3 id="构造最优解"><a href="#构造最优解" class="headerlink" title="构造最优解"></a>构造最优解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printOptimal</span><span class="params">(<span class="keyword">int</span>[][] s,<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i==j)&#123;</span><br><span class="line">System.out.print(<span class="string">"A"</span>+i);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">System.out.print(<span class="string">"("</span>);</span><br><span class="line">printOptimal(s,i,s[i][j]);</span><br><span class="line">printOptimal(s,s[i][j]+<span class="number">1</span>,j);</span><br><span class="line">System.out.print(<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>完整代码以及相应示例图见 <a href="https://github.com/lemon2013/algorithm/blob/master/MatrixChain.java" target="_blank" rel="noopener">https://github.com/lemon2013/algorithm/blob/master/MatrixChain.java</a> </strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;矩阵链乘法&quot;&gt;&lt;a href=&quot;#矩阵链乘法&quot; class=&quot;headerlink&quot; title=&quot;矩阵链乘法&quot;&gt;&lt;/a&gt;矩阵链乘法&lt;/h1&gt;&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;给定一个 $n$ 个矩阵的序列(矩阵链) &amp;lt;$A_1,A_2,…,A_n$&amp;gt;,我们希望计算它们的乘积&lt;br&gt;$$&lt;br&gt;A_1A_2…A_n&lt;br&gt;$$&lt;br&gt;为了计算表达式，我们可以先用括号明确计算次序，然后利用标准的矩阵相乘算法进行计算。
    
    </summary>
    
      <category term="动态规划" scheme="https://lemon2013.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="算法" scheme="https://lemon2013.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法导论" scheme="https://lemon2013.github.io/tags/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/"/>
    
      <category term="矩阵链乘法" scheme="https://lemon2013.github.io/tags/%E7%9F%A9%E9%98%B5%E9%93%BE%E4%B9%98%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>深圳市媒体传播效力评估系统用户手册</title>
    <link href="https://lemon2013.github.io/2017/07/09/user-manual/"/>
    <id>https://lemon2013.github.io/2017/07/09/user-manual/</id>
    <published>2017-07-09T04:10:24.000Z</published>
    <updated>2019-01-06T05:09:43.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h2><p><img src="/img/index.png" alt="首页"><br><a id="more"></a></p><ul><li>显示数据源数目</li><li>数据采集模板：包括网站论坛、新浪微博、百度新闻以及百度搜索四大类</li><li>数据分析：表格分析，获取各大新闻网站、新浪微博等相关新闻的评论量、阅读量、点赞量以及转发量等信息</li><li>折线图：按天统计三大新闻类别（网站论坛、新浪微博、百度新闻）相关主题报道数，以折线图形式展示</li></ul><p><img src="/img/newsline.png" alt="首页"></p><ul><li><p>饼状图：统计三个新闻类别在特定时间的新闻发布量，以饼状图展示<br><img src="/img/newsb.png" alt="首页"></p><h2 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h2><h3 id="网站论坛"><a href="#网站论坛" class="headerlink" title="网站论坛"></a>网站论坛</h3><p><img src="/img/dataming.png" alt="首页"></p></li><li><p>数据源选取：包括大粤网、奥一网、天涯社区以及深圳新闻网<br><img src="/img/websource.png" alt="首页"></p></li><li>关键词：用户输入待获取新闻主题关键词<br><img src="/img/keyword.png" alt="首页"></li><li>时间范围选取：<br><img src="/img/date.png" alt="首页"></li><li>点击抓取数据按钮即可爬取相关内容<br><img src="/img/webspider.png" alt="首页"><br><img src="/img/webdataming.png" alt="首页"><br>得到临时列表，支持数据的查询、导出以及二次筛选，通过点击提交按钮得到最终数据，可在数据分析列表中查看。<br><img src="/img/webdatamingres.png" alt="首页"><h3 id="新浪微博"><a href="#新浪微博" class="headerlink" title="新浪微博"></a>新浪微博</h3><img src="/img/sinaming.png" alt="首页"></li><li>操作方法跟网站论坛模块类似<br><img src="/img/sinadataming.png" alt="首页"><h3 id="百度新闻"><a href="#百度新闻" class="headerlink" title="百度新闻"></a>百度新闻</h3><img src="/img/baiduming.png" alt="首页"></li><li>固定数据源，一共12个主要新闻网站：1.网易  2.新浪  3.21CN  4.腾讯  5.界面新闻  6.南方周末  7.凤凰网  8.澎湃新闻  9.搜狐  10.新华  11.人民网  12.南方网</li><li>其他操作类似<br><img src="/img/baidunewsspider.png" alt="首页"><h3 id="百度关键词搜索"><a href="#百度关键词搜索" class="headerlink" title="百度关键词搜索"></a>百度关键词搜索</h3><img src="/img/baidukeyword.png" alt="首页"></li><li>登录百度账号</li><li>如搜索“粤港澳大湾区”<br><img src="/img/baidukeywords2.png" alt="首页"><br><img src="/img/baidukeywords3.png" alt="首页"><br><img src="/img/baidukeywords4.png" alt="首页"><br><img src="/img/baidukeywords5.png" alt="首页"><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><h3 id="新闻列表"><a href="#新闻列表" class="headerlink" title="新闻列表"></a>新闻列表</h3><img src="/img/newlist.png" alt="首页"><br>包含所有已上传新闻报道信息，支持删除、查找以及导出等功能<h3 id="条形图"><a href="#条形图" class="headerlink" title="条形图"></a>条形图</h3><img src="/img/bar.png" alt="首页"></li><li>百度新闻：统计百度新闻关于特定新闻主题的报道数，以条形图展示。</li><li>新浪微博：统计各官微对特定新闻主题的报道数，以条形图展示。</li><li>网站论坛：统计各大网站对特定新闻主题的报道数，以条形图展示。<h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3></li><li>百度新闻：按天统计百度新闻对特定新闻主题的报道数，以折线图展示。<br><img src="/img/baidunewsline2.png" alt="首页"></li><li>新浪微博：按天统计新浪微博对特定新闻主题的报道数，以折线图展示。<br><img src="/img/sinanewsline.png" alt="首页"></li><li>网站论坛：按天统计网站论坛对特定新闻主题的报道数，以折线图展示。<br><img src="/img/webnewsline.png" alt="首页"><h2 id="数据源列表"><a href="#数据源列表" class="headerlink" title="数据源列表"></a>数据源列表</h2>新闻数据爬取源<br><img src="/img/newsourcelist.png" alt="首页"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;首页&quot;&gt;&lt;a href=&quot;#首页&quot; class=&quot;headerlink&quot; title=&quot;首页&quot;&gt;&lt;/a&gt;首页&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/index.png&quot; alt=&quot;首页&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="项目" scheme="https://lemon2013.github.io/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="项目" scheme="https://lemon2013.github.io/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="网页爬虫" scheme="https://lemon2013.github.io/tags/%E7%BD%91%E9%A1%B5%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>动态规划之钢条切割</title>
    <link href="https://lemon2013.github.io/2017/05/31/dynamic-programming/"/>
    <id>https://lemon2013.github.io/2017/05/31/dynamic-programming/</id>
    <published>2017-05-31T08:33:04.000Z</published>
    <updated>2019-01-06T05:09:51.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态规划简介-算法导论"><a href="#动态规划简介-算法导论" class="headerlink" title="动态规划简介(算法导论)"></a>动态规划简介(算法导论)</h1><p>动态规划方法通常用来求解最优化问题。这类问题可以有很多可行解，每个解都有一个值，我们希望寻找具有最优值(最小值或最大值)的解。我们称这样的解为问题的一个最优解，但是不是唯一的最优解，因为可能有多个解都能达到最优值。</p><p>我们通常按如下4个步骤来设计一个动态规划算法：</p><ol><li>刻画一个最优解的结构特征。</li><li>递归地定义最优解的值。</li><li>计算最优解的值，通常采用自底向上的方法。</li><li>利用计算出的信息构造一个最优解。<a id="more"></a><h1 id="钢条切割"><a href="#钢条切割" class="headerlink" title="钢条切割"></a>钢条切割</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2>给定一段长度为 $n$ 英寸的钢条和一个价格表 $p_i (i=1,2,…,n)$， 求切割钢条方案，使得销售收益 $r_n$ 最大。</li></ol><table><thead><tr><th style="text-align:left">长度 $i$</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th><th style="text-align:center">7</th><th style="text-align:center">8</th><th style="text-align:center">9</th><th style="text-align:center">10</th></tr></thead><tbody><tr><td style="text-align:left">价格 $p_i$</td><td style="text-align:center">1</td><td style="text-align:center">5</td><td style="text-align:center">8</td><td style="text-align:center">9</td><td style="text-align:center">10</td><td style="text-align:center">17</td><td style="text-align:center">17</td><td style="text-align:center">20</td><td style="text-align:center">24</td><td style="text-align:center">30</td></tr></tbody></table><p>表1.1 钢条价格样例。每段长度为 $i$ 英寸的钢条为公司带来 $p_i$ 美元的收益</p><h2 id="动态规划求解"><a href="#动态规划求解" class="headerlink" title="动态规划求解"></a>动态规划求解</h2><p>长度为 $n$ 英寸的钢条共有 $2^{n-1}$ 种不同的切割方案。在距离钢条左端 $i(i=1,2,…,n-1)$ 英寸处，我们可以选择切割或者不切割。为了方便描述，我们用加法符号表示切割方案，比如7=2+2+3表示将长度为7英寸的钢条切割为三段(长度为2、2、3)。<br>如果一个最优解将钢条切割 $k$ 段($1&lt;=k&lt;=n$),那么最有切割方案，可以用如下表示方式<br>$$<br>n=i_1+i_2+…+i_k<br>$$ ,<br>将钢条切割为长度为 $i_1,i_2,…,i_k$ 的小段，得到最大利益表示如下<br>$$<br>r_n=p_{i_1}+p_{i_2}+…+p_{i_k}<br>$$</p><h3 id="最优解结构"><a href="#最优解结构" class="headerlink" title="最优解结构"></a>最优解结构</h3><p>为了求解规模为 $n$ 的原问题，我们可以将其分解为规模更小的子问题求解。如果问题的最优解由相关子问题的最优解组合得到，我们则称此问题满足<strong>最优子结构</strong>。在钢条切割问题上，我们完成钢条首次切割后,可以将两段钢条看成两个独立的钢条切割实例。通过组合两个子问题的最优解，并在所有可能中取收益最大的组合方案得到最优解。</p><h3 id="递归定义"><a href="#递归定义" class="headerlink" title="递归定义"></a>递归定义</h3><p>将钢条从左边切割长度为 $i$ 的一段，右边剩下长度为 $n-1$ ,假定左边钢条不再切割，只需对右边钢条继续切割，使用递归的思想求解。可得到以下递归版本定义<br>$$<br>r_n = \max(p_i+r_{n-i}),1\leq i \leq n.<br>$$<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getCutRod</span><span class="params">(<span class="keyword">long</span>[] p, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> q = Long.MIN_VALUE;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">11</span>)&#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">q =  Math.max(q, p[i] + getCutRod(p, n - i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> q;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中数组p表示价格数组，数组大小为n+1，初始化如下<br>if(n&lt;=10),数组大小定义为11，初始化如下<br>p[0] = 0;<br>p[1] = 1;<br>p[2] = 5;<br>p[3] = 8;<br>p[4] = 9;<br>p[5] = 10;<br>p[6] = 17;<br>p[7] = 17;<br>p[8] = 20;<br>p[9] = 24;<br>p[10] = 30;<br>其他情况，数组大小根据输入的n值大小动态确定，前11个值初始化为上面所提，其他为默认值0<br>但是该版本的运行时间随着n的增加呈指数增长，后面会给出对比曲线。</p><h3 id="计算最优值"><a href="#计算最优值" class="headerlink" title="计算最优值"></a>计算最优值</h3><p>我们采用自底向上的动态规划的方法得到更有效的算法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getCutRodDP</span><span class="params">(<span class="keyword">long</span>[] p, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span>[] dp = <span class="keyword">new</span> <span class="keyword">long</span>[n + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span>[] length = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">long</span> q = Long.MIN_VALUE;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line"><span class="keyword">long</span> temp = q;</span><br><span class="line">q = j &lt; p.length ? Math.max(q, p[j] + dp[i - j]) : Math.max(q, dp[j] + dp[i - j]);</span><br><span class="line"><span class="keyword">if</span> (temp &lt; q) &#123;</span><br><span class="line">length[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">dp[i] = q;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">return</span> dp[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>p表示价格表，如本文中应该为p的数组大小应该为11。<br>动态规划版本与递归版本时间消耗对比如下,可以明显看到递归版本的时间呈指数增长<br><img src="/img/timecost2.png" alt="首页"><br>当钢条长度增长到35时，鄙人渣渣电脑就跑不动了，以下表示动态规划算法版本的时间消耗表</p><table><thead><tr><th style="text-align:left">长度</th><th style="text-align:center">200</th><th style="text-align:center">400</th><th style="text-align:center">600</th><th style="text-align:center">800</th><th style="text-align:center">1000</th><th style="text-align:center">1500</th><th style="text-align:center">2000</th><th style="text-align:center">4000</th><th style="text-align:center">6000</th><th style="text-align:center">10000</th></tr></thead><tbody><tr><td style="text-align:left">耗时(ms)</td><td style="text-align:center">1</td><td style="text-align:center">3</td><td style="text-align:center">4</td><td style="text-align:center">6</td><td style="text-align:center">7</td><td style="text-align:center">11</td><td style="text-align:center">13</td><td style="text-align:center">29</td><td style="text-align:center">54</td><td style="text-align:center">133</td></tr></tbody></table><h3 id="构造最优解"><a href="#构造最优解" class="headerlink" title="构造最优解"></a>构造最优解</h3><p>前面我们进给出最优解的值，并没给出具体切割方案<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCutRodDP</span><span class="params">(<span class="keyword">long</span>[] p, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span>[] dp = <span class="keyword">new</span> <span class="keyword">long</span>[n + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span>[] length = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">long</span> q = Long.MIN_VALUE;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line"><span class="keyword">long</span> temp = q;</span><br><span class="line">q = j &lt; p.length ? Math.max(q, p[j] + dp[i - j]) : Math.max(q, dp[j] + dp[i - j]);</span><br><span class="line"><span class="keyword">if</span> (temp &lt; q) &#123;</span><br><span class="line">length[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">dp[i] = q;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//构造最优解</span></span><br><span class="line"><span class="keyword">int</span> temp = n;</span><br><span class="line">StringBuffer str = <span class="keyword">new</span> StringBuffer(<span class="string">"r"</span> + n + <span class="string">"="</span> + dp[n] + <span class="string">","</span> + <span class="string">"切割方案"</span> + n + <span class="string">"="</span>);</span><br><span class="line"><span class="keyword">while</span> (temp &gt; <span class="number">0</span>) &#123;</span><br><span class="line">str.append(length[temp]);</span><br><span class="line">str.append(<span class="string">"+"</span>);</span><br><span class="line">temp = temp - length[temp];</span><br><span class="line">&#125;</span><br><span class="line">str.delete(str.length() - <span class="number">1</span>, str.length());</span><br><span class="line"><span class="keyword">return</span> str.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>测试<br>r11=31,切割方案11=1+10，<br>r15=43,切割方案15=2+3+10，<br>r33=98,切割方案33=3+10+10+10</p><p><strong>完整代码以及相应示例图见 <a href="https://github.com/lemon2013/algorithm/blob/master/src/com/pty/graph/Cutrod.java" target="_blank" rel="noopener">https://github.com/lemon2013/algorithm/blob/master/src/com/pty/graph/Cutrod.java</a> </strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;动态规划简介-算法导论&quot;&gt;&lt;a href=&quot;#动态规划简介-算法导论&quot; class=&quot;headerlink&quot; title=&quot;动态规划简介(算法导论)&quot;&gt;&lt;/a&gt;动态规划简介(算法导论)&lt;/h1&gt;&lt;p&gt;动态规划方法通常用来求解最优化问题。这类问题可以有很多可行解，每个解都有一个值，我们希望寻找具有最优值(最小值或最大值)的解。我们称这样的解为问题的一个最优解，但是不是唯一的最优解，因为可能有多个解都能达到最优值。&lt;/p&gt;
&lt;p&gt;我们通常按如下4个步骤来设计一个动态规划算法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;刻画一个最优解的结构特征。&lt;/li&gt;
&lt;li&gt;递归地定义最优解的值。&lt;/li&gt;
&lt;li&gt;计算最优解的值，通常采用自底向上的方法。&lt;/li&gt;
&lt;li&gt;利用计算出的信息构造一个最优解。
    
    </summary>
    
      <category term="动态规划" scheme="https://lemon2013.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="钢条切割" scheme="https://lemon2013.github.io/tags/%E9%92%A2%E6%9D%A1%E5%88%87%E5%89%B2/"/>
    
      <category term="算法" scheme="https://lemon2013.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法导论" scheme="https://lemon2013.github.io/tags/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>图搜索算法</title>
    <link href="https://lemon2013.github.io/2017/05/27/graph-search/"/>
    <id>https://lemon2013.github.io/2017/05/27/graph-search/</id>
    <published>2017-05-27T08:17:49.000Z</published>
    <updated>2019-01-06T05:09:48.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图的表示"><a href="#图的表示" class="headerlink" title="图的表示"></a>图的表示</h1><p>所谓的图$G=(V,E)$，由顶点(Vertex) $V$ 和边(Edges) $E$ 组成。可以用两种标准方式来表示：</p><ul><li>邻接链表</li><li>邻接矩阵</li></ul><p><img src="/img/graph.png" alt="Alt text"><br><a id="more"></a></p><p>根据图是否有向，可以将图分为有向图和无向图。</p><h2 id="邻接链表"><a href="#邻接链表" class="headerlink" title="邻接链表"></a>邻接链表</h2><p><strong>邻接链表</strong>由 $|V|$ 条链表构成，即每个顶点 $V_i \in V$有一条链表，链表中存储该顶点的相邻顶点。一般来说，邻接链表更适合表示<strong>稀疏图</strong>(边的条数$|E|$ 远远小于$|V|^2$的图)。<br><img src="/img/tiantian.png" alt="邻接链表表示图"><br>如上图所示，图C为无向图A($G=(V,E),|V|=5,|E|=7$)的邻接链表表示，共有5条链表，且所有邻接链表的长度之和等于 $2|E|$, 即14。图D为有向图B($G=(V,E),|V|=5,|E|=7$)得邻接链表表示，邻接链表的长度之和等于 $2|E|$ 。不论是有向图还是无向图均需要的存储空间为 $\Theta(V+E)$。</p><h2 id="邻接矩阵"><a href="#邻接矩阵" class="headerlink" title="邻接矩阵"></a>邻接矩阵</h2><p>对于邻接链表而言，存在一个明显的不足就是无法快速判断边$(u,v)$ 是否为图中的边，而邻接矩阵恰恰克服了这一缺陷。<br><strong>邻接矩阵</strong>，对于图$G$而言，其邻接矩阵由 $|V|\times|V|$的矩阵 $A=(a_{ij})$ 表示, 并满足以下关系:</p><ul><li>$a_{ij}=1 , 如果(i,j) \in E$</li><li>$a_{ij}=0 , 其他$</li></ul><p>图E、图F分别给出了无向图与有向图的邻接矩阵表示，其空间需求皆为$\Theta(V^2)$。与邻接链表相反，邻接矩阵更适合表示<strong>稠密图</strong>(边的条数$|E|$ 接近 $|V|^2$的图)。<br><img src="/img/graphma.png" alt="Alt text"></p><h1 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h1><h2 id="广度优先搜索-BFS"><a href="#广度优先搜索-BFS" class="headerlink" title="广度优先搜索(BFS)"></a>广度优先搜索(BFS)</h2><p>给定图$G = (V,E)$以及源点 $S$, 通过调用广度优先算法可以发现从源点到达的所有顶点，同时生产一颗 “<strong>广度优先搜索树</strong>”。这里我们将借助一个先进先出(FIFO)的队列 $Queue$ 实现算法。<br>下面给出该算法的文字描述：</p><ol><li>初始化所有顶点，将顶点标记为未访问。</li><li>将顶点 $S$ 存入队列 $Queue$ 中。</li><li>如果队列 $Queue$ 非空，进入下一步，否则退出。</li><li>出队列 $DeQueue$ ，得到顶点 $u$，如果 $u$ 未被访问，进入下一步，否则回到步骤3。</li><li>将 $u$ 标记为已访问，并将顶点 $u$ 的所有满足<strong>条件</strong>(1.未访问，2.队列中不存在该结点)的邻接结点存入$Queue$ 中,。</li><li>打印顶点 $u$，跳转到步骤3.</li></ol><p>为了便于理解，我们结合图A中表示的无向图，源点为A，给出BFS的执行过程：<br><img src="/img/bfs.png?imageMogr2/thumbnail/!25p" alt="Alt text"></p><p><1>. 如图(a)所示，我们初始化所有顶点状态未访问(用绿色表示)，将源点$A$存入队列 $Queue$。</1></p><p><2>. 如图(b)所示，弹出$A$并将其邻接结点$B,E$加入队列中,输入$A$。</2></p><p><3>. 如图(c)所示，弹出队列头部元素$B$，将其满足条件的邻接结点 $C,D$ 存入队列，输出 $B$。</3></p><p><4>. 如图(d)所示，弹出队列头部元素$E$，其邻接结点均已入队列，输出 $E$。</4></p><p><5>. 如图(e)所示，弹出队列头部元素$C$，其邻接结点均已入队列，输出 $C$。</5></p><p><5>. 如图(f)所示，弹出队列头部元素$D$，其邻接结点均已入队列，输出 $D$。</5></p><p><6>. 队列 $Queue$ 为空，终止算法。最终得到输出数列 $A,B,E,C,D$，其广度优先搜索树如下图G所示：</6></p><p><img src="/img/bfstree.png?imageMogr2/thumbnail/!40p" alt="Alt text"></p><h2 id="深度优先搜索-DFS"><a href="#深度优先搜索-DFS" class="headerlink" title="深度优先搜索(DFS)"></a>深度优先搜索(DFS)</h2><p>深度优先搜索总是对最近才发现的结点 $v$ 的出发边遍历直到结点的所有出发边均被发现，然后再“回溯”到 $v$ 的前驱结点来搜索其出发边。这里我们借助栈 $Stack$ 的思想来描述算法。<br>下面给出该算法的文字描述：</p><ol><li>初始化所有顶点，将顶点标记为未访问。</li><li>将出发点 $S$ 压入栈 $Stack$ 中。</li><li>如果栈非空，进入下一步，否则退出结束算法。</li><li>弹出栈顶结点 $u$，如果 $u$ 未被访问，进入下一步，否则回到步骤3。</li><li>将 $u$ 标记为已访问，并将顶点 $u$ 的所有满足<strong>条件</strong>(1.未访问，2.栈中不存在该结点)的邻接结点存入$Stack$ 中。</li><li>打印结点 $u$，跳转到步骤3.</li></ol><p>为了更加直观的描述DFS的思路，我们结合图B 与源点 $A$ ，给出算法DFS的执行过程：<br><img src="/img/dfs.png?imageMogr2/thumbnail/!30p" alt="Alt text"></p><h1 id="图的实现-Java"><a href="#图的实现-Java" class="headerlink" title="图的实现(Java)"></a>图的实现(Java)</h1><h2 id="邻接链表实现"><a href="#邻接链表实现" class="headerlink" title="邻接链表实现"></a>邻接链表实现</h2><h3 id="图的邻接链表表示"><a href="#图的邻接链表表示" class="headerlink" title="图的邻接链表表示"></a>图的邻接链表表示</h3><p>我们知道描述一张图有两个最基本的元素结点 $V$ 和边 $E$，在这里我们首先定义一个类Graph.java来表示图,将Vertex.java作为其内部类表示结点，实现代码如下。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pty.graph;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Graph</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"><span class="keyword">private</span> LinkedHashMap&lt;T, Vertex&gt; vertexs;<span class="comment">// 使用LinkedHashMap存放图中的结点，结点标识T作为key能快速查找图中是否包含某结点</span></span><br><span class="line"><span class="keyword">private</span> LinkedHashMap&lt;T, ArrayList&lt;Vertex&gt;&gt; adjList; <span class="comment">// 采用邻接链表的方式表示图，每个结点T对应于一个ArrayList链表，存放其相邻结点。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> numOfVertex; <span class="comment">// 图的结点数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> numOfEdge; <span class="comment">// 图的边数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> directed; <span class="comment">// 是否为有向图</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Graph</span><span class="params">(<span class="keyword">boolean</span> directed)</span> </span>&#123;</span><br><span class="line">vertexs = <span class="keyword">new</span> LinkedHashMap&lt;T, Vertex&gt;();</span><br><span class="line">numOfVertex = <span class="number">0</span>;</span><br><span class="line">adjList = <span class="keyword">new</span> LinkedHashMap&lt;T, ArrayList&lt;Vertex&gt;&gt;();</span><br><span class="line"><span class="keyword">this</span>.directed = directed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//省略相应的get、set方法</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 内部类，表示结点</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> john</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Vertex</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> T lable; <span class="comment">// 标识结点，比如A0，A1，A2,...或者1，2，3，...</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> visited; <span class="comment">// 标识结点是否被访问</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Vertex</span><span class="params">(T tag, <span class="keyword">double</span> score)</span> </span>&#123;</span><br><span class="line">lable = tag;</span><br><span class="line">visited = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//省略相应的get、set方法</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="图的基本操作"><a href="#图的基本操作" class="headerlink" title="图的基本操作"></a>图的基本操作</h3><p><strong>添加新的结点</strong><br>每新增一个结点，将会创建一个ArrayList列表，用于存放新增结点的邻接结点。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertVertex</span><span class="params">(T tag)</span> </span>&#123;</span><br><span class="line">vertexs.put(tag, <span class="keyword">new</span> Vertex(tag)); <span class="comment">//新增结点 tag，如果定点中存在该结点将会被替换最新的</span></span><br><span class="line">adjList.put(tag, <span class="keyword">new</span> ArrayList&lt;Vertex&gt;()); <span class="comment">//每新增一个结点，将会创建一个ArrayList列表，用于存放新增结点的邻接结点。</span></span><br><span class="line">numOfVertex++; <span class="comment">//结点数自增</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>添加新的边</strong><br>这里暂时不考虑边的权值<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addEdges</span><span class="params">(T start, T end)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (vertexs.containsKey(start) &amp;&amp; vertexs.containsKey(end)) &#123; <span class="comment">// 判断输入起始点是否合法</span></span><br><span class="line">adjList.get(start).add(vertexs.get(end)); <span class="comment">// 首先获取结点start的链表，然后将其邻接结点end加入其中</span></span><br><span class="line"><span class="keyword">if</span> (!directed) &#123; <span class="comment">//如果是无向图，则添加结束点到开始点的边</span></span><br><span class="line">adjList.get(end).add(vertexs.get(start));</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"输入结点不合法"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>测试</strong><br>打印图的链表结构<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打印图的邻接链表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayGraph</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"邻接链表表示如下："</span>);</span><br><span class="line">Iterator&lt;Map.Entry&lt;T, ArrayList&lt;Vertex&gt;&gt;&gt; iterator = adjList.entrySet().iterator();</span><br><span class="line"><span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">Map.Entry&lt;T, ArrayList&lt;Vertex&gt;&gt; element = iterator.next();</span><br><span class="line">System.out.print(element.getKey() + <span class="string">":"</span>);</span><br><span class="line">displayList(element.getValue());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打印链表ArrayList</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayList</span><span class="params">(ArrayList&lt;Vertex&gt; list)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> size = list.size();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">System.out.print(list.get(i).getLable());</span><br><span class="line"><span class="keyword">if</span> (i &lt; size - <span class="number">1</span>) &#123;</span><br><span class="line">System.out.print(<span class="string">"--&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>测试数据(无向图A)<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pty.graph;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Graph&lt;String&gt; graph = <span class="keyword">new</span> Graph&lt;String&gt;(<span class="keyword">false</span>);</span><br><span class="line">graph.insertVertex(<span class="string">"A"</span>);</span><br><span class="line">graph.insertVertex(<span class="string">"B"</span>);</span><br><span class="line">graph.insertVertex(<span class="string">"C"</span>);</span><br><span class="line">graph.insertVertex(<span class="string">"D"</span>);</span><br><span class="line">graph.insertVertex(<span class="string">"E"</span>);</span><br><span class="line">graph.addEdges(<span class="string">"A"</span>, <span class="string">"B"</span>);</span><br><span class="line">graph.addEdges(<span class="string">"A"</span>, <span class="string">"E"</span>);</span><br><span class="line">graph.addEdges(<span class="string">"B"</span>, <span class="string">"C"</span>);</span><br><span class="line">graph.addEdges(<span class="string">"B"</span>, <span class="string">"D"</span>);</span><br><span class="line">graph.addEdges(<span class="string">"B"</span>, <span class="string">"E"</span>);</span><br><span class="line">graph.addEdges(<span class="string">"C"</span>, <span class="string">"D"</span>);</span><br><span class="line">graph.addEdges(<span class="string">"D"</span>, <span class="string">"E"</span>);</span><br><span class="line">graph.displayGraph();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>控制台输出结果：<br>A:B–&gt;E<br>B:A–&gt;C–&gt;D–&gt;E<br>C:B–&gt;D<br>D:B–&gt;C–&gt;E<br>E:A–&gt;B–&gt;D</p><h3 id="图的相关算法"><a href="#图的相关算法" class="headerlink" title="图的相关算法"></a>图的相关算法</h3><h4 id="BFS实现"><a href="#BFS实现" class="headerlink" title="BFS实现"></a>BFS实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BFS</span><span class="params">(T start)</span> </span>&#123;</span><br><span class="line">ArrayList&lt;T&gt; list = <span class="keyword">new</span> ArrayList&lt;T&gt;(); <span class="comment">// 存放遍历结点数列</span></span><br><span class="line">LinkedList&lt;Vertex&gt; tempList = <span class="keyword">new</span> LinkedList&lt;Vertex&gt;(); <span class="comment">// 辅助BFS的队列</span></span><br><span class="line">initialize(); <span class="comment">//初始化所有结点访问属性为false</span></span><br><span class="line">tempList.add(vertexs.get(start));</span><br><span class="line"><span class="keyword">while</span> (!tempList.isEmpty()) &#123;</span><br><span class="line">Vertex node = tempList.poll(); <span class="comment">// 弹出队列头</span></span><br><span class="line"><span class="keyword">if</span> (!node.isVisited()) &#123;</span><br><span class="line">node.setVisited(<span class="keyword">true</span>);</span><br><span class="line">ArrayList&lt;Vertex&gt; neighbor = adjList.get(node.getLable()); <span class="comment">// 获取结点node的邻接表</span></span><br><span class="line"><span class="keyword">int</span> size = neighbor.size();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ((!neighbor.get(i).isVisited()) &amp;&amp; (!tempList.contains(neighbor.get(i)))) &#123;</span><br><span class="line">tempList.offer(neighbor.get(i)); <span class="comment">// 将未被访问且不包含在辅助BFS队列中的结点存入队列</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">list.add(node.getLable());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 输出遍历序列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">System.out.print(<span class="string">"广度优先："</span>);</span><br><span class="line"><span class="keyword">int</span> size = list.size();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">System.out.print(list.get(i));</span><br><span class="line"><span class="keyword">if</span> (i &lt; size - <span class="number">1</span>) &#123;</span><br><span class="line">System.out.print(<span class="string">"--&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台<strong>输出</strong>图A的   <strong>广度优先</strong>：A–&gt;B–&gt;E–&gt;C–&gt;D</p><h3 id="DFS实现"><a href="#DFS实现" class="headerlink" title="DFS实现"></a>DFS实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DFS</span><span class="params">(T start)</span> </span>&#123;</span><br><span class="line">ArrayList&lt;T&gt; list = <span class="keyword">new</span> ArrayList&lt;T&gt;(); <span class="comment">// 存放遍历结点数列</span></span><br><span class="line">Stack&lt;Vertex&gt; stack = <span class="keyword">new</span> Stack&lt;Vertex&gt;(); <span class="comment">// 辅助DFS栈</span></span><br><span class="line">initialize(); <span class="comment">// 初始化所有结点访问属性为false</span></span><br><span class="line">stack.push(vertexs.get(start));</span><br><span class="line"><span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">Vertex node = stack.pop(); <span class="comment">//弹出栈顶元素</span></span><br><span class="line"><span class="keyword">if</span> (!node.isVisited()) &#123;</span><br><span class="line">node.setVisited(<span class="keyword">true</span>);</span><br><span class="line">ArrayList&lt;Vertex&gt; neighbor = adjList.get(node.getLable()); <span class="comment">// 获取结点node的邻接表</span></span><br><span class="line"><span class="keyword">int</span> size = neighbor.size();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ((!neighbor.get(i).isVisited()) &amp;&amp; (!stack.contains(neighbor.get(i)))) <span class="comment">// 将未被访问且不包含在辅助DFS栈中的结点压入栈</span></span><br><span class="line">stack.push(neighbor.get(i));</span><br><span class="line">&#125;</span><br><span class="line">list.add(node.getLable());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(<span class="string">"深度优先："</span>);</span><br><span class="line"><span class="keyword">int</span> size = list.size();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">System.out.print(list.get(i));</span><br><span class="line"><span class="keyword">if</span> (i &lt; size - <span class="number">1</span>) &#123;</span><br><span class="line">System.out.print(<span class="string">"--&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台<strong>输出</strong>图A的  <strong>深度优先</strong>：A–&gt;E–&gt;D–&gt;C–&gt;B</p><h1 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h1><p><strong>完整代码以及相应示例图见 <a href="https://github.com/lemon2013/algorithm" target="_blank" rel="noopener">https://github.com/lemon2013/algorithm</a> </strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;图的表示&quot;&gt;&lt;a href=&quot;#图的表示&quot; class=&quot;headerlink&quot; title=&quot;图的表示&quot;&gt;&lt;/a&gt;图的表示&lt;/h1&gt;&lt;p&gt;所谓的图$G=(V,E)$，由顶点(Vertex) $V$ 和边(Edges) $E$ 组成。可以用两种标准方式来表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;邻接链表&lt;/li&gt;
&lt;li&gt;邻接矩阵&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/img/graph.png&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="图论" scheme="https://lemon2013.github.io/categories/%E5%9B%BE%E8%AE%BA/"/>
    
    
      <category term="算法" scheme="https://lemon2013.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="广度优先搜索" scheme="https://lemon2013.github.io/tags/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
      <category term="深度优先搜索" scheme="https://lemon2013.github.io/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>Linux 常用操作</title>
    <link href="https://lemon2013.github.io/2016/11/23/Linux-foundation/"/>
    <id>https://lemon2013.github.io/2016/11/23/Linux-foundation/</id>
    <published>2016-11-23T11:58:00.000Z</published>
    <updated>2019-01-06T05:09:36.588Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看Linux-版本"><a href="#查看Linux-版本" class="headerlink" title="查看Linux 版本"></a>查看Linux 版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">CentOS Linux release 7.2.1511 (Core)</span><br></pre></td></tr></table></figure><h3 id="Filesystem-Hierarchy-Standard（FHS）"><a href="#Filesystem-Hierarchy-Standard（FHS）" class="headerlink" title="Filesystem Hierarchy Standard（FHS）"></a>Filesystem Hierarchy Standard（FHS）<a id="more"></a></h3><p>Linux目录配置依据</p><blockquote><p>/ （root, 根目录）：与开机系统有关；<br>/usr （unix software resource）：与软件安装/执行有关；<br>/var （variable）：与系统运行过程有关。</p></blockquote><p>参考鸟哥的私房菜（部分）{<a href="/img/vbird-linux-basic-4e.pdf">鸟哥的私房菜(第四版)</a>}</p><table><thead><tr><th>目录</th><th style="text-align:center">存放内容</th></tr></thead><tbody><tr><td>/bin</td><td style="text-align:center">系统有很多放置可执行文件的目录，但/bin比较特殊。因为/bin放置的是在单人维护模式下还能够被操作的指令。在/bin下面的指令可以被root与一般帐号所使用，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash等等常用的指令。</td></tr><tr><td>/boot</td><td style="text-align:center">这个目录主要在放置开机会使用到的文件，包括Linux核心文件以及开机菜单与开机所需配置文件等等。 Linux kernel常用的文件名为：vmlinuz，如果使用的是grub2这个开机管理程序， 则还会存在/boot/grub2/这个目录喔！</td></tr><tr><td>/dev</td><td style="text-align:center">在Linux系统上，任何设备与周边设备都是以文件的型态存在于这个目录当中的。 你只要通过存取这个目录下面的某个文件，就等于存取某个设备啰～ 比要重要的文件有/dev/null, /dev/zero, /dev/tty, /dev/loop, /dev/sd等等</td></tr><tr><td>/etc</td><td style="text-align:center">系统主要的配置文件几乎都放置在这个目录内，例如人员的帐号密码档、各种服务的启始档等等。一般来说，这个目录下的各文件属性是可以让一般使用者查阅的， 但是只有root有权力修改。FHS建议不要放置可可执行文件（binary）在这个目录中喔。比较重要的文件有： /etc/modprobe.d/,/etc/passwd, /etc/fstab, /etc/issue 等等。另外 FHS 还规范几个重要的目录最好要存在 /etc/ 目录下喔：/etc/opt（必要）：这个目录在放置第三方协力软件 /opt 的相关配置文件 /etc/X11/（建议）：与 X Window 有关的各种配置文件都在这里，尤其是 xorg.conf 这个 X Server 的配置文件。 /etc/sgml/（建议）：与 SGML 格式有关的各项配置文件 /etc/xml/（建议）：与 XML格式有关的各项配置文件</td></tr><tr><td>/media</td><td style="text-align:center">media是“媒体”的英文，顾名思义，这个/media下面放置的就是可移除的设备啦！ 包括软盘、光盘、DVD等等设备都暂时挂载于此。常见的文件名有：/media/floppy, /media/cdrom等等。</td></tr><tr><td>/mnt</td><td style="text-align:center">如果你想要暂时挂载某些额外的设备，一般建议你可以放置到这个目录中。在古早时候，这个目录的用途与/media相同啦！只是有了/media之后，这个目录就用来暂时挂载用了。</td></tr><tr><td>/opt</td><td style="text-align:center">这个是给第三方协力软件放置的目录。什么是第三方协力软件啊？ 举例来说，KDE这个桌面管理系统是一个独立的计划，不过他可以安装到Linux系统中，因此KDE的软件就建议放置到此目录下了。 另外，如果你想要自行安装额外的软件（非原本的distribution提供的），那么也能够将你的软件安装到这里来。 不过，以前的Linux系统中，我们还是习惯放置在/usr/local目录下呢！</td></tr><tr><td>/run</td><td style="text-align:center">早期的 FHS 规定系统开机后所产生的各项信息应该要放置到 /var/run 目录下，新版的 FHS 则规范到 /run 下面。 由于 /run 可以使用内存来仿真，因此性能上会好很多！</td></tr></tbody></table><h3 id="查看Linux-核心版本、位数"><a href="#查看Linux-核心版本、位数" class="headerlink" title="查看Linux 核心版本、位数"></a>查看Linux 核心版本、位数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># uname -a  #全部</span></span><br><span class="line">Linux localhost.localdomain 3.10.0-327.36.1.el7.x86_64 <span class="comment">#1 SMP Sun Sep 18 13:04:29 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">[root@localhost bin]<span class="comment"># uname -m  #操作位</span></span><br><span class="line">x86_64</span><br><span class="line">[root@localhost bin]<span class="comment"># uname -r  #核心版本</span></span><br><span class="line">3.10.0-327.36.1.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="更改文件属性"><a href="#更改文件属性" class="headerlink" title="更改文件属性"></a>更改文件属性</h3><blockquote><p>chgrp ：改变文件所属群组,存放于/etc/group<br>chown ：改变文件拥有者, 账号/etc/passwd<br>chmod ：改变文件的权限, SUID, SGID, SBIT等等的特性</p></blockquote><h3 id="复制操作"><a href="#复制操作" class="headerlink" title="复制操作"></a>复制操作</h3><p>cp -a 整个数据复制完全一样，包括创建时间，如果是备份的是注意权限问题<br>cp 创建时间，部分属性可能会发生改变<br>cp -r 复制目录<br>cp -l 实体链接<br>cp -s 捷径链接<br>cp -u 这个 -u 的特性，是在目标文件与来源文件有差异时，才会复制的。可以用来备份</p><h3 id="文件或文件名的搜索"><a href="#文件或文件名的搜索" class="headerlink" title="文件或文件名的搜索"></a>文件或文件名的搜索</h3><h4 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ~]<span class="comment"># whereis [-bmsu] 文件或目录名</span></span><br><span class="line">选项与参数：</span><br><span class="line">-l :可以列出 whereis 会去查询的几个主要目录而已</span><br><span class="line">-b :只找 binary 格式的文件</span><br><span class="line">-m :只找在说明文档 manual 路径下的文件</span><br><span class="line">-s :只找 <span class="built_in">source</span> 来源文件</span><br><span class="line">-u :搜寻不在上述三个项目当中的其他特殊文件</span><br><span class="line">[root@ceph001 mlocate]<span class="comment"># whereis ceph</span></span><br><span class="line">ceph: /usr/bin/ceph /usr/lib64/ceph /etc/ceph /usr/libexec/ceph /usr/share/ceph /usr/share/man/man8/ceph.8.gz</span><br></pre></td></tr></table></figure><h4 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h4><p>根据/var/lib/mlocate/中的数据库文件进行搜索，手动更新时，updatedb 指令会去读取 /etc/updatedb.conf 这个配置文件的设置，然后再去硬盘里面进行搜寻文件名的动作， 最后就更新整个数据库文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ~]<span class="comment"># locate [-ir] keyword</span></span><br><span class="line">选项与参数：</span><br><span class="line">-i ：忽略大小写的差异；</span><br><span class="line">-c ：不输出文件名，仅计算找到的文件数量</span><br><span class="line">-l ：仅输出几行的意思，例如输出五行则是 -l 5</span><br><span class="line">-S ：输出 locate 所使用的数据库文件的相关信息，包括该数据库纪录的文件/目录数量等</span><br><span class="line">-r ：后面可接正则表达式的显示方式</span><br><span class="line">[root@ceph001 mlocate]<span class="comment"># locate ceph.conf</span></span><br><span class="line">/etc/ceph/ceph.conf</span><br><span class="line">/root/cluster/ceph.conf</span><br><span class="line">/usr/share/doc/ceph/sample.ceph.conf</span><br><span class="line"></span><br><span class="line">[root@ceph001 mlocate]<span class="comment"># updatedb  #手动更新数据文件</span></span><br></pre></td></tr></table></figure></p><h4 id="find"><a href="#find" class="headerlink" title="find"></a>find</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ~]<span class="comment"># find [PATH] [option] [action]</span></span><br></pre></td></tr></table></figure><p>选项与参数：<br>1. 与时间有关的选项：共有 -atime, -ctime 与 -mtime ，以 -mtime 说明<br>-mtime n ：n 为数字，意义为在 n 天之前的“一天之内”被更动过内容的文件；<br>-mtime +n ：列出在 n 天之前（不含 n 天本身）被更动过内容的文件文件名；<br>-mtime -n ：列出在 n 天之内（含 n 天本身）被更动过内容的文件文件名。<br>-newer file ：file 为一个存在的文件，列出比 file 还要新的文件文件名</p><p>2. 与使用者或群组名称有关的参数：<br>-uid n ：n 为数字，这个数字是使用者的帐号 ID，亦即 UID ，这个 UID 是记录在<br>/etc/passwd 里面与帐号名称对应的数字。这方面我们会在第四篇介绍。<br>-gid n ：n 为数字，这个数字是群组名称的 ID，亦即 GID，这个 GID 记录在<br>/etc/group，相关的介绍我们会第四篇说明～<br>-user name ：name 为使用者帐号名称喔！例如 dmtsai<br>-group name：name 为群组名称喔，例如 users ；<br>-nouser ：寻找文件的拥有者不存在 /etc/passwd 的人！<br>-nogroup ：寻找文件的拥有群组不存在于 /etc/group 的文件！<br>当你自行安装软件时，很可能该软件的属性当中并没有文件拥有者，<br>这是可能的！在这个时候，就可以使用 -nouser 与 -nogroup 搜寻。</p><p>3. 与文件权限及名称有关的参数：<br>-name filename：搜寻文件名称为 filename 的文件；<br>-size [+-]SIZE：搜寻比 SIZE 还要大（+）或小（-）的文件。这个 SIZE 的规格有：<br>c: 代表 Byte， k: 代表 1024Bytes。所以，要找比 50KB<br>还要大的文件，就是“ -size +50k ”<br>-type TYPE ：搜寻文件的类型为 TYPE 的，类型主要有：一般正规文件 （f）, 设备文件 （b, c）,<br>目录 （d）, 链接文件 （l）, socket （s）, 及 FIFO （p） 等属性。<br>-perm mode ：搜寻文件权限“刚好等于” mode 的文件，这个 mode 为类似 chmod<br>的属性值，举例来说， -rwsr-xr-x 的属性为 4755 ！<br>-perm -mode ：搜寻文件权限“必须要全部囊括 mode 的权限”的文件，举例来说，<br>我们要搜寻 -rwxr–r– ，亦即 0744 的文件，使用 -perm -0744，<br>当一个文件的权限为 -rwsr-xr-x ，亦即 4755 时，也会被列出来，<br>因为 -rwsr-xr-x 的属性已经囊括了 -rwxr–r– 的属性了。<br>-perm /mode ：搜寻文件权限“包含任一 mode 的权限”的文件，举例来说，我们搜寻<br>-rwxr-xr-x ，亦即 -perm /755 时，但一个文件属性为 -rw——-<br>也会被列出来，因为他有 -rw…. 的属性存在！</p><p>4. 额外可进行的动作：<br>-exec command ：command 为其他指令，-exec 后面可再接额外的指令来处理搜寻到的结果。<br>-print ：将结果打印到屏幕上，这个动作是默认动作！</p><h3 id="当前linux支持的文件系统"><a href="#当前linux支持的文件系统" class="headerlink" title="当前linux支持的文件系统"></a>当前linux支持的文件系统</h3><p>查看当前linux支持的文件系统<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[ceph@lemon ~]$ ls -l /lib/modules/$(uname -r)/kernel/fs</span><br><span class="line">total 52</span><br><span class="line">-rw-r--r--. 1 root root 21853 Sep 18 21:46 binfmt_misc.ko</span><br><span class="line">drwxr-xr-x. 2 root root    21 Sep 25 17:21 btrfs</span><br><span class="line">drwxr-xr-x. 2 root root    26 Sep 25 17:21 cachefiles</span><br><span class="line">drwxr-xr-x. 2 root root    20 Sep 25 17:21 ceph</span><br><span class="line">drwxr-xr-x. 2 root root    20 Sep 25 17:21 cifs</span><br><span class="line">drwxr-xr-x. 2 root root    22 Sep 25 17:21 cramfs</span><br><span class="line">drwxr-xr-x. 2 root root    19 Sep 25 17:21 dlm</span><br><span class="line">drwxr-xr-x. 2 root root    22 Sep 25 17:21 exofs</span><br><span class="line">drwxr-xr-x. 2 root root    20 Sep 25 17:21 ext4</span><br><span class="line">drwxr-xr-x. 2 root root    48 Sep 25 17:21 fat</span><br><span class="line">drwxr-xr-x. 2 root root    23 Sep 25 17:21 fscache</span><br><span class="line">drwxr-xr-x. 2 root root    34 Sep 25 17:21 fuse</span><br><span class="line">drwxr-xr-x. 2 root root    20 Sep 25 17:21 gfs2</span><br><span class="line">drwxr-xr-x. 2 root root    21 Sep 25 17:21 isofs</span><br><span class="line">drwxr-xr-x. 2 root root    20 Sep 25 17:21 jbd2</span><br><span class="line">drwxr-xr-x. 2 root root    21 Sep 25 17:21 lockd</span><br><span class="line">-rw-r--r--. 1 root root 19597 Sep 18 21:46 mbcache.ko</span><br><span class="line">drwxr-xr-x. 6 root root  4096 Sep 25 17:21 nfs</span><br><span class="line">drwxr-xr-x. 2 root root    38 Sep 25 17:21 nfs_common</span><br><span class="line">drwxr-xr-x. 2 root root    20 Sep 25 17:21 nfsd</span><br><span class="line">drwxr-xr-x. 2 root root  4096 Sep 25 17:21 nls</span><br><span class="line">drwxr-xr-x. 2 root root    23 Sep 25 17:21 overlayfs</span><br><span class="line">drwxr-xr-x. 2 root root    23 Sep 25 17:21 pstore</span><br><span class="line">drwxr-xr-x. 2 root root    24 Sep 25 17:21 squashfs</span><br><span class="line">drwxr-xr-x. 2 root root    19 Sep 25 17:21 udf</span><br><span class="line">drwxr-xr-x. 2 root root    19 Sep 25 17:21 xfs</span><br></pre></td></tr></table></figure></p><p>查看系统已经载入到内存中支持的文件系统<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[ceph@lemon ~]$ cat /proc/filesystems</span><br><span class="line">nodevsysfs</span><br><span class="line">nodevrootfs</span><br><span class="line">nodevbdev</span><br><span class="line">nodevproc</span><br><span class="line">nodevcgroup</span><br><span class="line">nodevcpuset</span><br><span class="line">nodevtmpfs</span><br><span class="line">nodevdevtmpfs</span><br><span class="line">nodevdebugfs</span><br><span class="line">nodevsecurityfs</span><br><span class="line">nodevsockfs</span><br><span class="line">nodevpipefs</span><br><span class="line">nodevanon_inodefs</span><br><span class="line">nodevconfigfs</span><br><span class="line">nodevdevpts</span><br><span class="line">nodevramfs</span><br><span class="line">nodevhugetlbfs</span><br><span class="line">nodevautofs</span><br><span class="line">nodevpstore</span><br><span class="line">nodevmqueuenodevselinuxfs</span><br><span class="line">    xfs</span><br><span class="line">nodevrpc_pipefs</span><br><span class="line">nodevnfsd</span><br></pre></td></tr></table></figure></p><h3 id="查看磁盘与目录容量"><a href="#查看磁盘与目录容量" class="headerlink" title="查看磁盘与目录容量"></a>查看磁盘与目录容量</h3><blockquote><p> df：列出文件系统的整体磁盘使用量<br> du：评估文件系统的磁盘使用量（常用在推估目录所占容量）</p></blockquote><p>df [-ahikHTm] [目录或文件名]<br>选项与参数：<br>-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；<br>-k ：以 KBytes 的容量显示各文件系统；<br>-m ：以 MBytes 的容量显示各文件系统；<br>-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；<br>-H ：以 M=1000K 取代 M=1024K 的进位方式；<br>-T ：连同该 partition 的 filesystem 名称 （例如 xfs） 也列出；<br>-i ：不用磁盘容量，而以 inode 的数量来显示</p><p>du [-ahskm] 文件或目录名称<br>选项与参数：<br>-a ：列出所有的文件与目录容量，因为默认仅统计目录下面的文件量而已。<br>-h ：以人们较易读的容量格式 （G/M） 显示；<br>-s ：列出总量而已，而不列出每个各别的目录占用容量；<br>-S ：不包括子目录下的总计，与 -s 有点差别。<br>-k ：以 KBytes 列出容量显示；<br>-m ：以 MBytes 列出容量显示；</p><p>列出系统上所有磁盘列表</p><p>lsblk [-dfimpt] [device]<br>选项与参数：<br>-d ：仅列出磁盘本身，并不会列出该磁盘的分区数据<br>-f ：同时列出该磁盘内的文件系统名称<br>-i ：使用 ASCII 的线段输出，不要使用复杂的编码 （再某些环境下很有用）<br>-m ：同时输出该设备在 /dev 下面的权限数据 （rwx 的数据）<br>-p ：列出该设备的完整文件名！而不是仅列出最后的名字而已。<br>-t ：列出该磁盘设备的详细数据，包括磁盘伫列机制、预读写的数据量大小等</p><p>查看设备的UUID(universally unique identifier,全域单一识别码)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@lemon ~]<span class="comment"># blkid  #没行代表一个文件系统</span></span><br><span class="line">/dev/sda1: UUID=<span class="string">"1649b929-1e62-46ef-aafe-dacb17e37ce9"</span> TYPE=<span class="string">"xfs"</span> </span><br><span class="line">/dev/sda2: UUID=<span class="string">"85mF3n-EX76-Vw0A-N4fI-5H91-Eaqq-UFVUD3"</span> TYPE=<span class="string">"LVM2_member"</span> </span><br><span class="line">/dev/mapper/centos-root: UUID=<span class="string">"6afcb5de-f93f-4b20-b31a-4c90de872e65"</span> TYPE=<span class="string">"xfs"</span> </span><br><span class="line">/dev/mapper/centos-swap: UUID=<span class="string">"f6f14cdb-481c-4385-8372-96ee47214f2a"</span> TYPE=<span class="string">"swap"</span> </span><br><span class="line">/dev/mapper/centos-home: UUID=<span class="string">"22549e34-e3a5-4bae-96d3-702cbdcc3487"</span> TYPE=<span class="string">"xfs"</span></span><br></pre></td></tr></table></figure></p><p>parted 列出磁盘的分区表类型与分区信息<br>parted device_name print<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@lemon ~]<span class="comment"># parted /dev/sda print</span></span><br><span class="line">Model: ATA ST3320613AS (scsi)</span><br><span class="line">Disk /dev/sda: 320GB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: msdos</span><br><span class="line">Disk Flags: </span><br><span class="line"></span><br><span class="line">Number  Start   End    Size   Type     File system  Flags</span><br><span class="line"> 1      1049kB  525MB  524MB  primary  xfs          boot</span><br><span class="line"> 2      525MB   320GB  320GB  primary               lvm</span><br></pre></td></tr></table></figure></p><h3 id="挂载与卸载"><a href="#挂载与卸载" class="headerlink" title="挂载与卸载"></a>挂载与卸载</h3><p>mount [-t 文件系统] 设备文件名 挂载点<br>选项与参数：<br>-a ：依照配置文件 <a href="../Text/index.html#fstab">/etc/fstab</a> 的数据将所有未挂载的磁盘都挂载上来<br>-l ：单纯的输入 mount 会显示目前挂载的信息。加上 -l 可增列 Label 名称！<br>-t ：可以加上文件系统种类来指定欲挂载的类型。常见的 Linux 支持类型有：xfs, ext3, ext4,<br>reiserfs, vfat, iso9660（光盘格式）, nfs, cifs, smbfs （后三种为网络文件系统类型）<br>-n ：在默认的情况下，系统会将实际挂载的情况实时写入 /etc/mtab 中，以利其他程序的运行。<br>但在某些情况下（例如单人维护模式）为了避免问题会刻意不写入。此时就得要使用 -n 选项。<br>-o ：后面可以接一些挂载时额外加上的参数！比方说帐号、密码、读写权限等：<br>      async, sync: 此文件系统是否使用同步写入 （sync） 或非同步 （async） 的<br>      内存机制，请参考<a href="../Text/index.html#harddisk-filerun">文件系统运行方式</a>。默认为 async。<br>    atime,noatime: 是否修订文件的读取时间（atime）。为了性能，某些时刻可使用 noatime<br>    ro, rw: 挂载文件系统成为只读（ro） 或可读写（rw）<br>    auto, noauto: 允许此 filesystem 被以 mount -a 自动挂载（auto）<br>    dev, nodev: 是否允许此 filesystem 上，可创建设备文件？ dev 为可允许<br>    suid, nosuid: 是否允许此 filesystem 含有 suid/sgid 的文件格式？<br>    exec, noexec: 是否允许此 filesystem 上拥有可执行 binary 文件？<br>    user, nouser: 是否允许此 filesystem 让任何使用者执行 mount ？一般来说，<br>    mount 仅有 root 可以进行，但下达 user 参数，则可让<br>    一般 user 也能够对此 partition 进行 mount 。<br>    defaults: 默认值为：rw, suid, dev, exec, auto, nouser, and async<br>    remount: 重新挂载，这在系统出错，或重新更新参数时，很有用！</p><p> umount [-fn] 设备文件名或挂载点<br>选项与参数：<br>-f ：强制卸载！可用在类似网络文件系统 （NFS） 无法读取到的情况下；<br>-l ：立刻卸载文件系统，比 -f 还强！<br>-n ：不更新 /etc/mtab 情况下卸载。</p><p>挂载vfat中文U盘<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@lemon ~]<span class="comment"># blkid</span></span><br><span class="line">/dev/sda1: UUID=<span class="string">"1649b929-1e62-46ef-aafe-dacb17e37ce9"</span> TYPE=<span class="string">"xfs"</span> </span><br><span class="line">/dev/mapper/centos-root: UUID=<span class="string">"6afcb5de-f93f-4b20-b31a-4c90de872e65"</span> TYPE=<span class="string">"xfs"</span> </span><br><span class="line">/dev/mapper/centos-swap: UUID=<span class="string">"f6f14cdb-481c-4385-8372-96ee47214f2a"</span> TYPE=<span class="string">"swap"</span> </span><br><span class="line">/dev/mapper/centos-home: UUID=<span class="string">"22549e34-e3a5-4bae-96d3-702cbdcc3487"</span> TYPE=<span class="string">"xfs"</span> </span><br><span class="line">/dev/sda2: PTTYPE=<span class="string">"dos"</span> </span><br><span class="line">/dev/sdb4: LABEL=<span class="string">"CentOS 7 x8"</span> UUID=<span class="string">"B4FE-5315"</span> TYPE=<span class="string">"vfat"</span> </span><br><span class="line">[root@lemon ~]<span class="comment">#  mount -o codepage=950,iocharset=utf8 UUID="B4FE-5315" /data/usb</span></span><br><span class="line">[root@lemon ~]<span class="comment"># cd /data/usb</span></span><br><span class="line">[root@lemon usb]<span class="comment"># ll</span></span><br><span class="line">total 50036</span><br><span class="line">-rwxr-xr-x. 1 root root       14 Dec 10  2015 CentOS_BuildTag</span><br><span class="line">-rwxr-xr-x. 1 root root  1673544 Dec  1 23:17 cpu-z_1.7.8.1.exe</span><br><span class="line">drwxr-xr-x. 3 root root     4096 Dec 10  2015 EFI</span><br><span class="line">-rwxr-xr-x. 1 root root      215 Dec 10  2015 EULA</span><br><span class="line">-rwxr-xr-x. 1 root root    18009 Dec 10  2015 GPL</span><br><span class="line">drwxr-xr-x. 3 root root     4096 Dec 10  2015 images</span><br><span class="line">drwxr-xr-x. 2 root root     4096 Dec 10  2015 isolinux</span><br><span class="line">drwxr-xr-x. 2 root root     4096 Dec 10  2015 LiveOS</span><br><span class="line">-rwxr-xr-x. 1 root root 48194704 Dec  1 03:31 ludashi_baidu_5.15.16.1140.exe</span><br><span class="line">drwxr-xr-x. 2 root root  1298432 Dec 10  2015 Packages</span><br><span class="line">drwxr-xr-x. 2 root root     4096 Dec 10  2015 repodata</span><br><span class="line">-rwxr-xr-x. 1 root root     1690 Dec 10  2015 RPM-GPG-KEY-CentOS-7</span><br><span class="line">-rwxr-xr-x. 1 root root     1690 Dec 10  2015 RPM-GPG-KEY-CentOS-Testing-7</span><br><span class="line">drwxr-xr-x. 2 root root     4096 Oct 20 01:03 System Volume Information</span><br><span class="line">-rwxr-xr-x. 1 root root     2883 Dec 10  2015 TRANS.TBL</span><br><span class="line">[root@lemon usb]<span class="comment"># df </span></span><br><span class="line">Filesystem              1K-blocks    Used Available Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root  52403200 4483080  47920120   9% /</span><br><span class="line">devtmpfs                   908892       0    908892   0% /dev</span><br><span class="line">tmpfs                      924352      84    924268   1% /dev/shm</span><br><span class="line">tmpfs                      924352    9104    915248   1% /run</span><br><span class="line">tmpfs                      924352       0    924352   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-home 257336560  110504 257226056   1% /home</span><br><span class="line">/dev/sda1                  508588  216628    291960  43% /boot</span><br><span class="line">tmpfs                      184872      16    184856   1% /run/user/42</span><br><span class="line">tmpfs                      184872       0    184872   0% /run/user/1000</span><br><span class="line">/dev/sdb4                 7897600 7729184    168416  98% /data/usb</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;查看Linux-版本&quot;&gt;&lt;a href=&quot;#查看Linux-版本&quot; class=&quot;headerlink&quot; title=&quot;查看Linux 版本&quot;&gt;&lt;/a&gt;查看Linux 版本&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# cat /etc/redhat-release&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CentOS Linux release 7.2.1511 (Core)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Filesystem-Hierarchy-Standard（FHS）&quot;&gt;&lt;a href=&quot;#Filesystem-Hierarchy-Standard（FHS）&quot; class=&quot;headerlink&quot; title=&quot;Filesystem Hierarchy Standard（FHS）&quot;&gt;&lt;/a&gt;Filesystem Hierarchy Standard（FHS）
    
    </summary>
    
      <category term="Linux 基础" scheme="https://lemon2013.github.io/categories/Linux-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="linux" scheme="https://lemon2013.github.io/tags/linux/"/>
    
      <category term="CentOS7" scheme="https://lemon2013.github.io/tags/CentOS7/"/>
    
  </entry>
  
  <entry>
    <title>Ceph对象存储(rgw)的IPv6环境配置</title>
    <link href="https://lemon2013.github.io/2016/11/09/Ceph%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8-rgw-IPv6%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://lemon2013.github.io/2016/11/09/Ceph对象存储-rgw-IPv6环境配置/</id>
    <published>2016-11-09T08:57:40.000Z</published>
    <updated>2017-07-14T01:22:15.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在搭建成功Ceph集群后，对于如何使用，其实我还是一脸MB的，心想竟然提供三种存储接口（对象，文件，快），口气也未免太大。在结合项目需求之后，我选择了对象存储接口。那么问题又来了，如何配置IPv6的对象存储？<a id="more"></a></p><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><ul><li>Linux操作系统版本：CentOS Linux release 7.2.1511 (Core)<br>  <a href="http://mirrors.aliyun.com/centos/7.2.1511/isos/x86_64/CentOS-7-x86_64-Minimal-1511.iso" target="_blank" rel="noopener">Minimal镜像</a> 603M左右<br>  <a href="http://mirrors.aliyun.com/centos/7.2.1511/isos/x86_64/CentOS-7-x86_64-Everything-1511.iso" target="_blank" rel="noopener">Everything镜像</a> 7.2G左右</li><li>Ceph版本：0.94.9（hammer版本）</li></ul><h3 id="一个搭建成功的Ceph集群"><a href="#一个搭建成功的Ceph集群" class="headerlink" title="一个搭建成功的Ceph集群"></a>一个搭建成功的Ceph集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ~]<span class="comment"># ceph -s</span></span><br><span class="line">    cluster 2818c750-8724-4a70-bb26-f01af7f6067f</span><br><span class="line">     health HEALTH_OK</span><br><span class="line">     monmap e1: 1 mons at &#123;ceph001=[2001:250:4402:2001:20c:29ff:fe25:8888]:6789/0&#125;</span><br><span class="line">            election epoch 1, quorum 0 ceph001</span><br><span class="line">     osdmap e17: 3 osds: 3 up, 3 <span class="keyword">in</span></span><br><span class="line">      pgmap v26: 128 pgs, 1 pools, 0 bytes data, 0 objects</span><br><span class="line">            101676 kB used, 284 GB / 284 GB avail</span><br><span class="line">                 128 active+clean</span><br></pre></td></tr></table></figure><p>具体如何搭建可以参考教程<a href="https://lemon2013.github.io/2016/11/06/%E9%85%8D%E7%BD%AE%E5%9F%BA%E4%BA%8EIPv6%E7%9A%84Ceph/">配置基于IPv6的单节点Ceph</a></p><h2 id="Ceph对象存储"><a href="#Ceph对象存储" class="headerlink" title="Ceph对象存储"></a>Ceph对象存储</h2><p>从 firefly（v0.80）版本以后，网关进程内嵌了Civetweb，而无需配置安装web服务器或者配置FastCGI，大大简化了Ceph对象网关的安装与配置。本教程亦是选用Civetweb</p><h3 id="安装对象网关"><a href="#安装对象网关" class="headerlink" title="安装对象网关"></a>安装对象网关</h3><p>安装 ceph-radosgw<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># yum install ceph-radosgw</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">base                                                            | 3.6 kB  00:00:00     </span><br><span class="line">ceph                                                            | 2.9 kB  00:00:00     </span><br><span class="line">ceph-noarch                                                     | 2.9 kB  00:00:00     </span><br><span class="line">epel                                                            | 4.3 kB  00:00:00     </span><br><span class="line">extras                                                          | 3.4 kB  00:00:00     </span><br><span class="line">updates                                                         | 3.4 kB  00:00:00     </span><br><span class="line">(1/9): ceph-noarch/primary_db                                   | 5.4 kB  00:00:00     </span><br><span class="line">(2/9): base/x86_64/group_gz                                     | 155 kB  00:00:00     </span><br><span class="line">(3/9): epel/x86_64/group_gz                                     | 170 kB  00:00:01     </span><br><span class="line">(4/9): ceph/primary_db                                          | 160 kB  00:00:01     </span><br><span class="line">(5/9): extras/x86_64/primary_db                                 | 166 kB  00:00:00     </span><br><span class="line">(6/9): epel/x86_64/updateinfo                                   | 673 kB  00:00:01     </span><br><span class="line">(7/9): epel/x86_64/primary_db                                   | 4.3 MB  00:00:17     </span><br><span class="line">(8/9): base/x86_64/primary_db                                   | 5.3 MB  00:00:20     </span><br><span class="line">(9/9): updates/x86_64/primary_db                                | 9.1 MB  00:00:27     </span><br><span class="line">Determining fastest mirrors</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package ceph-radosgw.x86_64 1:0.94.9-0.el7 will be installed</span><br><span class="line">--&gt; Processing Dependency: mailcap <span class="keyword">for</span> package: 1:ceph-radosgw-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: libfcgi.so.0()(64bit) <span class="keyword">for</span> package: 1:ceph-radosgw-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package fcgi.x86_64 0:2.4.0-25.el7 will be installed</span><br><span class="line">---&gt; Package mailcap.noarch 0:2.1.41-2.el7 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">=======================================================================================</span><br><span class="line"> Package                Arch             Version                  Repository      Size</span><br><span class="line">=======================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> ceph-radosgw           x86_64           1:0.94.9-0.el7           ceph           2.3 M</span><br><span class="line">Installing <span class="keyword">for</span> dependencies:</span><br><span class="line"> fcgi                   x86_64           2.4.0-25.el7             epel            47 k</span><br><span class="line"> mailcap                noarch           2.1.41-2.el7             base            31 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=======================================================================================</span><br><span class="line">Install  1 Package (+2 Dependent packages)</span><br><span class="line"></span><br><span class="line">Total download size: 2.4 M</span><br><span class="line">Installed size: 8.6 M</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">Downloading packages:</span><br><span class="line">(1/3): mailcap-2.1.41-2.el7.noarch.rpm                          |  31 kB  00:00:00     </span><br><span class="line">(2/3): fcgi-2.4.0-25.el7.x86_64.rpm                             |  47 kB  00:00:00     </span><br><span class="line">(3/3): ceph-radosgw-0.94.9-0.el7.x86_64.rpm                     | 2.3 MB  00:00:02     </span><br><span class="line">---------------------------------------------------------------------------------------</span><br><span class="line">Total                                                     867 kB/s | 2.4 MB  00:02     </span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction <span class="built_in">test</span></span><br><span class="line">Transaction <span class="built_in">test</span> succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Installing : fcgi-2.4.0-25.el7.x86_64                                            1/3 </span><br><span class="line">  Installing : mailcap-2.1.41-2.el7.noarch                                         2/3 </span><br><span class="line">  Installing : 1:ceph-radosgw-0.94.9-0.el7.x86_64                                  3/3 </span><br><span class="line">  Verifying  : mailcap-2.1.41-2.el7.noarch                                         1/3 </span><br><span class="line">  Verifying  : 1:ceph-radosgw-0.94.9-0.el7.x86_64                                  2/3 </span><br><span class="line">  Verifying  : fcgi-2.4.0-25.el7.x86_64                                            3/3 </span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  ceph-radosgw.x86_64 1:0.94.9-0.el7                                                   </span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  fcgi.x86_64 0:2.4.0-25.el7               mailcap.noarch 0:2.1.41-2.el7              </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></p><p>设置对象网关管理节点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ot@ceph001 cluster]<span class="comment"># ceph-deploy admin ceph001</span></span><br><span class="line">[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf</span><br><span class="line">[ceph_deploy.cli][INFO  ] Invoked (1.5.36): /usr/bin/ceph-deploy admin ceph001</span><br><span class="line">[ceph_deploy.cli][INFO  ] ceph-deploy options:</span><br><span class="line">[ceph_deploy.cli][INFO  ]  username                      : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  verbose                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  overwrite_conf                : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  quiet                         : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x7fe09a5280e0&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster                       : ceph</span><br><span class="line">[ceph_deploy.cli][INFO  ]  client                        : [<span class="string">'ceph001'</span>]</span><br><span class="line">[ceph_deploy.cli][INFO  ]  func                          : &lt;<span class="keyword">function</span> admin at 0x7fe09b38f410&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ceph_conf                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  default_release               : False</span><br><span class="line">[ceph_deploy.admin][DEBUG ] Pushing admin keys and conf to ceph001</span><br><span class="line">[ceph001][DEBUG ] connection detected need <span class="keyword">for</span> sudo</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] write cluster configuration to /etc/ceph/&#123;cluster&#125;.conf</span><br></pre></td></tr></table></figure></p><h3 id="新建网关实例"><a href="#新建网关实例" class="headerlink" title="新建网关实例"></a>新建网关实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy rgw create ceph001</span></span><br><span class="line">[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf</span><br><span class="line">[ceph_deploy.cli][INFO  ] Invoked (1.5.36): /usr/bin/ceph-deploy rgw create ceph001</span><br><span class="line">[ceph_deploy.cli][INFO  ] ceph-deploy options:</span><br><span class="line">[ceph_deploy.cli][INFO  ]  username                      : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  verbose                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  rgw                           : [(<span class="string">'ceph001'</span>, <span class="string">'rgw.ceph001'</span>)]</span><br><span class="line">[ceph_deploy.cli][INFO  ]  overwrite_conf                : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  subcommand                    : create</span><br><span class="line">[ceph_deploy.cli][INFO  ]  quiet                         : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x2a7ee60&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster                       : ceph</span><br><span class="line">[ceph_deploy.cli][INFO  ]  func                          : &lt;<span class="keyword">function</span> rgw at 0x29e7230&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ceph_conf                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  default_release               : False</span><br><span class="line">[ceph_deploy.rgw][DEBUG ] Deploying rgw, cluster ceph hosts ceph001:rgw.ceph001</span><br><span class="line">[ceph001][DEBUG ] connection detected need <span class="keyword">for</span> sudo</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph_deploy.rgw][INFO  ] Distro info: CentOS Linux 7.2.1511 Core</span><br><span class="line">[ceph_deploy.rgw][DEBUG ] remote host will use sysvinit</span><br><span class="line">[ceph_deploy.rgw][DEBUG ] deploying rgw bootstrap to ceph001</span><br><span class="line">[ceph001][DEBUG ] write cluster configuration to /etc/ceph/&#123;cluster&#125;.conf</span><br><span class="line">[ceph001][DEBUG ] create path recursively <span class="keyword">if</span> it doesn<span class="string">'t exist</span></span><br><span class="line"><span class="string">[ceph001][INFO  ] Running command: sudo ceph --cluster ceph --name client.bootstrap-rgw --keyring /var/lib/ceph/bootstrap-rgw/ceph.keyring auth get-or-create client.rgw.ceph001 osd allow rwx mon allow rw -o /var/lib/ceph/radosgw/ceph-rgw.ceph001/keyring</span></span><br><span class="line"><span class="string">[ceph001][INFO  ] Running command: sudo service ceph-radosgw start</span></span><br><span class="line"><span class="string">[ceph001][DEBUG ] Reloading systemd:  [  OK  ]</span></span><br><span class="line"><span class="string">[ceph001][DEBUG ] Starting ceph-radosgw (via systemctl):  [  OK  ]</span></span><br><span class="line"><span class="string">[ceph001][INFO  ] Running command: sudo systemctl enable ceph-radosgw</span></span><br><span class="line"><span class="string">[ceph001][WARNIN] ceph-radosgw.service is not a native service, redirecting to /sbin/chkconfig.</span></span><br><span class="line"><span class="string">[ceph001][WARNIN] Executing /sbin/chkconfig ceph-radosgw on</span></span><br><span class="line"><span class="string">[ceph_deploy.rgw][INFO  ] The Ceph Object Gateway (RGW) is now running on host ceph001 and default port 7480</span></span><br></pre></td></tr></table></figure><p>ceph-radosgw守护进程 Civetweb Webserver 默认运行在端口7480上，可以通过以下命令查看<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ceph]<span class="comment"># netstat -nlp | grep 7480</span></span><br><span class="line">tcp        0      0 0.0.0.0:7480            0.0.0.0:*               LISTEN      3537/radosgw</span><br></pre></td></tr></table></figure></p><h3 id="修改默认端口，并配置IPv6网关"><a href="#修改默认端口，并配置IPv6网关" class="headerlink" title="修改默认端口，并配置IPv6网关"></a>修改默认端口，并配置IPv6网关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># vim ceph.conf</span></span><br><span class="line">[global]</span><br><span class="line">fsid = 2818c750-8724-4a70-bb26-f01af7f6067f</span><br><span class="line">ms_bind_ipv6 = <span class="literal">true</span></span><br><span class="line">mon_initial_members = ceph001</span><br><span class="line">mon_host = [2001:250:4402:2001:20c:29ff:fe25:8888]</span><br><span class="line">auth_cluster_required = cephx</span><br><span class="line">auth_service_required = cephx</span><br><span class="line">auth_client_required = cephx</span><br><span class="line">osd_pool_default_size = 1</span><br><span class="line"><span class="comment"># IPv6网关配置</span></span><br><span class="line">[client.rgw.ceph001]</span><br><span class="line">rgw_frontends= <span class="string">"civetweb port=[::]:80"</span></span><br><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy --overwrite-conf config push ceph001</span></span><br><span class="line">[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf</span><br><span class="line">[ceph_deploy.cli][INFO  ] Invoked (1.5.36): /usr/bin/ceph-deploy --overwrite-conf config push ceph001</span><br><span class="line">[ceph_deploy.cli][INFO  ] ceph-deploy options:</span><br><span class="line">[ceph_deploy.cli][INFO  ]  username                      : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  verbose                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  overwrite_conf                : True</span><br><span class="line">[ceph_deploy.cli][INFO  ]  subcommand                    : push</span><br><span class="line">[ceph_deploy.cli][INFO  ]  quiet                         : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x7fdc0728a7a0&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster                       : ceph</span><br><span class="line">[ceph_deploy.cli][INFO  ]  client                        : [<span class="string">'ceph001'</span>]</span><br><span class="line">[ceph_deploy.cli][INFO  ]  func                          : &lt;<span class="keyword">function</span> config at 0x7fdc072652a8&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ceph_conf                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  default_release               : False</span><br><span class="line">[ceph_deploy.config][DEBUG ] Pushing config to ceph001</span><br><span class="line">[ceph001][DEBUG ] connection detected need <span class="keyword">for</span> sudo</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] write cluster configuration to /etc/ceph/&#123;cluster&#125;.conf</span><br></pre></td></tr></table></figure><p>重启服务，查看ceph-radosgw守护进程<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ceph]<span class="comment"># netstat -nlp | grep 80</span></span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      3540/ra</span><br></pre></td></tr></table></figure></p><p>可以通过浏览器来访问的IPv6对象网关(http://[2001:250:4402:2001:20c:29ff:fe25:8888]/)<br>得到与下图类似返回结果<br><img src="/img/rgw.png" alt="Alt text"><br>恭喜你，完成了IPv6的网关配置，更多内容可以参考官网<a href="http://docs.ceph.org.cn/radosgw/" target="_blank" rel="noopener">Ceph对象网关</a></p><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><h4 id="新建一个用户-S3接口）"><a href="#新建一个用户-S3接口）" class="headerlink" title="新建一个用户(S3接口）"></a>新建一个用户(S3接口）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ~]<span class="comment"># radosgw-admin user create --uid=lemon --display-name="柠檬" --email=lemon@qq.com</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"user_id"</span>: <span class="string">"lemon"</span>,</span><br><span class="line">    <span class="string">"display_name"</span>: <span class="string">"柠檬"</span>,</span><br><span class="line">    <span class="string">"email"</span>: <span class="string">"lemon@qq.com"</span>,</span><br><span class="line">    <span class="string">"suspended"</span>: 0,</span><br><span class="line">    <span class="string">"max_buckets"</span>: 1000,</span><br><span class="line">    <span class="string">"auid"</span>: 0,</span><br><span class="line">    <span class="string">"subusers"</span>: [],</span><br><span class="line">    <span class="string">"keys"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"user"</span>: <span class="string">"lemon"</span>,</span><br><span class="line">            <span class="string">"access_key"</span>: <span class="string">"29YAB6D3BVRBQQDFVLHI"</span>,</span><br><span class="line">            <span class="string">"secret_key"</span>: <span class="string">"QVPTxEvZHxQJhNdR58tZCfsgyP37jOKBKiPg1TaU"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"swift_keys"</span>: [],</span><br><span class="line">    <span class="string">"caps"</span>: [],</span><br><span class="line">    <span class="string">"op_mask"</span>: <span class="string">"read, write, delete"</span>,</span><br><span class="line">    <span class="string">"default_placement"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"placement_tags"</span>: [],</span><br><span class="line">    <span class="string">"bucket_quota"</span>: &#123;</span><br><span class="line">        <span class="string">"enabled"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"max_size_kb"</span>: -1,</span><br><span class="line">        <span class="string">"max_objects"</span>: -1</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"user_quota"</span>: &#123;</span><br><span class="line">        <span class="string">"enabled"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"max_size_kb"</span>: -1,</span><br><span class="line">        <span class="string">"max_objects"</span>: -1</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"temp_url_keys"</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成的access_key与secret_key可供访问任何兼容 S3 API 的客户端能够使用。更多配置请参考官网 <a href="http://docs.ceph.org.cn/radosgw/admin" target="_blank" rel="noopener">管理手册</a></p><h4 id="通过CloudBerry-Explorer-for-Amazon-S3-客户端验证IPv6平台的部署情况"><a href="#通过CloudBerry-Explorer-for-Amazon-S3-客户端验证IPv6平台的部署情况" class="headerlink" title="通过CloudBerry Explorer for Amazon S3 客户端验证IPv6平台的部署情况"></a>通过CloudBerry Explorer for Amazon S3 客户端验证IPv6平台的部署情况</h4><p><strong>下载该测试客户端CloudBerry Explorer for Amazon S3 for Windows</strong></p><ul><li><a href="http://www.cloudberrylab.com/download-thanks.aspx?prod=cbes3free&amp;src=ms" target="_blank" rel="noopener">官网</a></li><li><a href="http://pan.baidu.com/s/1mh7szNU" target="_blank" rel="noopener">百度云</a> 密码: bxu5</li></ul><p>安装成功后启动客户端，得到类似如下界面<br><img src="/img/cloudberry01.png" alt="Alt text"></p><p><strong>添加创建成功的Ceph对象存储</strong></p><p>点击菜单栏 File-&gt;Edit Accounts<br><img src="/img/register.png" alt="Alt text"><br>点击 Add-&gt;S3 Compatible<br><img src="/img/s3com.png" alt="Alt text"><br>配置相关参数，如下图所示，然后点击测试连接(test connection)<br><img src="/img/edit.png" alt="Alt text"></p><ul><li>Display name：随便填</li><li>Service point：即我们的对象网关地址，比如这里是http://[2001:250:4402:2001:20c:29ff:fe25:8888]/</li><li>Access key: 为我们创建用户的access_key，比如这里是29YAB6D3BVRBQQDFVLHI</li><li>Secret key: 为我们创建用户的secret_key, 比如这里是QVPTxEvZHxQJhNdR58tZCfsgyP37jOKBKiPg1TaU</li></ul><p>如果测试成功会弹出一个 connection success对话框</p><p><strong>使用</strong><br>选择刚刚创建的账户ceph001<br><img src="/img/s3003.png" alt="Alt text"><br>接下来可以通过该客户端创建bucket，上传以及下载文件等操作,其他就不一一介绍了<br><img src="/img/upload.png" alt="Alt text"><br>ceph端可以通过ceph -w 查看实时的客户端操作，比如这里是客户端进行写操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ~]<span class="comment"># ceph -w</span></span><br><span class="line">    cluster 2818c750-8724-4a70-bb26-f01af7f6067f</span><br><span class="line">     health HEALTH_OK</span><br><span class="line">     monmap e1: 1 mons at &#123;ceph001=[2001:250:4402:2001:20c:29ff:fe25:8888]:6789/0&#125;</span><br><span class="line">            election epoch 1, quorum 0 ceph001</span><br><span class="line">     osdmap e54: 3 osds: 3 up, 3 <span class="keyword">in</span></span><br><span class="line">      pgmap v312: 200 pgs, 10 pools, 425 MB data, 164 objects</span><br><span class="line">            826 MB used, 284 GB / 284 GB avail</span><br><span class="line">                 200 active+clean</span><br><span class="line">  client io 11630 kB/s wr, 25 op/s</span><br><span class="line"></span><br><span class="line">2016-11-10 10:30:23.606053 mon.0 [INF] pgmap v312: 200 pgs: 200 active+clean; 425 MB data, 826 MB used, 284 GB / 284 GB avail; 11630 kB/s wr, 25 op/s</span><br><span class="line">2016-11-10 10:30:27.197373 mon.0 [INF] pgmap v313: 200 pgs: 200 active+clean; 443 MB data, 866 MB used, 284 GB / 284 GB avail; 7826 kB/s wr, 17 op/s</span><br><span class="line">2016-11-10 10:30:28.810358 mon.0 [INF] pgmap v314: 200 pgs: 200 active+clean; 457 MB data, 910 MB used, 283 GB / 284 GB avail; 5914 kB/s wr, 12 op/s</span><br><span class="line">2016-11-10 10:30:31.830126 mon.0 [INF] pgmap v315: 200 pgs: 200 active+clean; 466 MB data, 927 MB used, 283 GB / 284 GB avail; 5015 kB/s wr, 11 op/s</span><br><span class="line">2016-11-10 10:30:32.918332 mon.0 [INF] pgmap v316: 200 pgs: 200 active+clean; 502 MB data, 1011 MB used, 283 GB / 284 GB avail; 10214 kB/s wr, 22 op/s</span><br><span class="line">2016-11-10 10:30:37.113515 mon.0 [INF] pgmap v317: 200 pgs: 200 active+clean; 521 MB data, 1037 MB used, 283 GB / 284 GB avail; 11093 kB/s wr, 24 op/s</span><br><span class="line">2016-11-10 10:30:38.256587 mon.0 [INF] pgmap v318: 200 pgs: 200 active+clean; 563 MB data, 1082 MB used, 283 GB / 284 GB avail; 11669 kB/s wr, 25 op/s</span><br><span class="line">2016-11-10 10:30:42.089761 mon.0 [INF] pgmap v319: 200 pgs: 200 active+clean; 580 MB data, 1106 MB used, 283 GB / 284 GB avail; 11572 kB/s wr, 25 op/s</span><br><span class="line">2016-11-10 10:30:43.099061 mon.0 [INF] pgmap v320: 200 pgs: 200 active+clean; 609 MB data, 1162 MB used, 283 GB / 284 GB avail; 9575 kB/s wr, 21 op/s</span><br><span class="line">2016-11-10 10:30:47.423680 mon.0 [INF] pgmap v321: 200 pgs: 200 active+clean; 628 MB data, 1184 MB used, 283 GB / 284 GB avail; 9104 kB/s wr, 19 op/s</span><br><span class="line">2016-11-10 10:30:48.938458 mon.0 [INF] pgmap v322: 200 pgs: 200 active+clean; 652 MB data, 1212 MB used, 283 GB / 284 GB avail; 7914 kB/s wr, 17 op/s</span><br><span class="line">2016-11-10 10:30:49.948222 mon.0 [INF] pgmap v323: 200 pgs: 200 active+clean; 660 MB data, 1216 MB used, 283 GB / 284 GB avail; 13007 kB/s wr, 28 op/s</span><br><span class="line">2016-11-10 10:30:52.843301 mon.0 [INF] pgmap v324: 200 pgs: 200 active+clean; 668 MB data, 1238 MB used, 283 GB / 284 GB avail; 3975 kB/s wr, 8 op/s</span><br><span class="line">2016-11-10 10:30:54.968022 mon.0 [INF] pgmap v325: 200 pgs: 200 active+clean; 714 MB data, 1278 MB used, 283 GB / 284 GB avail; 12919 kB/s wr, 28 op/s</span><br><span class="line">2016-11-10 10:30:58.521788 mon.0 [INF] pgmap v326: 200 pgs: 200 active+clean; 730 MB data, 1290 MB used, 283 GB / 284 GB avail; 12325 kB/s wr, 27 op/s</span><br><span class="line">2016-11-10 10:30:59.558175 mon.0 [INF] pgmap v327: 200 pgs: 200 active+clean; 764 MB data, 1334 MB used, 283 GB / 284 GB avail; 9621 kB/s wr, 20 op/s</span><br><span class="line">2016-11-10 10:31:03.218629 mon.0 [INF] pgmap v328: 200 pgs: 200 active+clean; 776 MB data, 1354 MB used, 283 GB / 284 GB avail; 8880 kB/s wr, 19 op/s</span><br><span class="line">2016-11-10 10:31:04.234516 mon.0 [INF] pgmap v329: 200 pgs: 200 active+clean; 816 MB data, 1382 MB used, 283 GB / 284 GB avail; 11345 kB/s wr, 24 op/s</span><br><span class="line">2016-11-10 10:31:08.422236 mon.0 [INF] pgmap v330: 200 pgs: 200 active+clean; 820 MB data, 1398 MB used, 283 GB / 284 GB avail; 8706 kB/s wr, 19 op/s</span><br><span class="line">2016-11-10 10:31:09.870466 mon.0 [INF] pgmap v331: 200 pgs: 200 active+clean; 856 MB data, 1463 MB used, 283 GB / 284 GB avail; 7887 kB/s wr, 17 op/s</span><br><span class="line">2016-11-10 10:31:14.003109 mon.0 [INF] pgmap v332: 200 pgs: 200 active+clean; 884 MB data, 1491 MB used, 283 GB / 284 GB avail; 12958 kB/s wr, 28 op/s</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>如果是想开发属于自己的S3客户端，可以调用相关的S3 API，具体可以参考官网<a href="http://docs.ceph.org.cn/radosgw/s3/" target="_blank" rel="noopener">S3 API</a><br>希望能帮到大家</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;在搭建成功Ceph集群后，对于如何使用，其实我还是一脸MB的，心想竟然提供三种存储接口（对象，文件，快），口气也未免太大。在结合项目需求之后，我选择了对象存储接口。那么问题又来了，如何配置IPv6的对象存储？
    
    </summary>
    
      <category term="Ceph" scheme="https://lemon2013.github.io/categories/Ceph/"/>
    
    
      <category term="IPv6" scheme="https://lemon2013.github.io/tags/IPv6/"/>
    
      <category term="Ceph" scheme="https://lemon2013.github.io/tags/Ceph/"/>
    
      <category term="rgw" scheme="https://lemon2013.github.io/tags/rgw/"/>
    
      <category term="对象存储" scheme="https://lemon2013.github.io/tags/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/"/>
    
      <category term="云存储" scheme="https://lemon2013.github.io/tags/%E4%BA%91%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>配置基于IPv6的单节点Ceph</title>
    <link href="https://lemon2013.github.io/2016/11/06/%E9%85%8D%E7%BD%AE%E5%9F%BA%E4%BA%8EIPv6%E7%9A%84Ceph/"/>
    <id>https://lemon2013.github.io/2016/11/06/配置基于IPv6的Ceph/</id>
    <published>2016-11-06T03:33:36.000Z</published>
    <updated>2017-07-14T01:19:03.226Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>为什么突然想起搭建一个基于IPv6的Ceph环境？纯属巧合，原本有一个项目需要搭建一个基于IPv6的文件系统，可惜Hadoop不支持（之前一直觉得Hadoop比较强大），几经折腾，Ceph给了我希望，好了闲话少说，直接进入正题。<a id="more"></a></p><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><ol><li>Linux操作系统版本：CentOS Linux release 7.2.1511 (Core)<ul><li><a href="http://mirrors.aliyun.com/centos/7.2.1511/isos/x86_64/CentOS-7-x86_64-Minimal-1511.iso" target="_blank" rel="noopener">Minimal镜像</a> 603M左右</li><li><a href="http://mirrors.aliyun.com/centos/7.2.1511/isos/x86_64/CentOS-7-x86_64-Everything-1511.iso" target="_blank" rel="noopener">Everything镜像</a> 7.2G左右</li></ul></li><li>Ceph版本：0.94.9（hammer版本）<ol><li>原本选取的为jewel最新版本，环境配置成功后，在使用Ceph的对象存储功能时，导致不能通过IPv6访问，出现类似如下错误提示,查阅资料发现是Ceph jewel版本的一个bug，正在修复，另外也给大家一个建议，在生产环境中，尽量不要选择最新版本。<blockquote><p>set_ports_option:[::]8888:invalid port sport spec</p></blockquote></li></ol></li></ol><h2 id="预检"><a href="#预检" class="headerlink" title="预检"></a>预检</h2><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>参考之前的一篇文章<a href="https://lemon2013.github.io/2016/11/06/Static-IPv6/">CentOS7 设置静态IPv6/IPv4地址</a>完成网络配置</p><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># hostnamectl set-hostname ceph001 #ceph001即为你想要修改的名字</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vim /etc/hosts</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">2001:250:4402:2001:20c:29ff:fe25:8888 ceph001  <span class="comment">#新增，前面IPv6地址即主机ceph001的静态IPv6地址</span></span><br></pre></td></tr></table></figure><h3 id="修改yum源"><a href="#修改yum源" class="headerlink" title="修改yum源"></a>修改yum源</h3><p>由于某些原因，可能导致官方的yum在下载软件时速度较慢，这里我们将yum源换为aliyun源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum clean all    #清空yum源</span></span><br><span class="line">[root@localhost ~]<span class="comment"># rm -rf /etc/yum.repos.d/*.repo</span></span><br><span class="line">[root@localhost ~]<span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  #下载阿里base源</span></span><br><span class="line">[root@localhost ~]<span class="comment"># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo   #下载阿里epel源</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -i '/aliyuncs/d' /etc/yum.repos.d/CentOS-Base.repo</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -i '/aliyuncs/d' /etc/yum.repos.d/epel.repo</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -i 's/$releasever/7.2.1511/g' /etc/yum.repos.d/CentOS-Base.repo</span></span><br></pre></td></tr></table></figure></p><p>添加ceph源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/yum.repos.d/ceph.repo</span></span><br><span class="line">[ceph]</span><br><span class="line">name=ceph</span><br><span class="line">baseurl=http://mirrors.aliyun.com/ceph/rpm-hammer/el7/x86_64/  <span class="comment">#可以选择需要安装的版本</span></span><br><span class="line">gpgcheck=0</span><br><span class="line">[ceph-noarch]</span><br><span class="line">name=cephnoarch</span><br><span class="line">baseurl=http://mirrors.aliyun.com/ceph/rpm-hammer/el7/noarch/ <span class="comment">#可以选择需要安装的版本</span></span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@localhost ~]<span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure></p><h3 id="安装ceph与ceph-deploy"><a href="#安装ceph与ceph-deploy" class="headerlink" title="安装ceph与ceph-deploy"></a>安装ceph与ceph-deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install ceph ceph-deploy</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package ceph.x86_64 1:0.94.9-0.el7 will be installed</span><br><span class="line">--&gt; Processing Dependency: librbd1 = 1:0.94.9-0.el7 <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: python-rbd = 1:0.94.9-0.el7 <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: python-cephfs = 1:0.94.9-0.el7 <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: libcephfs1 = 1:0.94.9-0.el7 <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: librados2 = 1:0.94.9-0.el7 <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: python-rados = 1:0.94.9-0.el7 <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: ceph-common = 1:0.94.9-0.el7 <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: python-requests <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: python-flask <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: redhat-lsb-core <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: hdparm <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: libcephfs.so.1()(64bit) <span class="keyword">for</span> package: 1:ceph-0.94.9-0.el7.x86_64</span><br><span class="line">.......</span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">=======================================================================================</span><br><span class="line"> Package                       Arch      Version                  Repository      Size</span><br><span class="line">=======================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> ceph                          x86_64    1:0.94.9-0.el7           ceph            20 M</span><br><span class="line"> ceph-deploy                   noarch    1.5.36-0                 ceph-noarch    283 k</span><br><span class="line">Installing <span class="keyword">for</span> dependencies:</span><br><span class="line"> boost-program-options         x86_64    1.53.0-25.el7            base           155 k</span><br><span class="line"> ceph-common                   x86_64    1:0.94.9-0.el7           ceph           7.2 M</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=======================================================================================</span><br><span class="line">Install  2 Packages (+24 Dependent packages)</span><br><span class="line">Upgrade             (  2 Dependent packages)</span><br><span class="line"></span><br><span class="line">Total download size: 37 M</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">Downloading packages:</span><br><span class="line">No Presto metadata available <span class="keyword">for</span> ceph</span><br><span class="line">warning: /var/cache/yum/x86_64/7/base/packages/boost-program-options-1.53.0-25.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID f4a80eb5: NOKEY</span><br><span class="line">Public key <span class="keyword">for</span> boost-program-options-1.53.0-25.el7.x86_64.rpm is not installed</span><br><span class="line">(1/28): boost-program-options-1.53.0-25.el7.x86_64.rpm          | 155 kB  00:00:00     </span><br><span class="line">(2/28): hdparm-9.43-5.el7.x86_64.rpm                            |  83 kB  00:00:00     </span><br><span class="line">(3/28): ceph-deploy-1.5.36-0.noarch.rpm                         | 283 kB  00:00:00     </span><br><span class="line">(4/28): leveldb-1.12.0-11.el7.x86_64.rpm                        | 161 kB  00:00:00     </span><br><span class="line">...    </span><br><span class="line">---------------------------------------------------------------------------------------</span><br><span class="line">Total                                                     718 kB/s |  37 MB  00:53     </span><br><span class="line">Retrieving key from http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line">Importing GPG key 0xF4A80EB5:</span><br><span class="line"> Userid     : <span class="string">"CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;"</span></span><br><span class="line"> Fingerprint: 6341 ab27 53d7 8a78 a7c2 7bb1 24c6 a8a7 f4a8 0eb5</span><br><span class="line"> From       : http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">...</span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure><p>验证安装版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ceph-deploy --version</span></span><br><span class="line">1.5.36</span><br><span class="line">[root@localhost ~]<span class="comment"># ceph -v</span></span><br><span class="line">ceph version 0.94.9 (fe6d859066244b97b24f09d46552afc2071e6f90)</span><br></pre></td></tr></table></figure></p><h3 id="安装NTP（如果是多节点还需要配置服务端与客户端），并设置selinux与firewalld"><a href="#安装NTP（如果是多节点还需要配置服务端与客户端），并设置selinux与firewalld" class="headerlink" title="安装NTP（如果是多节点还需要配置服务端与客户端），并设置selinux与firewalld"></a>安装NTP（如果是多节点还需要配置服务端与客户端），并设置selinux与firewalld</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install ntp</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/selinux/config</span></span><br><span class="line">[root@localhost ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl stop firewalld</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl disable firewalld</span></span><br><span class="line">Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.</span><br><span class="line">Removed symlink /etc/systemd/system/basic.target.wants/firewalld.service.</span><br></pre></td></tr></table></figure><h2 id="创建Ceph集群"><a href="#创建Ceph集群" class="headerlink" title="创建Ceph集群"></a>创建Ceph集群</h2><h3 id="在管理节点（ceph001）"><a href="#在管理节点（ceph001）" class="headerlink" title="在管理节点（ceph001）"></a>在管理节点（ceph001）</h3><p>[root@ceph001 ~]# mkdir cluster<br>[root@ceph001 ~]# cd cluster/</p><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy new ceph001</span></span><br><span class="line">[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf</span><br><span class="line">[ceph_deploy.cli][INFO  ] Invoked (1.5.36): /usr/bin/ceph-deploy new ceph001</span><br><span class="line">[ceph_deploy.cli][INFO  ] ceph-deploy options:</span><br><span class="line">[ceph_deploy.cli][INFO  ]  username                      : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  func                          : &lt;<span class="keyword">function</span> new at 0xfe0668&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  verbose                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  overwrite_conf                : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  quiet                         : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x104c680&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster                       : ceph</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ssh_copykey                   : True</span><br><span class="line">[ceph_deploy.cli][INFO  ]  mon                           : [<span class="string">'ceph001'</span>]</span><br><span class="line">[ceph_deploy.cli][INFO  ]  public_network                : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ceph_conf                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster_network               : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  default_release               : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  fsid                          : None</span><br><span class="line">[ceph_deploy.new][DEBUG ] Creating new cluster named ceph</span><br><span class="line">[ceph_deploy.new][INFO  ] making sure passwordless SSH succeeds</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/sbin/ip link show</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/sbin/ip addr show</span><br><span class="line">[ceph001][DEBUG ] IP addresses found: [u<span class="string">'192.168.122.1'</span>, u<span class="string">'49.123.105.124'</span>]</span><br><span class="line">[ceph_deploy.new][DEBUG ] Resolving host ceph001</span><br><span class="line">[ceph_deploy.new][DEBUG ] Monitor ceph001 at 2001:250:4402:2001:20c:29ff:fe25:8888</span><br><span class="line">[ceph_deploy.new][INFO  ] Monitors are IPv6, binding Messenger traffic on IPv6</span><br><span class="line">[ceph_deploy.new][DEBUG ] Monitor initial members are [<span class="string">'ceph001'</span>]</span><br><span class="line">[ceph_deploy.new][DEBUG ] Monitor addrs are [<span class="string">'[2001:250:4402:2001:20c:29ff:fe25:8888]'</span>]</span><br><span class="line">[ceph_deploy.new][DEBUG ] Creating a random mon key...</span><br><span class="line">[ceph_deploy.new][DEBUG ] Writing monitor keyring to ceph.mon.keyring...</span><br><span class="line">[ceph_deploy.new][DEBUG ] Writing initial config to ceph.conf...</span><br><span class="line">[root@ceph001 cluster]<span class="comment"># ll</span></span><br><span class="line">total 12</span><br><span class="line">-rw-r--r--. 1 root root  244 Nov  6 21:54 ceph.conf</span><br><span class="line">-rw-r--r--. 1 root root 3106 Nov  6 21:54 ceph-deploy-ceph.log</span><br><span class="line">-rw-------. 1 root root   73 Nov  6 21:54 ceph.mon.keyring</span><br><span class="line">[root@ceph001 cluster]<span class="comment"># cat ceph.conf </span></span><br><span class="line">[global]</span><br><span class="line">fsid = 865e6b01-b0ea-44da-87a5-26a4980aa7a8</span><br><span class="line">ms_bind_ipv6 = <span class="literal">true</span></span><br><span class="line">mon_initial_members = ceph001</span><br><span class="line">mon_host = [2001:250:4402:2001:20c:29ff:fe25:8888]</span><br><span class="line">auth_cluster_required = cephx</span><br><span class="line">auth_service_required = cephx</span><br><span class="line">auth_client_required = cephx</span><br></pre></td></tr></table></figure><p>由于我们采用的单节点部署，将默认的复制备份数改为1（原本是3）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># echo "osd_pool_default_size = 1" &gt;&gt; ceph.conf</span></span><br><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy --overwrite-conf config push ceph001</span></span><br><span class="line">[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf</span><br><span class="line">[ceph_deploy.cli][INFO  ] Invoked (1.5.36): /usr/bin/ceph-deploy --overwrite-conf config push ceph001</span><br><span class="line">[ceph_deploy.cli][INFO  ] ceph-deploy options:</span><br><span class="line">[ceph_deploy.cli][INFO  ]  username                      : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  verbose                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  overwrite_conf                : True</span><br><span class="line">[ceph_deploy.cli][INFO  ]  subcommand                    : push</span><br><span class="line">[ceph_deploy.cli][INFO  ]  quiet                         : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x14f9710&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster                       : ceph</span><br><span class="line">[ceph_deploy.cli][INFO  ]  client                        : [<span class="string">'ceph001'</span>]</span><br><span class="line">[ceph_deploy.cli][INFO  ]  func                          : &lt;<span class="keyword">function</span> config at 0x14d42a8&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ceph_conf                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  default_release               : False</span><br><span class="line">[ceph_deploy.config][DEBUG ] Pushing config to ceph001</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] write cluster configuration to /etc/ceph/&#123;cluster&#125;.conf</span><br></pre></td></tr></table></figure></p><h3 id="创建监控节点"><a href="#创建监控节点" class="headerlink" title="创建监控节点"></a>创建监控节点</h3><p>将ceph001作为监控节点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy mon create-initial</span></span><br><span class="line">[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf</span><br><span class="line">[ceph_deploy.cli][INFO  ] Invoked (1.5.36): /usr/bin/ceph-deploy mon create-initial</span><br><span class="line">[ceph_deploy.cli][INFO  ] ceph-deploy options:</span><br><span class="line">[ceph_deploy.cli][INFO  ]  username                      : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  verbose                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  overwrite_conf                : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  subcommand                    : create-initial</span><br><span class="line">[ceph_deploy.cli][INFO  ]  quiet                         : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x23865a8&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster                       : ceph</span><br><span class="line">[ceph_deploy.cli][INFO  ]  func                          : &lt;<span class="keyword">function</span> mon at 0x237e578&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ceph_conf                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  default_release               : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  keyrings                      : None</span><br><span class="line">[ceph_deploy.mon][DEBUG ] Deploying mon, cluster ceph hosts ceph001</span><br><span class="line">[ceph_deploy.mon][DEBUG ] detecting platform <span class="keyword">for</span> host ceph001 ...</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph_deploy.mon][INFO  ] distro info: CentOS Linux 7.2.1511 Core</span><br><span class="line">[ceph001][DEBUG ] determining <span class="keyword">if</span> provided host has same hostname <span class="keyword">in</span> remote</span><br><span class="line">[ceph001][DEBUG ] get remote short hostname</span><br><span class="line">[ceph001][DEBUG ] deploying mon to ceph001</span><br><span class="line">[ceph001][DEBUG ] get remote short hostname</span><br><span class="line">[ceph001][DEBUG ] remote hostname: ceph001</span><br><span class="line">[ceph001][DEBUG ] write cluster configuration to /etc/ceph/&#123;cluster&#125;.conf</span><br><span class="line">[ceph001][DEBUG ] create the mon path <span class="keyword">if</span> it does not exist</span><br><span class="line">[ceph001][DEBUG ] checking <span class="keyword">for</span> <span class="keyword">done</span> path: /var/lib/ceph/mon/ceph-ceph001/<span class="keyword">done</span></span><br><span class="line">[ceph001][DEBUG ] <span class="keyword">done</span> path does not exist: /var/lib/ceph/mon/ceph-ceph001/<span class="keyword">done</span></span><br><span class="line">[ceph001][INFO  ] creating keyring file: /var/lib/ceph/tmp/ceph-ceph001.mon.keyring</span><br><span class="line">[ceph001][DEBUG ] create the monitor keyring file</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: ceph-mon --cluster ceph --mkfs -i ceph001 --keyring /var/lib/ceph/tmp/ceph-ceph001.mon.keyring</span><br><span class="line">[ceph001][DEBUG ] ceph-mon: mon.noname<span class="_">-a</span> [2001:250:4402:2001:20c:29ff:fe25:8888]:6789/0 is <span class="built_in">local</span>, renaming to mon.ceph001</span><br><span class="line">[ceph001][DEBUG ] ceph-mon: <span class="built_in">set</span> fsid to 865e6b01-b0ea-44da-87a5-26a4980aa7a8</span><br><span class="line">[ceph001][DEBUG ] ceph-mon: created monfs at /var/lib/ceph/mon/ceph-ceph001 <span class="keyword">for</span> mon.ceph001</span><br><span class="line">[ceph001][INFO  ] unlinking keyring file /var/lib/ceph/tmp/ceph-ceph001.mon.keyring</span><br><span class="line">[ceph001][DEBUG ] create a <span class="keyword">done</span> file to avoid re-doing the mon deployment</span><br><span class="line">[ceph001][DEBUG ] create the init path <span class="keyword">if</span> it does not exist</span><br><span class="line">[ceph001][DEBUG ] locating the `service` executable...</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/sbin/service ceph -c /etc/ceph/ceph.conf start mon.ceph001</span><br><span class="line">[ceph001][DEBUG ] === mon.ceph001 === </span><br><span class="line">[ceph001][DEBUG ] Starting Ceph mon.ceph001 on ceph001...</span><br><span class="line">[ceph001][WARNIN] Running as unit ceph-mon.ceph001.1478441156.735105300.service.</span><br><span class="line">[ceph001][DEBUG ] Starting ceph-create-keys on ceph001...</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: systemctl <span class="built_in">enable</span> ceph</span><br><span class="line">[ceph001][WARNIN] ceph.service is not a native service, redirecting to /sbin/chkconfig.</span><br><span class="line">[ceph001][WARNIN] Executing /sbin/chkconfig ceph on</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: ceph --cluster=ceph --admin-daemon /var/run/ceph/ceph-mon.ceph001.asok mon_status</span><br><span class="line">[ceph001][DEBUG ] ********************************************************************************</span><br><span class="line">[ceph001][DEBUG ] status <span class="keyword">for</span> monitor: mon.ceph001</span><br><span class="line">[ceph001][DEBUG ] &#123;</span><br><span class="line">[ceph001][DEBUG ]   <span class="string">"election_epoch"</span>: 2, </span><br><span class="line">[ceph001][DEBUG ]   <span class="string">"extra_probe_peers"</span>: [], </span><br><span class="line">[ceph001][DEBUG ]   <span class="string">"monmap"</span>: &#123;</span><br><span class="line">[ceph001][DEBUG ]     <span class="string">"created"</span>: <span class="string">"0.000000"</span>, </span><br><span class="line">[ceph001][DEBUG ]     <span class="string">"epoch"</span>: 1, </span><br><span class="line">[ceph001][DEBUG ]     <span class="string">"fsid"</span>: <span class="string">"865e6b01-b0ea-44da-87a5-26a4980aa7a8"</span>, </span><br><span class="line">[ceph001][DEBUG ]     <span class="string">"modified"</span>: <span class="string">"0.000000"</span>, </span><br><span class="line">[ceph001][DEBUG ]     <span class="string">"mons"</span>: [</span><br><span class="line">[ceph001][DEBUG ]       &#123;</span><br><span class="line">[ceph001][DEBUG ]         <span class="string">"addr"</span>: <span class="string">"[2001:250:4402:2001:20c:29ff:fe25:8888]:6789/0"</span>, </span><br><span class="line">[ceph001][DEBUG ]         <span class="string">"name"</span>: <span class="string">"ceph001"</span>, </span><br><span class="line">[ceph001][DEBUG ]         <span class="string">"rank"</span>: 0</span><br><span class="line">[ceph001][DEBUG ]       &#125;</span><br><span class="line">[ceph001][DEBUG ]     ]</span><br><span class="line">[ceph001][DEBUG ]   &#125;, </span><br><span class="line">[ceph001][DEBUG ]   <span class="string">"name"</span>: <span class="string">"ceph001"</span>, </span><br><span class="line">[ceph001][DEBUG ]   <span class="string">"outside_quorum"</span>: [], </span><br><span class="line">[ceph001][DEBUG ]   <span class="string">"quorum"</span>: [</span><br><span class="line">[ceph001][DEBUG ]     0</span><br><span class="line">[ceph001][DEBUG ]   ], </span><br><span class="line">[ceph001][DEBUG ]   <span class="string">"rank"</span>: 0, </span><br><span class="line">[ceph001][DEBUG ]   <span class="string">"state"</span>: <span class="string">"leader"</span>, </span><br><span class="line">[ceph001][DEBUG ]   <span class="string">"sync_provider"</span>: []</span><br><span class="line">[ceph001][DEBUG ] &#125;</span><br><span class="line">[ceph001][DEBUG ] ********************************************************************************</span><br><span class="line">[ceph001][INFO  ] monitor: mon.ceph001 is running</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: ceph --cluster=ceph --admin-daemon /var/run/ceph/ceph-mon.ceph001.asok mon_status</span><br><span class="line">[ceph_deploy.mon][INFO  ] processing monitor mon.ceph001</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: ceph --cluster=ceph --admin-daemon /var/run/ceph/ceph-mon.ceph001.asok mon_status</span><br><span class="line">[ceph_deploy.mon][INFO  ] mon.ceph001 monitor has reached quorum!</span><br><span class="line">[ceph_deploy.mon][INFO  ] all initial monitors are running and have formed quorum</span><br><span class="line">[ceph_deploy.mon][INFO  ] Running gatherkeys...</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing keys <span class="keyword">in</span> temp directory /tmp/tmpgY2IT7</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] get remote short hostname</span><br><span class="line">[ceph001][DEBUG ] fetch remote file</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/bin/ceph --connect-timeout=25 --cluster=ceph --admin-daemon=/var/run/ceph/ceph-mon.ceph001.asok mon_status</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/bin/ceph --connect-timeout=25 --cluster=ceph --name mon. --keyring=/var/lib/ceph/mon/ceph-ceph001/keyring auth get client.admin</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/bin/ceph --connect-timeout=25 --cluster=ceph --name mon. --keyring=/var/lib/ceph/mon/ceph-ceph001/keyring auth get client.bootstrap-mds</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/bin/ceph --connect-timeout=25 --cluster=ceph --name mon. --keyring=/var/lib/ceph/mon/ceph-ceph001/keyring auth get client.bootstrap-osd</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/bin/ceph --connect-timeout=25 --cluster=ceph --name mon. --keyring=/var/lib/ceph/mon/ceph-ceph001/keyring auth get client.bootstrap-rgw</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing ceph.client.admin.keyring</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing ceph.bootstrap-mds.keyring</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] keyring <span class="string">'ceph.mon.keyring'</span> already exists</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing ceph.bootstrap-osd.keyring</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Storing ceph.bootstrap-rgw.keyring</span><br><span class="line">[ceph_deploy.gatherkeys][INFO  ] Destroy temp directory /tmp/tmpgY2IT7</span><br></pre></td></tr></table></figure></p><p>查看集群状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph -s</span></span><br><span class="line">    cluster 865e6b01-b0ea-44da-87a5-26a4980aa7a8</span><br><span class="line">     health HEALTH_ERR</span><br><span class="line">            64 pgs stuck inactive</span><br><span class="line">            64 pgs stuck unclean</span><br><span class="line">            no osds</span><br><span class="line">     monmap e1: 1 mons at &#123;ceph001=[2001:250:4402:2001:20c:29ff:fe25:8888]:6789/0&#125;</span><br><span class="line">            election epoch 2, quorum 0 ceph001</span><br><span class="line">     osdmap e1: 0 osds: 0 up, 0 <span class="keyword">in</span></span><br><span class="line">      pgmap v2: 64 pgs, 1 pools, 0 bytes data, 0 objects</span><br><span class="line">            0 kB used, 0 kB / 0 kB avail</span><br><span class="line">                  64 creating</span><br></pre></td></tr></table></figure></p><h3 id="添加OSD"><a href="#添加OSD" class="headerlink" title="添加OSD"></a>添加OSD</h3><p>查看硬盘<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy disk list ceph001</span></span><br><span class="line">[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf</span><br><span class="line">[ceph_deploy.cli][INFO  ] Invoked (1.5.36): /usr/bin/ceph-deploy disk list ceph001</span><br><span class="line">[ceph_deploy.cli][INFO  ] ceph-deploy options:</span><br><span class="line">[ceph_deploy.cli][INFO  ]  username                      : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  verbose                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  overwrite_conf                : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  subcommand                    : list</span><br><span class="line">[ceph_deploy.cli][INFO  ]  quiet                         : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x1c79bd8&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster                       : ceph</span><br><span class="line">[ceph_deploy.cli][INFO  ]  func                          : &lt;<span class="keyword">function</span> disk at 0x1c70e60&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ceph_conf                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  default_release               : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  disk                          : [(<span class="string">'ceph001'</span>, None, None)]</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph_deploy.osd][INFO  ] Distro info: CentOS Linux 7.2.1511 Core</span><br><span class="line">[ceph_deploy.osd][DEBUG ] Listing disks on ceph001...</span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/sbin/ceph-disk list</span><br><span class="line">[ceph001][DEBUG ] /dev/sda :</span><br><span class="line">[ceph001][DEBUG ]  /dev/sda1 other, xfs, mounted on /boot</span><br><span class="line">[ceph001][DEBUG ]  /dev/sda2 other, LVM2_member</span><br><span class="line">[ceph001][DEBUG ] /dev/sdb other, unknown</span><br><span class="line">[ceph001][DEBUG ] /dev/sdc other, unknown</span><br><span class="line">[ceph001][DEBUG ] /dev/sdd other, unknown</span><br><span class="line">[ceph001][DEBUG ] /dev/sr0 other, iso9660</span><br></pre></td></tr></table></figure></p><p>添加第一个OSD（/dev/sdb）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy disk zap ceph001:/dev/sdb</span></span><br><span class="line">[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf</span><br><span class="line">[ceph_deploy.cli][INFO  ] Invoked (1.5.36): /usr/bin/ceph-deploy disk zap ceph001:/dev/sdb</span><br><span class="line">[ceph_deploy.cli][INFO  ] ceph-deploy options:</span><br><span class="line">[ceph_deploy.cli][INFO  ]  username                      : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  verbose                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  overwrite_conf                : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  subcommand                    : zap</span><br><span class="line">[ceph_deploy.cli][INFO  ]  quiet                         : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x1b14bd8&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster                       : ceph</span><br><span class="line">[ceph_deploy.cli][INFO  ]  func                          : &lt;<span class="keyword">function</span> disk at 0x1b0be60&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ceph_conf                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  default_release               : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  disk                          : [(<span class="string">'ceph001'</span>, <span class="string">'/dev/sdb'</span>, None)]</span><br><span class="line">[ceph_deploy.osd][DEBUG ] zapping /dev/sdb on ceph001</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph_deploy.osd][INFO  ] Distro info: CentOS Linux 7.2.1511 Core</span><br><span class="line">[ceph001][DEBUG ] zeroing last few blocks of device</span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/sbin/ceph-disk zap /dev/sdb</span><br><span class="line">[ceph001][DEBUG ] Creating new GPT entries.</span><br><span class="line">[ceph001][DEBUG ] GPT data structures destroyed! You may now partition the disk using fdisk or</span><br><span class="line">[ceph001][DEBUG ] other utilities.</span><br><span class="line">[ceph001][DEBUG ] Creating new GPT entries.</span><br><span class="line">[ceph001][DEBUG ] The operation has completed successfully.</span><br><span class="line">[ceph001][WARNIN] partx: specified range &lt;1:0&gt; does not make sense</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy osd create ceph001:/dev/sdb</span></span><br><span class="line">[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf</span><br><span class="line">[ceph_deploy.cli][INFO  ] Invoked (1.5.36): /usr/bin/ceph-deploy osd create ceph001:/dev/sdb</span><br><span class="line">[ceph_deploy.cli][INFO  ] ceph-deploy options:</span><br><span class="line">[ceph_deploy.cli][INFO  ]  username                      : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  disk                          : [(<span class="string">'ceph001'</span>, <span class="string">'/dev/sdb'</span>, None)]</span><br><span class="line">[ceph_deploy.cli][INFO  ]  dmcrypt                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  verbose                       : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  bluestore                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  overwrite_conf                : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  subcommand                    : create</span><br><span class="line">[ceph_deploy.cli][INFO  ]  dmcrypt_key_dir               : /etc/ceph/dmcrypt-keys</span><br><span class="line">[ceph_deploy.cli][INFO  ]  quiet                         : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cd_conf                       : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x19b6680&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  cluster                       : ceph</span><br><span class="line">[ceph_deploy.cli][INFO  ]  fs_type                       : xfs</span><br><span class="line">[ceph_deploy.cli][INFO  ]  func                          : &lt;<span class="keyword">function</span> osd at 0x19aade8&gt;</span><br><span class="line">[ceph_deploy.cli][INFO  ]  ceph_conf                     : None</span><br><span class="line">[ceph_deploy.cli][INFO  ]  default_release               : False</span><br><span class="line">[ceph_deploy.cli][INFO  ]  zap_disk                      : False</span><br><span class="line">[ceph_deploy.osd][DEBUG ] Preparing cluster ceph disks ceph001:/dev/sdb:</span><br><span class="line">[ceph001][DEBUG ] connected to host: ceph001 </span><br><span class="line">[ceph001][DEBUG ] detect platform information from remote host</span><br><span class="line">[ceph001][DEBUG ] detect machine <span class="built_in">type</span></span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph_deploy.osd][INFO  ] Distro info: CentOS Linux 7.2.1511 Core</span><br><span class="line">[ceph_deploy.osd][DEBUG ] Deploying osd to ceph001</span><br><span class="line">[ceph001][DEBUG ] write cluster configuration to /etc/ceph/&#123;cluster&#125;.conf</span><br><span class="line">[ceph_deploy.osd][DEBUG ] Preparing host ceph001 disk /dev/sdb journal None activate True</span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /usr/sbin/ceph-disk -v prepare --cluster ceph --fs-type xfs -- /dev/sdb</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/ceph-osd --cluster=ceph --show-config-value=fsid</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/ceph-conf --cluster=ceph --name=osd. --lookup osd_mkfs_options_xfs</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/ceph-conf --cluster=ceph --name=osd. --lookup osd_fs_mkfs_options_xfs</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/ceph-conf --cluster=ceph --name=osd. --lookup osd_mount_options_xfs</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/ceph-conf --cluster=ceph --name=osd. --lookup osd_fs_mount_options_xfs</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/ceph-osd --cluster=ceph --show-config-value=osd_journal_size</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/ceph-conf --cluster=ceph --name=osd. --lookup osd_cryptsetup_parameters</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/ceph-conf --cluster=ceph --name=osd. --lookup osd_dmcrypt_key_size</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/ceph-conf --cluster=ceph --name=osd. --lookup osd_dmcrypt_type</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Will colocate journal with data on /dev/sdb</span><br><span class="line">[ceph001][WARNIN] DEBUG:ceph-disk:Creating journal partition num 2 size 5120 on /dev/sdb</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/sbin/sgdisk --new=2:0:5120M --change-name=2:ceph journal --partition-guid=2:ae307314-3a81-4da2-974b-b21c24d9bba1 --typecode=2:45b0969e-9b03-4f30-b4c6-b4b80ceff106 --mbrtogpt -- /dev/sdb</span><br><span class="line">[ceph001][DEBUG ] The operation has completed successfully.</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:calling partx on prepared device /dev/sdb</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:re-reading known partitions will display errors</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/sbin/partx -a /dev/sdb</span><br><span class="line">[ceph001][WARNIN] partx: /dev/sdb: error adding partition 2</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/udevadm settle</span><br><span class="line">[ceph001][WARNIN] DEBUG:ceph-disk:Journal is GPT partition /dev/disk/by-partuuid/ae307314-3a81-4da2-974b-b21c24d9bba1</span><br><span class="line">[ceph001][WARNIN] DEBUG:ceph-disk:Journal is GPT partition /dev/disk/by-partuuid/ae307314-3a81-4da2-974b-b21c24d9bba1</span><br><span class="line">[ceph001][WARNIN] DEBUG:ceph-disk:Creating osd partition on /dev/sdb</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/sbin/sgdisk --largest-new=1 --change-name=1:ceph data --partition-guid=1:16a6298d-59bb-4190-867a-10a5b519e7c0 --typecode=1:89c57f98-2fe5-4dc0-89c1-f3ad0ceff2be -- /dev/sdb</span><br><span class="line">[ceph001][DEBUG ] The operation has completed successfully.</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:calling partx on created device /dev/sdb</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:re-reading known partitions will display errors</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/sbin/partx -a /dev/sdb</span><br><span class="line">[ceph001][WARNIN] partx: /dev/sdb: error adding partitions 1-2</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/udevadm settle</span><br><span class="line">[ceph001][WARNIN] DEBUG:ceph-disk:Creating xfs fs on /dev/sdb1</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/sbin/mkfs -t xfs -f -i size=2048 -- /dev/sdb1</span><br><span class="line">[ceph001][DEBUG ] meta-data=/dev/sdb1              isize=2048   agcount=4, agsize=6225855 blks</span><br><span class="line">[ceph001][DEBUG ]          =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">[ceph001][DEBUG ]          =                       crc=0        finobt=0</span><br><span class="line">[ceph001][DEBUG ] data     =                       bsize=4096   blocks=24903419, imaxpct=25</span><br><span class="line">[ceph001][DEBUG ]          =                       sunit=0      swidth=0 blks</span><br><span class="line">[ceph001][DEBUG ] naming   =version 2              bsize=4096   ascii-ci=0 ftype=0</span><br><span class="line">[ceph001][DEBUG ] <span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=12159, version=2</span><br><span class="line">[ceph001][DEBUG ]          =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">[ceph001][DEBUG ] realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">[ceph001][WARNIN] DEBUG:ceph-disk:Mounting /dev/sdb1 on /var/lib/ceph/tmp/mnt.2SMGIk with options noatime,inode64</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/bin/mount -t xfs -o noatime,inode64 -- /dev/sdb1 /var/lib/ceph/tmp/mnt.2SMGIk</span><br><span class="line">[ceph001][WARNIN] DEBUG:ceph-disk:Preparing osd data dir /var/lib/ceph/tmp/mnt.2SMGIk</span><br><span class="line">[ceph001][WARNIN] DEBUG:ceph-disk:Creating symlink /var/lib/ceph/tmp/mnt.2SMGIk/journal -&gt; /dev/disk/by-partuuid/ae307314-3a81-4da2-974b-b21c24d9bba1</span><br><span class="line">[ceph001][WARNIN] DEBUG:ceph-disk:Unmounting /var/lib/ceph/tmp/mnt.2SMGIk</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /bin/umount -- /var/lib/ceph/tmp/mnt.2SMGIk</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/sbin/sgdisk --typecode=1:4fbd7e29-9d25-41b8-afd0-062c0ceff05d -- /dev/sdb</span><br><span class="line">[ceph001][DEBUG ] Warning: The kernel is still using the old partition table.</span><br><span class="line">[ceph001][DEBUG ] The new table will be used at the next reboot.</span><br><span class="line">[ceph001][DEBUG ] The operation has completed successfully.</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:calling partx on prepared device /dev/sdb</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:re-reading known partitions will display errors</span><br><span class="line">[ceph001][WARNIN] INFO:ceph-disk:Running <span class="built_in">command</span>: /usr/sbin/partx -a /dev/sdb</span><br><span class="line">[ceph001][WARNIN] partx: /dev/sdb: error adding partitions 1-2</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: systemctl <span class="built_in">enable</span> ceph</span><br><span class="line">[ceph001][WARNIN] ceph.service is not a native service, redirecting to /sbin/chkconfig.</span><br><span class="line">[ceph001][WARNIN] Executing /sbin/chkconfig ceph on</span><br><span class="line">[ceph001][INFO  ] checking OSD status...</span><br><span class="line">[ceph001][DEBUG ] find the location of an executable</span><br><span class="line">[ceph001][INFO  ] Running <span class="built_in">command</span>: /bin/ceph --cluster=ceph osd <span class="built_in">stat</span> --format=json</span><br><span class="line">[ceph001][WARNIN] there is 1 OSD down</span><br><span class="line">[ceph001][WARNIN] there is 1 OSD out</span><br><span class="line">[ceph_deploy.osd][DEBUG ] Host ceph001 is now ready <span class="keyword">for</span> osd use.</span><br></pre></td></tr></table></figure><p>查看集群状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph -s</span></span><br><span class="line">    cluster 865e6b01-b0ea-44da-87a5-26a4980aa7a8</span><br><span class="line">     health HEALTH_WARN</span><br><span class="line">            64 pgs stuck inactive</span><br><span class="line">            64 pgs stuck unclean</span><br><span class="line">     monmap e1: 1 mons at &#123;ceph001=[2001:250:4402:2001:20c:29ff:fe25:8888]:6789/0&#125;</span><br><span class="line">            election epoch 1, quorum 0 ceph001</span><br><span class="line">     osdmap e3: 1 osds: 0 up, 0 <span class="keyword">in</span></span><br><span class="line">      pgmap v4: 64 pgs, 1 pools, 0 bytes data, 0 objects</span><br><span class="line">            0 kB used, 0 kB / 0 kB avail</span><br><span class="line">                  64 creating</span><br></pre></td></tr></table></figure></p><p>继续添加其他OSD<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy disk zap ceph001:/dev/sdc</span></span><br><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy disk zap ceph001:/dev/sdd</span></span><br><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy osd create ceph001:/dev/sdc</span></span><br><span class="line">[root@ceph001 cluster]<span class="comment"># ceph-deploy osd create ceph001:/dev/sdd</span></span><br><span class="line">[root@ceph001 cluster]<span class="comment"># ceph -s</span></span><br><span class="line">    cluster 865e6b01-b0ea-44da-87a5-26a4980aa7a8</span><br><span class="line">     health HEALTH_WARN</span><br><span class="line">            64 pgs stuck inactive</span><br><span class="line">            64 pgs stuck unclean</span><br><span class="line">     monmap e1: 1 mons at &#123;ceph001=[2001:250:4402:2001:20c:29ff:fe25:8888]:6789/0&#125;</span><br><span class="line">            election epoch 1, quorum 0 ceph001</span><br><span class="line">     osdmap e7: 3 osds: 0 up, 0 <span class="keyword">in</span></span><br><span class="line">      pgmap v8: 64 pgs, 1 pools, 0 bytes data, 0 objects</span><br><span class="line">            0 kB used, 0 kB / 0 kB avail</span><br><span class="line">                  64 creating</span><br></pre></td></tr></table></figure></p><p>重启机器，查看集群状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ~]<span class="comment"># ceph -s</span></span><br><span class="line">    cluster 2818c750-8724-4a70-bb26-f01af7f6067f</span><br><span class="line">     health HEALTH_WARN</span><br><span class="line">            too few PGs per OSD (21 &lt; min 30)</span><br><span class="line">     monmap e1: 1 mons at &#123;ceph001=[2001:250:4402:2001:20c:29ff:fe25:8888]:6789/0&#125;</span><br><span class="line">            election epoch 1, quorum 0 ceph001</span><br><span class="line">     osdmap e9: 3 osds: 3 up, 3 <span class="keyword">in</span></span><br><span class="line">      pgmap v11: 64 pgs, 1 pools, 0 bytes data, 0 objects</span><br><span class="line">            102196 kB used, 284 GB / 284 GB avail</span><br><span class="line">                  64 active+clean</span><br></pre></td></tr></table></figure></p><h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><p>我们可以看到，目前集群状态为HEALTH_WARN，存在以下警告提示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">too few PGs per OSD (21 &lt; min 30)</span><br></pre></td></tr></table></figure></p><p>增大rbd的pg数(too few PGs per OSD (21 &lt; min 30))<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 cluster]<span class="comment"># ceph osd pool set rbd pg_num 128</span></span><br><span class="line"><span class="built_in">set</span> pool 0 pg_num to 128</span><br><span class="line">[root@ceph001 cluster]<span class="comment"># ceph osd pool set rbd pgp_num 128</span></span><br><span class="line"><span class="built_in">set</span> pool 0 pgp_num to 128</span><br></pre></td></tr></table></figure></p><p>查看集群状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ceph001 ~]<span class="comment"># ceph -s</span></span><br><span class="line">    cluster 2818c750-8724-4a70-bb26-f01af7f6067f</span><br><span class="line">     health HEALTH_OK</span><br><span class="line">     monmap e1: 1 mons at &#123;ceph001=[2001:250:4402:2001:20c:29ff:fe25:8888]:6789/0&#125;</span><br><span class="line">            election epoch 1, quorum 0 ceph001</span><br><span class="line">     osdmap e13: 3 osds: 3 up, 3 <span class="keyword">in</span></span><br><span class="line">      pgmap v17: 128 pgs, 1 pools, 0 bytes data, 0 objects</span><br><span class="line">            101544 kB used, 284 GB / 284 GB avail</span><br><span class="line">                 128 active+clean</span><br></pre></td></tr></table></figure></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li>本教程只是简单的搭建了一个单节点的Ceph环境，如果要换成多节点也很简单，操作大同小异</li><li>在基于IPv6的Ceph配置上，个人觉得与IPv4操作相差不大，只需要注意两点<ol><li>配置静态的IPv6地址</li><li>修改主机名并添加域名解析，将主机名对应于前面设置的静态IPv6地址</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;为什么突然想起搭建一个基于IPv6的Ceph环境？纯属巧合，原本有一个项目需要搭建一个基于IPv6的文件系统，可惜Hadoop不支持（之前一直觉得Hadoop比较强大），几经折腾，Ceph给了我希望，好了闲话少说，直接进入正题。
    
    </summary>
    
      <category term="Ceph" scheme="https://lemon2013.github.io/categories/Ceph/"/>
    
    
      <category term="IPv6" scheme="https://lemon2013.github.io/tags/IPv6/"/>
    
      <category term="Ceph" scheme="https://lemon2013.github.io/tags/Ceph/"/>
    
      <category term="云存储" scheme="https://lemon2013.github.io/tags/%E4%BA%91%E5%AD%98%E5%82%A8/"/>
    
      <category term="单节点部署ceph" scheme="https://lemon2013.github.io/tags/%E5%8D%95%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2ceph/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 设置静态IPv6/IPv4地址</title>
    <link href="https://lemon2013.github.io/2016/11/06/Static-IPv6/"/>
    <id>https://lemon2013.github.io/2016/11/06/Static-IPv6/</id>
    <published>2016-11-06T03:29:29.000Z</published>
    <updated>2016-11-23T12:02:50.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1 环境准备"></a>1 环境准备</h2><p>实验均在Vmware Workstation虚拟机上完成，上网方式选择桥接模式，保证网络支持IPv6,为了操作方便，我们使用root用户登录系统<a id="more"></a></p><h3 id="1-1-Linux系统版本"><a href="#1-1-Linux系统版本" class="headerlink" title="1.1 Linux系统版本"></a>1.1 Linux系统版本</h3><p>CentOS Linux release 7.2.1511 (Core)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">CentOS Linux release 7.2.1511 (Core)</span><br></pre></td></tr></table></figure></p><h3 id="1-2-系统支持IPv6"><a href="#1-2-系统支持IPv6" class="headerlink" title="1.2 系统支持IPv6"></a>1.2 系统支持IPv6</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ifconfig</span></span><br><span class="line">eno16777736: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 49.123.105.124  netmask 255.255.192.0  broadcast 49.123.127.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe25:c621  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        inet6 2001:250:4402:2001:20c:29ff:fe25:c621  prefixlen 64  scopeid 0x0&lt;global&gt;</span><br><span class="line">        ether 00:0c:29:25:c6:21  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 19255  bytes 2006024 (1.9 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2151  bytes 210339 (205.4 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>如图所示，可以看到系统默认的IPv6地址为2001:250:4402:2001:20c:29ff:fe25:c621</p><h2 id="2-修改网络配置文件"><a href="#2-修改网络配置文件" class="headerlink" title="2 修改网络配置文件"></a>2 修改网络配置文件</h2><p>根据1.2，我们得知网卡为eno16777736，切换到目录/etc/sysconfig/network-scripts下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /etc/sysconfig/network-scripts</span></span><br></pre></td></tr></table></figure></p><p>编辑文件 ifcfg-eno16777736<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim ifcfg-eno16777736</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=no</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">NAME=eno16777736</span><br><span class="line">UUID=13faf306-5205-4d3a-ac23-4699236dee95</span><br><span class="line">DEVICE=eno16777736</span><br><span class="line">ONBOOT=yes</span><br><span class="line">DNS1=202.197.96.1</span><br><span class="line">IPV6ADDR=2001:250:4402:2001:20c:29ff:fe25:8888/64</span><br><span class="line">IPADDR=49.123.105.124</span><br><span class="line">PREFIX=8</span><br><span class="line">GATEWAY=49.123.64.1</span><br></pre></td></tr></table></figure></p><h2 id="3-重启网络"><a href="#3-重启网络" class="headerlink" title="3 重启网络"></a>3 重启网络</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost network-scripts]<span class="comment"># systemctl  restart network</span></span><br></pre></td></tr></table></figure><h2 id="4-测试是否配置成功"><a href="#4-测试是否配置成功" class="headerlink" title="4 测试是否配置成功"></a>4 测试是否配置成功</h2><h3 id="4-1-通过ifconfig命令查看设置的IPv6-IPv4地址"><a href="#4-1-通过ifconfig命令查看设置的IPv6-IPv4地址" class="headerlink" title="4.1 通过ifconfig命令查看设置的IPv6/IPv4地址"></a>4.1 通过ifconfig命令查看设置的IPv6/IPv4地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ifconfig eno16777736</span></span><br><span class="line">eno16777736: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 49.123.105.124  netmask 255.0.0.0  broadcast 49.255.255.255</span><br><span class="line">        inet6 2001:250:4402:2001:20c:29ff:fe25:8888  prefixlen 64  scopeid 0x0&lt;global&gt;</span><br><span class="line">        inet6 fe80::20c:29ff:fe25:c621  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        inet6 2001:250:4402:2001:20c:29ff:fe25:c621  prefixlen 64  scopeid 0x0&lt;global&gt;</span><br><span class="line">        ether 00:0c:29:25:c6:21  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 33732  bytes 8234767 (7.8 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 6229  bytes 623829 (609.2 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><h3 id="4-2-使用另外一台机器进行ping连接测试（两台机器均在同一局域网内）"><a href="#4-2-使用另外一台机器进行ping连接测试（两台机器均在同一局域网内）" class="headerlink" title="4.2 使用另外一台机器进行ping连接测试（两台机器均在同一局域网内）"></a>4.2 使用另外一台机器进行ping连接测试（两台机器均在同一局域网内）</h3><p>IPv4测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ping 49.123.105.124</span></span><br><span class="line">PING 49.123.105.124 (49.123.105.124) 56(84) bytes of data.</span><br><span class="line">64 bytes from 49.123.105.124: icmp_seq=1 ttl=64 time=0.075 ms</span><br><span class="line">64 bytes from 49.123.105.124: icmp_seq=2 ttl=64 time=0.074 ms</span><br><span class="line">64 bytes from 49.123.105.124: icmp_seq=3 ttl=64 time=0.092 ms</span><br><span class="line">64 bytes from 49.123.105.124: icmp_seq=4 ttl=64 time=0.066 ms</span><br><span class="line">64 bytes from 49.123.105.124: icmp_seq=5 ttl=64 time=0.067 ms</span><br><span class="line">^C</span><br><span class="line">--- 49.123.105.124 ping statistics ---</span><br><span class="line">5 packets transmitted, 5 received, 0% packet loss, time 4004ms</span><br><span class="line">rtt min/avg/max/mdev = 0.066/0.074/0.092/0.014 ms</span><br></pre></td></tr></table></figure></p><p>IPv6测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ping6 2001:250:4402:2001:20c:29ff:fe25:8888</span></span><br><span class="line">PING 2001:250:4402:2001:20c:29ff:fe25:8888(2001:250:4402:2001:20c:29ff:fe25:8888) 56 data bytes</span><br><span class="line">64 bytes from 2001:250:4402:2001:20c:29ff:fe25:8888: icmp_seq=1 ttl=64 time=0.099 ms</span><br><span class="line">64 bytes from 2001:250:4402:2001:20c:29ff:fe25:8888: icmp_seq=2 ttl=64 time=0.110 ms</span><br><span class="line">64 bytes from 2001:250:4402:2001:20c:29ff:fe25:8888: icmp_seq=3 ttl=64 time=0.126 ms</span><br><span class="line">64 bytes from 2001:250:4402:2001:20c:29ff:fe25:8888: icmp_seq=4 ttl=64 time=0.110 ms</span><br><span class="line">64 bytes from 2001:250:4402:2001:20c:29ff:fe25:8888: icmp_seq=5 ttl=64 time=0.113 ms</span><br><span class="line">^C</span><br><span class="line">--- 2001:250:4402:2001:20c:29ff:fe25:8888 ping statistics ---</span><br><span class="line">5 packets transmitted, 5 received, 0% packet loss, time 4003ms</span><br></pre></td></tr></table></figure></p><p>恭喜你，到此已经完成了CentOS 7的静态IPv6/IPV4配置</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-环境准备&quot;&gt;&lt;a href=&quot;#1-环境准备&quot; class=&quot;headerlink&quot; title=&quot;1 环境准备&quot;&gt;&lt;/a&gt;1 环境准备&lt;/h2&gt;&lt;p&gt;实验均在Vmware Workstation虚拟机上完成，上网方式选择桥接模式，保证网络支持IPv6,为了操作方便，我们使用root用户登录系统
    
    </summary>
    
      <category term="Linux 基础" scheme="https://lemon2013.github.io/categories/Linux-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="IPv6" scheme="https://lemon2013.github.io/tags/IPv6/"/>
    
      <category term="Linux" scheme="https://lemon2013.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
